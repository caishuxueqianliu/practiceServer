package G2.Protocol;

enum GoogleProtoType
{
	TypeLoginOK = 1;
	TypeCharacterInfo = 2;
	TypeGetMagic = 3;
	TypeAllInfo = 4;
	TypeGetEquip = 5;
	TypeEquipEquip = 6;
	TypeEquipMagic = 7;
	TypeUpdateCharacterProperty = 8;
	TypeUpdateNpcProperty = 9;
	TypeLevelUpEquip = 10;
	TypeLevelUpMagic = 11;
	TypeSellEquip = 12;
	TypeChangeNpcPosition = 13;
	TypeBattleResult = 14;
	TypeNewNpc = 15;
	TypeCreateCharacterResult = 16;
	
//	TypeNpcInfo = 17;
	TypeGetItem = 18;
	TypeGetAward = 19;
	
	TypeArenaData = 20;
	
	TypeReadMail = 21; // label the mail as read
	TypeSendMail = 22;
	TypeGetMail = 23;  // get all mails
	TypeMailReceived = 24;

	
	TypeAddFriend = 25;
	TypeGetFriends = 26;
	TypeSearchFriends = 27;
	TypeDeleteFriend = 28;
	
	TypeGetAttach = 29;
	
	TypeSpeak = 30;
	TypeGetAnnouncement = 31;
	TypePaomadeng = 32;
	
	TypeGetFans = 33;
	
	TypeGetRecruitInfo = 41;
	TypeRecruitNpc = 42;
	TypeRecruitNpcsList = 43;
	
	TypeGetLevelRecords = 51;
	
	TypeUseItem = 61;
	TypeBuy = 62;
	TypeBoughtVipGifts = 63;
	
	TypeGetSpirit = 71;
	TypeRecruitBySpirit = 72;
	TypeTransferLevel = 73;
	
	TypeTryPeiyang = 81;
	TypeConfirmPeiyang = 82;
	
	TypeCashOutDailyExp = 91;
	TypeEatDailyPeach = 92;
	TypeTodayPeachStatus = 93;
	TypeSignToday = 94;
	TypeReadyToSignToday = 95;
	
	TypeRetrieveFirstAchievedArenaAward = 101;
	TypeConvertPoints = 102;
	
	TypeLiudaoSummary = 111;
	TypeLiudaoStatus = 112;
	TypeAttackLiudao = 113;
	TypeLiudaoBuff = 114;
	TypeBuyLiudaoReviveTime = 115;
	TypeLiudaoRankList = 116;
	TypeTakeLiudaoFirstWinAward = 117;
	
	TypeGetHorse = 121;
	TypeCurrentHorses = 122;
	TypeRefreshHorses = 123;
	TypeEquipHorse = 124;
	TypeTrainHorse = 125;
	TypeUpdateHorseProperty = 126;
	TypeNpcEaten = 127;
	TypeHorseLevelTransfer = 128;
	TypeHorseEatBudda = 129;
	TypeSellHorse = 130;
	TypeHorseEatEquip = 131;
	TypeEquipEaten = 132;
	TypeActivateHorseGenius = 133;
	TypeRefreshHorseGenius = 134;
	TypeTrainHorseAll = 135;
	
	TypeGetMagicFragment = 141;
	TypeSummonMagic = 142;
	TypeGetRobberyTarget = 143;
	TypeRobberForMagic = 144;
	TypeMagicFragmentRobbed = 145;
	TypeSellMagicFragment = 146;
	
	TypeAttackLevel = 151;
	TypeBuyAttackLevelTimes = 152;
	TypeEatPeach = 153;
	TypeSweepLevel = 154;
	TypeAttackArena = 155;
	TypeCoolDownSweepLevel = 156;
	TypeRearrangeNpc = 157;
	TypeTeamInfo = 158;
	TypeTakeArenaTopAward = 159;
	
	TypeReleaseSoul = 161;
	TypeEvolveLevel = 162;
	TypeEvolve = 163;
	TypeCombineBudda = 164;
	
	TypeBuyStamina = 171;
	TypeBuyQi = 172;
	TypeBuyGodStamina = 173;
		
	TypeGetMyCollections = 181;
	
	TypeTopUp = 191;
	TypeGetFirstTopUpAward = 192;
	TypeGetSecondTopUpAward = 193;
	TypeGetDailyTopUpAward = 194;
	
	TypeTrainNpc = 201;
	TypeGetNpcTrainingSessions = 202;
	TypeFinishTrainingSession = 203;
	
	TypeRetrieveLevelAward = 211;
	TypeLevelUpAward = 212;
	
	TypeCurrentTempleTask = 213;
	TypeCompleteTempleTask = 214;
	TypeNextTempleTask = 215;
	TypeTempleDailyAward = 216;
	TypeTempleRanks = 217;
	TypeTempleAssistants = 218;
	TypeSendGhostResult = 219;
//	TypeGhostListInMyTemple = 220;
	TypeGhostStatus = 221;
	TypeKickGhost = 222;
	TypeCaptureHorseResult = 223;
	TypeLevelUpTower = 224;
	TypeLevelUpJinshen = 225;
	
	TypeGetMutualFriends = 241;
	
	TypeGuideAvailable = 251;
	TypeFinishGuide = 252;
	
	TypeUpdateEquip = 261;
	TypeUpdateMagic = 262;
	TypeUpdateHorse = 263;
	TypeLevelUpEquipAll = 264;
	TypeUpdateBook = 265;
	TypeUpdateItem = 266;
		
	TypeFenbaoStatus = 271;
	TypeFenbaoResult = 272;
	
	TypeLongGongStatus = 281;
	TypeExploreLongGongResult = 282;
	TypeGetWeiboAward = 283;
	TypeUseActivationCode = 284;
	
	TypeRepairEquip = 291;
	
	TypeGetAwardList = 301;
	TypeUpdateNpcList = 302;
	
	TypeGetGhostLordList = 311;
	TypeFightGhostLord = 312;
	TypeSummonGhostLord = 313;
	TypeClearGhostLordCoolDown = 314;
	TypeGhostLordTradeEvent = 315;
	TypeNewAddGhostLordEvent = 316;
	TypeGhostLordAwardDrawMsg=317;
	
	TypeDeleteNpc = 321;
	
	TypeJubaopenStatus = 331;
	TypeLevelUpJubaopen = 332;
	TypeTakeFromJubaopen = 333;
	
	TypeSaleList = 341;
	TypeBuySaleItem = 342;
	TypeCollectionAchievementStatus = 343;
	TypeTakeCollectionAchievementAward = 344;
	TypeLevelAchievementStatus = 345;
	TypeTakeLevelAchievementAward = 346;
	TypeTopUpAwardList = 347;
	TypeTakeTopUpAward = 348;
	TypeCollectTodayVipSalary = 349;
	TypeVipSalaryStatus = 350;
	TypeLingShiSaleList = 351;
	TypeBuyLingShiItem = 352;
	TypeTakeConsumptionAward = 353;
	TypeConsumptionAwardList = 354;
	TypeTopConsumptionList = 355;
	TypeReturnGiftTaken = 356;
	
	TypeTakeCommentAward = 361;
	
	TypeAllNpc = 401;
	TypeAllEquip = 402;
	TypeAllMagic = 403;
	TypeAllHorse = 404;
	TypeAllSpirit = 405;
	TypeAllItem = 406;
	TypeAllFragment = 407;
	TypeAllBook = 408;
	
	TypeInvitationStatus = 411;
	TypeTakeInvitationAward = 412;
	TypeConfirmInvitation = 413;
	
	TypeChangeName = 421;
	
	TypeZhenYao = 431;
	TypeZhenYaoStatus = 432;
	
	TypeGetBook = 441;
	TypeLevelUpBook = 442;
	TypeEquipBook = 443;
	TypeTradeBook = 444;
	
	TypeCurrentTask = 451;
	TypeTakeTaskAward = 452;
	TypeTaskAccomplished = 453;
	TypeTaskFinished = 454;
	
	TypeLundaoStatus = 461;
	TypeAttackLundao = 462;
	TypeAdmireLundao = 463;	
	TypeGanwu = 464;
	
	TypeTakeDownloadAward = 471;
	
	TypeRedbagStatus = 481;
	TypeDistributeRedbag = 482;
	TypeOpenRedbag = 483;
	
	TypeMonthVipStatus = 491;
	TypeTakeDailyMonthVipAward = 492;
	
	TypeDessembleEquip = 501;
	TypeCombineEquip = 502;
	TypeDessembleMagic = 503;
	TypeDessembleBook = 504;
	
	TypeUpdateBattlePower = 511;
	
	TypeGeneralError = 1001;
	TypeAnotherOnline = 1002;
	TypeAccountFrozen = 1003;
	TypeExecutionError = 1004;
	TypeKickedOff = 1005;
	TypeLiudaoNextDay = 1006;
	TypeSystemMessage = 1007;
	TypeVersionTooLow = 1008;
	
	TypeHeartBeat = 1011;
	
	TypeAlert = 1100;
	
	TypeTakeOnceTopUpAwards = 1101;		// 获取单笔充值奖励
	TypeGetAllOnceTopUpAwards = 1102;	// 获取所有单笔充值奖励信息
	
	TypeRefiningElixir = 1103;			// 神农鼎炼丹
	
	TypeGetNewcomerAwardList = 1110;	// 获取新手福利活动奖励列表
	TypeTakeNewcomerAward = 1111;		// 领取新手福利活动奖励
	
	TypeGetVIPShopItems = 1120;			// 获取所有VIP商店出售的物品
	TypeBuyVIPShopItem = 1121;			// 购买VIP道具
	
	TypeGetTianShanStatus = 1131;		// 获取天外仙山状态
	TypeExploreTianShan = 1132;			// 探索天外仙山
	
	TypeGetCurrentFateInfo = 1140;		// 气运信息
	TypeTakeFate = 1141;				// 抽签
	TypeExplainFate = 1142;				// 解签
	
	TypeFirstLuckPay = 1143;			//首次气运充值
	TypeLuckPay = 1144;	
	TypeLuckPayRatio = 1145;	
	TypeLuckPayAward = 1146;			//气运充值额外奖励
	
	TypeGetActorRankInfo = 1150;		// 获取升降阶仙友状态
	TypeUpgradeActorRank = 1151;		// 升阶仙友
	TypeReduceActorRank = 1152;			// 降阶仙友
	
	TypeTakeTreasureAwards = 1160;		// 兑换仙宝
	TypeGetTreasureAwardsList = 1161;	// 获取仙宝兑换状态
	
	TypeGemSaleList = 1170;				// 仙界商人出售列表
	TypeBuyGemShopItem = 1171;			// 购买仙界商人的物品
	
	TypeEquipEvolve = 1180;				// 装备升阶
	
	TypeTianYuanCollectStatus = 1190;	// 获取天缘收集情况
	TypeTakeTianYuanCollectAward = 1191;// 领取天缘收集奖励
	
	TypeSelectSect = 1200;				// 选择阵营
	TypeChangeSect = 1201;				// 转换阵营
	TypeChangeTempleMap = 1202;			// 迁入地图
	TypeClearChangeTempleMapTime = 1203;// 清除迁入地图CD
	TypeOtherTempleListInfo = 1204;		// 获取地图上神庙基本信息
	
	TypeGetSectShopItemList = 1205;		// 教派商店物品列表
	TypeBuySectShopItem = 1206;			// 购买教派商店物品
	TypeTakeSectTitleAward = 1207;		// 领取每日教派俸禄
	TypeTakeSectCreditAward = 1208;		// 领取教派声望奖励
	TypeGetSectRankInfo = 1209;			// 获取当前声望排行榜
	TypeGetSectAllJobInfo = 1210;		// 获取教派职务列表
	TypeAttackTemple = 1211;			// 攻击神庙
	TypeNewTitle = 1212;				// 获得新的称号
	TypeBuyTaoFaLing = 1213;			// 购买讨伐令
	TypeGetMapTempleCount = 1214;		// 获取每个地图神庙数量
	TypeSectAttackReportList = 1215;	// 获取教派战报
	TypeSectStrikeback = 1216;			// 教派反击
	TypeSectViewTeam = 1217;			// 获取跨服玩家阵容
	TypeAttackTempleNeedRefresh = 1218;	// 攻击神庙时必须刷新数据
	TypeSectStrikebackResult = 1219;	// 反击结果信息
	TypeSectTempleReturnToBase = 1220;	// 防守方是否被打回主城
	
	TypeAlchimestStatus = 1221; // 炼金状态
	TypeMakeAlchimest = 1222; // 制造炼金
	
	TypeTakeBelieverRankAward = 1223; // 获取信徒排行奖励
	
	TypeHasUnopitionStatus = 1224;// 未操作提示 
	
	TypeTopUpGoodList = 1225;//充值列表

	TypePlayAdReward = 1226; //播放广告奖励

	TypeGetShareStatus = 1227; //新浪分享的状态 0:不可分享(7天内分享过) 1:可以分享

	TypeGetSlotStatus = 1228; //占卜状态
	TypeRunSlotResult = 1229; //占卜结果
	TypeSysMessage = 1230; 	//全服通知

	TypeGetCampStatus = 1231; 		//获取征战关卡状态
	TypeCampAward = 1232; 			//领取征战关卡奖励

	TypeGetRuinStatus = 1233;			//获取遗迹探险状态
	TypeRuinDig = 1234;					//遗迹探险挖掘
	TypeBuyRuinDigCount = 1235;			//购买遗迹探险挖掘次数
	TypeResetRuin = 1236;				//重置遗迹探险
	TypeRuinNextFloor = 1237;			//遗迹探险进入下一层
	TypeGetRuinRank = 1238;				//获取遗迹探险排行
	TypeGetDiscountShopStatus = 1239;	//获取折扣商店状态
	TypeBuyDiscountItem = 1240;			//购买折扣商店道具

	TypeGetGodShipStatus = 1241;		//获取神格状态
	TypeActiveGodShip = 1242;			//激活神格
	
	TypeGetMeritTrackStatus = 1243;		//获取神格状态
	TypeActiveMeritTrack = 1244;		//激活神格

	TypeBigArenaOpenPanel = 2245;
	TypeScoreArenaFlush = 2246;		//
	TypeScoreArenaAttack = 2247;		//
	TypeScoreArenaGetRankList = 2248;		//
	TypeScoreArenaGetAwardList = 2249;		//
	TypeScoreArenaDrawAward = 2250;		//

	TypeScoreArenaShopBuy = 2252;		//
	//TypeScoreArenaBuyFlushTimes = 2253;		//
	TypeScoreArenaBuyAttackTimes = 2254;		//
	
	TypeOverlordArenaAttack = 2256;		//
	TypeOverlordWorship = 2257;		//
	//TypeOverlordDrawAward = 2258;		//
	
	// TypeOverlordGetDrawedAwardIds = 2259;		//
	//TypeOverlordGetWorshipedIds = 2260;		//
	TypeOverlordBuyAttackTimes = 2261;		//
	
	TypeScoreArenaEnter = 2262;		    //
	TypeOverlordArenaEnter = 2263;		//
	
	TypeCampRand = 1245;				//远征随机事件
	TypeBuyCampRandAward = 1246;		//购买远征随机折扣物品

	TypeBuyGodShipShopItem = 1247;		//购买成就商店折扣物品

	TypeGetPowerRank = 1248;			//获取战力排行榜
	TypeGetLevelRank = 1249;			//获取等级排行榜

	TypeGetSlotCountAwardStatus = 1250;		//获取占卜周奖励状态
	TypeSlotCountAward  = 1251;				//获取占卜奖励
	TypeGetSLotRank = 1252;					//获取占卜跨服排行
	
	TypeGiveupItem = 1253;         

    TypeGetOpenedActivitys = 1254;

    TypeEncounterList = 1256;				//奇遇列表信息
    TypeEncounterInfo = 1257;				//当前奇遇信息
    TypeEncounterAward = 1258;				//奇遇奖励信息

	TypeRequireSevenRewards = 1259;
	TypeGetAngelList = 1260;
	TypeDrawAngelAward = 1261;
	
	TypeTurnGetRankList = 1262;
	TypeGetTurntable = 1263;
	TypeDrawTurntable = 1264;
	
	TypeDrawTurntableScore = 1265;

    TypeOnlineInfo = 1266;				//在线奖励信息
    TypeOnlineAward = 1267;				//领取在线奖励信息
	TypeAttackArenaMul = 1268;

    TypeDessembleEquipMul = 1269;
	TypeDessembleMagicMul = 1270;
	TypeDessembleHorseMul = 1271;
	
	TypeMakeAlchemistMul = 1272;
	
	TypeTakeTreasureAwardsMul = 1273;
	
	TypeAllTitle = 1274;
	TypeEquipTitle = 1275;
	
	TypeGetDragon = 1276;
	TypeCallDragon = 1277;
	TypeDragonWish = 1278;
	
	TypeGetGarden = 1279;
	TypeDrawGarden = 1280;
	
	TypeBuyBigGarden = 1281;
	
	TypeGetLuck = 1282;
	TypeDrawLuck = 1283;
	TypeGetLuckAward = 1284;
	
	TypeSweepLiudao = 1285;
	
	TypeResetAttackLevelTimes = 1286;
	
	TypeGetGodPractice   = 1287;
	TypeClickGodPractice = 1288;
	TypeResetGodPractice = 1289;
	
	TypeConsecrate = 1290;
	TypeRelive = 1291;
	
	TypeAllNpcConsecrate = 1292;
	TypeSelectConsecrate = 1293;
	
	
	
	TypeBelieverPrayResourceInfo=1301; // 1 信徒祈祷状态
	
	TypeAllocatBelieverPrayOperResult=1302; // 2 分配信徒资源
	
	TypePickBelieverPrayResourceAwardResult=1303;    // 3 领取生成资源
	
	TypeTianBingStatusInfo=1304;              // 天兵状态
	
	TypeTianBingRecruitResult=1305;                 // 招募天兵

	TypeWeiwangBang=1306; 					// 威望排行榜
	TypeZhengfuBang=1307; 					// 征服排行榜
	TypeGuoliBang=1308; 					// 国力排行榜
	TypeZfBRewardRecord=1309; 				// 征服排行榜领取记录
	TypePickZhengfuBangRewardResult=1310; 	// 领取征服排行榜领取
	TypeGetSanjieStatus = 1401;
	TypeJoinCountryResult = 1402;
	TypeGetSanjieInfo = 1403;
	TypeGetSanjiePlayerInfo = 1404;
	TypeGetCityPlayers = 1405;
	TypeMoveCityResult = 1406;
	TypeAttackCityResult = 1407;
	TypeDamageCityResult = 1408;
	TypeSearchResult = 1409;
	TypePayForSearchResult = 1410;
	TypeGetGuanzhiData = 1411;
	TypeLeaveCountryResult = 1412;
	TypeAssignGuanzhiRewardResult = 1413;
	TypeForbidTalkingResult = 1414;
	TypeUpdateCountryNoticeResult = 1415;
	TypeGetBonusConfig	=	1416;
	TypePickBonusRewardResult	=	1417;
	TypeGetMessageBoard = 1418;
	TypeLeaveMessageResult = 1419;
	TypeGetAdRecord = 1420;
	TypeNewAdRecord = 1421;
	TypeSanjieSpeak = 1422;
	TypeSanjieSpeakResult = 1423;
	TypeBuyTiliResult = 1424;
	TypeGetNewestTenSpeak = 1425;
	TypeCityPlayer = 1426; 
	TypeLevelUpJuewei = 1427;
	TypeBuyMoveCountResult = 1428;
	TypeMobaiResult = 1429;
	TypePickWeekRewardResult = 1430;
	TypeGainCityCelebrationReward = 1431;
	
	TypeBuyLeftClickTimes = 1500; 
	
	TypeUserShop  = 1501; 
	TypeBuyRuinShopItem = 1502; 
	TypeFlushRuinShop = 1503; 
	
	TypeDecompose = 1504; 
	
	// by lixiang.you 神职系统
	TypeGodTitles = 1520; // 拉取神职信息，api/player/godTitles, 响应GodTitleInfoDTO
	TypeGodTitleWear = 1521; // 装备神职称号，api/player/godTitleWear/npcId/titleId, 响应GodTitleWearsDTO
	TypeGodTitleQuickWear = 1522; // 一键装备称号，api/player/godTitleQuickWear, 响应GodTitleWearsDTO
	TypeGodTitleDraw = 1523; // 激活神职，api/player/godTitleDraw, 响应GodTitleDrawDTO

	TypeAnswer = 1432;
	TypeTakeAnswerAward = 1433;
	TypeAllAnswerQuestion = 1434;
	TypeAnswerClose=1435;

	// 找回系统
	TypeResBackInfo = 1524; // 资源找回信息
	TypeResBack = 1525; // 资源找回
	// 时装系统
	TypeSkinBuy = 1526; // 时装购买
	TypeSkinUse = 1527; // 时装使用
	TypeSkinRank = 1528; // 时装排行榜
	
	TypeProposInfo = 1550; 	//评议信息
	TypeProposRefresh = 1551;
	TypeProposSelect = 1552;
	TypeProposAward = 1553;
	TypeProposShow = 1554;

	TypeInvite = 1555; 
	TypeRequireInviteAward = 1556;
	TypeGetInviteActivitys = 1557;
	TypeExchangeInviteVipExp = 1558;
	
	TypeInstanceOpen = 1560;	//活动开放控制
	
	TypeFiveStep = 1561;			//五步圣将信息
	TypeFiveStepAward = 1562;		//五步圣将奖励
	
	TypeGetChatInfo  = 1571;

	
	TypeKingInfo = 3301;
	TypeNameGuohaoResult = 3302;
	TypeGuoliRankInfo = 3303;
	TypeGetFeiziList = 3304;
	TypeFeiziInfo = 3305;
	TypeCeFengResult = 3306;
	TypeShangCiResult = 3307;
	TypeDecideFeiziInviteResult = 3308;
	TypeChongXingResult = 3309;
	TypeShengChanResult = 3310;
	TypeXunFangResult = 3311;
	TypeGetChildInfoList = 3312;
	TypeChildInfo = 3313;
	TypeJibaiResult = 3314;
	TypeContactEnvoyResult = 3315;
	TypeEnvoyAllInfo = 3316;
	TypeTakeEnvoyAwardResult = 3317;
	TypeInitEnvoyAllInfo=3318;
	TypeNameChildResult = 3320;
	TypeFengJueResult = 3321;
	TypeDealEventResult = 3322;
	TypeDealTourEventResult = 3323;
	TypeGetZhiHunInfo = 3324;
	TypeChildMarryResult = 3325;
	TypeChangeZhiHunInfoResult = 3326;
	TypeMainCityInfo = 3327;
	TypeGetScienceInfo = 3343;
	TypeLightScienceResult = 3344;
	TypeShenShouInfo=3345;
	TypeSystemOpenNotify = 3346;
	TypeChooseFeiziStoryResult = 3347;
	TypePickTianshenResult = 3348;
	TypeScienceSpeedUpResult = 3351;
	TypeInteractResult = 3352;
	TypeFinishFeiziEventResult = 3353;
	TypeBuyMerchantResult = 3354;
	TypeTakeSaveFeiziResult = 3355;
	TypeResetTiliResult = 3356;
	TypeTuXiResult = 3357;
	TypeBuyShieldResult = 3358;
	TypeGetStatueInfo = 3359;
	TypeStatueMobaiResult = 3360;
	TypeStatueShouquResult = 3361;
	TypeBarrackInfoList = 3362;
	TypeBarrackLvUpResult = 3363;
	TypePickBarrackAwardResult = 3364;
	TypeBarrackSendChildResult = 3365;
	TypeBarrackSpeedUpResult = 3366;
	TypeGetScienceAlert = 3367;
	TypeGetMonthCardStatus = 3368;
	TypePickMonthCardResult = 3369;
	TypeUseTigerResult = 3370;
	TypePickAdvanceNoticeAwardResult = 3371;
	TypeGetGoldEggInfo = 3372;
	TypeSmashGoldEggResult = 3373;
	TypeHelperInfo = 3374;
	TypeHelperRateInfo = 3375;
	TypeRateHelperResult = 3376;
	TypeSkinExpireNotice = 3377;
	TypeReadDocumentResult = 3378;
	TypeGetFeiziRank = 3379;
	TypeGetChildRank = 3380;
	TypeGetWarRank = 3381;
	TypePickWarBoxResult = 3382;
	TypePickBuildingProgressRewardResult = 3383;
	TypeBuildingConstructResult = 3384;
	TypePublishKingTaskResult = 3385;
	TypePickKingTaskRewardResult = 3386;
	TypeChangeTomorrowSettingResult = 3387;
	TypeGetWishList = 3388;
	TypeWishResult = 3389;
	TypeHelpWishResult = 3390;
	TypeSanjieOpenState = 3391;
    TypePickSanjieOpenRewardResult = 3392;
    TypeAttackThiefResult = 3394;
    TypeLundaoRedPoint = 3395;
    TypeGetDinnerListInfo = 3396;
    TypeGetDinnerDetailInfo = 3397;
    TypeHoldDinnerResult = 3398;
    TypeJoinDinnerResult = 3399;
    TypeGuideMarryResult = 3400;
    TypeWarcryResult = 3401;
    TypeSaveFeiziKarmaStageResult = 3402;
    TypePersuadeFeiziResult = 3403;
    TypeLvUpEquipTypeResult = 3404;

	TypeGetActivityLikeInfo = 11000;//集赞活动
	TypeGetActivityShareInfo = 11001;//分享有礼活动状态
	TypePickActivityShareAwardResult = 11002;//领取分享有礼活动奖励返回结果
	// 内存优化版本
	TypeMagicExpsNotify = 1529; // 刷新经验丹
	
	TypeGetRecordLineupList = 1530; // 
	TypeRendeShopMsg = 1531; // 仁德商店

	TypeGetCampStatusMuti = 1532;
	TypeCampRandMul = 1533;
	TypeSwornInfoMsg = 1540;	//结拜信息
	TypeDoSwornMsg = 1541;
	TypeUpSwornMsg = 1542;
	TypeLineSwornMsg = 1543;
	
	TypeCampAwardMul = 1600; 	//
	
	// 外交系统新增 协议号
	TypeDispChildTaskAwardResult=1601;//
	TypePickUpDispAward=1602;
	TypePickUpFeizi=1603;
	TypeChildBackHomeList=1604;
	TypeCompletNewUnlockEnvoy=1605;

	TypeSysTimeMsg = 1611; // 系统时间
	TypeFruitPrizeMobai=1620;
	TypeGetFriut = 1621;
	TypeSelectFriut = 1622;
	TypeDrawFriut = 1623;
	
	TypeGetBaoku = 1624;
	TypeBaokuPrizeRecord = 1625;
    TypeFruitSystemMessageList = 1626;
    TypeFruitPrizeMobaiInfo = 1627;
	TypeFruitFortuneInfo=1628;
	TypeFruitFortuneAward=1629;//水果机福神领奖

	// 攻城战
	TypeWarInfoMsg = 1630; // 攻城战信息
	TypeAttackCityMsg = 1631; // 攻城
	TypeFormationUpMsg = 1632; // 升级阵法
	TypeFormationChangeMsg = 1633; // 使用阵法
	TypeCityTaxMsg = 1634; // 税收	
	TypeLandBestowMsg = 1635; // 封地
	
	TypeClientDataSetMsg = 1636; // 设置客户端变量
	TypeSysBuffNotifyMsg = 1637; // 通知客户端新BUFF
	TypeGetHeroCollectionList = 1639;
	
	// 武将点赞
	TypeNpcEvaluateMsg = 1661; // 武将评价
	TypeNpcEvaluateInfoMsg = 1662; // 武将评价信息
	
	// 调查问卷
	TypeQuestionInfoMsg = 1665; // 调查问卷信息
	TypeQuestionAnswerMsg = 1666; // 回答问卷
	
	// 塔防功能
	TypeProtectLwMsg = 1700; // 保卫长城
	TypeProtectLwRankMsg = 1701; // 保卫长城排行榜
	TypeProtectLwRewardMsg = 1702; // 保卫长城阶段奖励
	TypeAmbushMsg = 1703; // 十面埋伏	
	TypeWeekStageMsg = 1704; // 周末关卡奖励，打输了别上传信息
	TypeProtectLwChallenge=1705;//守卫长城开始挑战
	
	// 客服回复消息
	TypeCsMessage = 1800; 
	
	// 巧变应敌功能
	TypeQbInfoMsg = 1900; // 巧变功能信息
	TypeQbFormationMsg = 1901; // 设置阵型
	TypeQbAttackMsg = 1902; // 巧变攻击
	TypeQbSweepMsg = 1903; // 巧变扫荡
	TypeQbBuyAttackTimesMsg = 1904; // 购买攻击次数
	TypeQbBuySweepTimesMsg = 1905; // 购买扫荡次数
	TypeQbBattleInfoMsg = 1906; // 巧变战报
	// 主线任务
	TypeTaskInfoMsg = 1907; // 主线任务信息
	TypeTaskCommitMsg = 1908; // 任务提交
	
	// 攻城掠地任务
	TypeAttackCityCommitTaskMsg = 1909;
	// 审讯囚徒改进
	TypeGodPracticeAwardDrawMsg = 1910; // 领取审讯囚徒奖励
	TypePaymentOk = 1911;//充值到账
    // 实战演练
    TypeAllXGameData=1912;
    TypeXGameData=1913;
    TypeXGameActiveTask=1914;
    // 周末打折[暂时不开通]
    TypeZmdzData=1915;
    TypeGetAskGodWeeklyRewardList = 1916;//每周请神奖励
}

//每周请神奖励
message GetAskGodWeeklyRewardList{
	repeated Award awards = 1;//每周请神奖励列表
}
enum LanguageNum{
	SYSTEM_UPGRADE_MESSAGE = 1000; 		//维护升级...
	SYSTEM_VERSION_UPGRADE_MESSAGE = 1001;  //版本维护中...
	SYSTEM_EXCEPT_MESSAGE = 1002;  //系统异常:
	SYSTEM_SLOT_EXCEPT_MESSAGE = 1003;  //跨服服务器无法连接!
	TEMPLATE_LEVEL_AWARD = 1004;  //政厅升级
	ACHEMIST_LEVEL_AWARD = 1005;  //市集升级
	SYSTEM_MAIL_SUBJECT = 1006;  //系统邮件
	SHOW_LEVEL = 1007;  //%s(%s)级
	ACTIVTTY_NOT_OPEN = 1008;  //活动未开启
	ACTIVTTY_CLOSED = 1009;  //活动关闭
	TREASURE_CHANEL_FAIL = 1010;  //兑换失败
	LORD_SYSTEM_FINDER_A = 1011;  //赵云
	LORD_SYSTEM_FINDER_B = 1012;  //马云禄
	LORD_SYSTEM_FINDER_C = 1013;  //吕玲绮
	CLOUD_NOT_ADD_FRIEND = 1014;  //对方不能加好友
	ADD_FRIEND_TEXT = 1015;  //阁下在中原威名远扬，引得%s关注。是否同样关注他
	REMOVE_FRIEND_TEXT = 1016;  //%s不再关注你，是否询问他原因？
	LIUDAO_AWARD_TEXT = 1017;  //恭喜您在昨日千里单骑排行榜中位列%d名，特赐予您大量元宝
	TEMPLE_AWARD_TEXT = 1018;  //恭喜您在上周政令排行榜中位列%d名，特赐予您大量奖励
	FIRST_TOPUP_AWARD_MAIL = 1019;  //首充礼包未领取奖励补偿
	DAY_TOPUP_AWARD_MAIL = 1020;  //每日充值奖励
	SECEND_TOPUP_AWARD_MAIL = 1021;  //次充礼包未领取奖励补偿
	DAYLY_TOPUP_AWARD_MAIL = 1022;  //每日首充礼包未领取奖励补偿
	ACCOUNT_RELOGIN = 1023;  //您的帐号在其他地方登录
	ACCOUNT_RELOGIN_TIME_OUT = 1024;  //登录超时,需要重新登录
	CHAT_CONDITION_MESSAGE = 1025;  //请达到45级或VIP3级
	EVOLVELEVEL_CONDITION_MESSAGE = 1026;  //强制升级,请达到VIP5级以上
	MESSAGE_FORMAT_ERROR = 1027;  //字数不符
	MESSAGE_CONTEXT = 1028;  //聊天暂时无法使用，加入官方群与其他玩家聊天(游戏公告内附群号)
	ATTEND_ACTIVITY = 1029;  //参加活动
	LEVELUP_AWARD_TEXT = 1030;  //恭喜你, 到达%d级！
	AWARD_NOTICE_NPC_MESSAGE = 1031;  //恭喜{word:"%s",color:"#FFFF00"}，通过%s，得到了{word:"%s",color:"#FF6767"}加入帐下，真是可喜可贺」
	AWARD_NOTICE_EQUIP_MESSAGE = 1032;  //恭喜{word:"%s",color:"#FFFF00"}，通过%s，得到了%s级装备{word:"%s",color:"#FF6767"}，真是可喜可贺」
	AWARD_NOTICE_MAGIC_MESSAGE = 1033;  //恭喜{word:"%s",color:"#FFFF00"}，通过%s，得到了%s级随从{word:"%s",color:"#FF6767"}，真是可喜可贺」
	AWARD_NOTICE_HORSE_MESSAGE = 1034;  //恭喜{word:"%s",color:"#FFFF00"}，通过%s，得到了%s级美人{word:"%s",color:"#FF6767"}，真是可喜可贺」
	SPIRIT_NO_EXIST = 1035;  //碎片不存在
	SPIRIT_NO_ENOUGH = 1036;  //碎片不足
	NPC_NO_EXIST = 1037;  //此将领不存在
	NPC_HAS_EXIST = 1038;  //此将领已经存在
	NPC_IN_POSITION = 1039;  //此将领已经上阵
	NPC_NO_POSITION = 1040;  //此将领未上阵
	NPC_COULD_NOT_REMOVE_MAIN = 1041;  //主将领不能更换
	POSITION_NO_EXIST = 1042;  //位置未激活
	PARAM_ERROR = 1043;  //参数错误
	EQUIP_NO_EXIST = 1044;  //装备不存在
	EQUIP_STRENGTH_MAX_LEVEL_TIP = 1045;  //强化等级不能大于玩家等级
	COULD_NOT_DESSEMBLE = 1046;  //不能分解
	STRENGTH_FAIL = 1047;  //强化失败
	HAS_MAX_LEVEL = 1048;  //已经达到最大等级
	MAGIC_NO_EXIST = 1049;  //随从不存在
	MAGIC_COULD_NOT_EQUIP_GENIUS = 1050;  //天赋法宝无法装备
	HORSE_NO_EXIST = 1051;  //美人不存在
	GENIUS_POSITION_NOT_EXIST = 1052;  //天赋位不存在
	HAS_MAX_GENIUS_NUMBER = 1053;  //已激活最大天赋数
	RECRUIT_BY_SPIRIT = 1054;  //碎片合成
	COIN_NOT_ENOUGH = 1055;  //铜钱不足
	DOLLAR_NOT_ENOUGH = 1056;  //元宝不足
	ITEM_NOT_EXIST = 1057;  //道具不存在
	ITEM_NOT_ENOUGH = 1058;  //道具不足
	FREE_COUNT_NONE = 1059;  //免费次数已经用完
	POTENTIAL_FAIL = 1060;  //进阶失败
	EVOLVE_LEVEL_FAIL = 1061;  //晋升失败
	EVOLVE_FAIL = 1062;  //突破失败
	COMBINE_FAIL = 1063;  //合成失败
	NPC_NOT_ENOUGH = 1064;  //需要将领不足
	NPC_IN_POSITION_OR_HUFA = 1065;  //已上阵或助阵的将领，无法成为合成材料，请将将领下阵再进行合成！
	NPC_EVOLVE = 1066;  //将领晋升
	EVOLVE = 1067;  //晋升
	COMBINE = 1068;  //合成
	DESSEMBLE = 1069;  //分解
	MAGIC_BACK_EXP = 1070;  //【%s】%s成功，向你退还全部强化经验，点击领取，可以获得奖励
	NPC_BACK_POTENTIAL = 1071;  //【%s】%s成功，系统返还您全部进阶道具
	NPC_BACK_POTENTIAL_EX = 1072;  //【%s】%s成功，系统返还您全部进阶道具，复活值已加入到供奉内查收
	NPC_BACK_POTENTIAL_EX_1 = 1073;  //【%s】%s成功，系统返还您全部进阶道具，复活值已加入到供奉内查收
	EQUIP_BACK_STRENGTH = 1074;  //【%s】分解成功，向你退还全部强化费用%d铜钱
	USE_STAMINA_ITEM = 1075;  //使用成功，增加%d体力
	USE_GOD_STAMINA_ITEM = 1076;  //使用成功，增加%d政令
	USE_QI_ITEM = 1077;  //使用成功，增加%d精力
	COULD_NOT_USE = 1078;  //无法使用
	COULD_NOT_COND = 1079;  //不满足条件
	USE_LEVEL_NOT_ENOUGH = 1080;  //使用等级不够
	ITEM_OR_DOLLAR_NOT_ENOUGH = 1081;  //需要的道具或元宝不够
	USE_ITEM_NUMBER_FULL = 1082;  //今日使用次数已满，请明天再使用
	USE_VIP_ITEM = 1083;  //打开VIP%d级礼包
	USE_NORMAL_ITEM = 1084;  //打开%s
	QULITY_0 = 1085;  //丁
	QULITY_1 = 1086;  //丙
	QULITY_2 = 1087;  //乙
	QULITY_3 = 1088;  //甲
	QULITY_4 = 1089;  //圣
	QULITY_5 = 1090;  //神
	QULITY_6 = 1091;  //主
	QULITY_NONE = 1092;  //未知
	STAMIMA_NOT_ENOUGH = 1093;  //体力不足
	ATTACK_NUMBER_NOT_ENOUGH = 1094;  //已经挑战过本关卡
	ATTACK_NUMBER_OUT = 1095;  //关卡超过当日限制次数
	PROGRESS_NOT_ENOUGH = 1096;  //进度不足
	NOT_ALL_THREE_STAR = 1097;  //未达到本场景全三星条件
	GOD_STAMIMA_NOT_ENOUGH = 1098;  //政令不足
	QI_NOT_ENOUGH = 1099;  //精力不足
	LEVEL_NO_EXIST = 1100;  //关卡不存在
	LEVEL_NO_ENOUGH = 1101;  //等级不足
	LEVEL_INVAILD = 1102;  //关卡信息不对
	SWEEP_VIP_CONDITION = 1103;  //需要VIP等级大于等于1
	SWEEP_DOING = 1104;  //还在扫荡中
	BUY_MAX_COUNT = 1105;  //购买上限
	NORMAL_TASK_NOT_EXIST = 1106;  //普通任务不存在
	FIGHT_TASK_NOT_EXIST = 1107;  //战斗任务不存在
	CURRENT_TASK_NOT = 1108;  //不是当前激活的任务
	CURRENT_TASK_GOT = 1109;  //当前任务已经领取
	TEMPLE_LEVEl = 1110;  //大厅行政
	COULD_NOT_CATCH = 1111;  //无法虏获
	COULD_NOT_COLLECT = 1112;  //无法领取
	TARGET_NOT_EXIST = 1113;  //目标不存在
	SCORE_NOT_ENOUGH = 1114;  //目标不存在
	COULD_NOT_TRADE = 1115;  //无法兑换
	SCORE_EXCHANGE = 1116;  //积分兑换
	SHOP_LOT = 1117;  //商城招将
	AWARD_VIP_NOTICE_MESSAGE = 1118;  //{word:"%s",color:"#FFFF00"}获得了VIP%d至尊称号，闻名天下。
	REVIVETIME_NOT_ENOUGH = 1119;  //没有复活次数
	HAS_CROSS_LEVEl = 1120;  //已经挑战通过
	SUMMONLORD = 1121;  //蛮族入侵
	SUMMONLORD_COUNT_NOT_ENOUGH = 1122;  //侦察次数不够
	SUMMONLORD_IN_CD = 1123;  //召唤战斗冷却中
	TARGET_IS_DEAD = 1124;  //目标已死亡
	HAS_EAT = 1125;  //已经吃过
	TIME_NOT_COME = 1126;  //时间未到
	HAS_TODAY_CANBAI = 1127;  //今日已经拜过
	CONDITION_NOT_ENOUGH = 1128;  //条件不足
	HAS_BUY = 1129;  //已经购买
	BUY_COUNT_NOT = 1130;  //超过购买次数
	GOOD_NOT_EXIST = 1131;  //商品不存在
	COLLECTION_TIANYUAN = 1132;  //将星录
	ACHEMIST_FEATURE = 1133;  //炼金工坊
	NAME_COULD_NOT_USE = 1134;  //含有非法文字
	NAME_HAS_EXIST = 1135;  //名称已经存在
	MAX_BOUGHT_TIMES = 1136;  //最大购买次数
	SHENBEI_AWARD_CONTENT = 1137;  //恭喜你在四海扬威中勇夺冠军，特赐予您丰厚的奖励！
	LORD_SYS_AWARD = 1138;  //你成功击败了蛮族%s，奖励你200元宝
	LORD_NORMAL_AWARD = 1139;  //你和好友一起击败蛮族，奖励你20元宝
	GET_AWARD_DOLLAR = 1140;  //观看视频奖励%d元宝
	LIUDAO_LOCK_TIME = 1141;  //排行榜已锁定
	LUNDAO_LOCK_TIME = 1142;  //扬威已经锁定
	AD_AWARD_UPPER_LIMIT = 1143;  //播放视频奖励到达上限,请明日再来
	NOTIFY_GOLD_IS_NOT_ENOUGH = 1144;  //铜钱不足
	NOTIFY_DIAMOND_IS_NOT_ENOUGH = 1145;  //元宝不足
	NOTIFY_LEVEL_IS_NOT_ENOUGH = 1146;  //等级不足
	NOTIFY_POSTION_IS_NULL = 1147;  //位置不存在
	NOTIFY_FIGHT_END = 1148;  //战斗结束
	NOTIFY_HAS_BEEN_OCCUPIED = 1149;  //已经占领
	NOTIFY_MISSING_PIECES = 1150;  //缺少扬威令
	NOTIFY_FIGHT_START = 1151;  //战斗已经开始
	NOTIFY_ALREADY_WORSHIP = 1152;  //已经拜过王始
	NOTIFY_WORSHIP_GOD = 1153;  //{word:"%s",color:"#FFFF00"} 使君真是太厉害了，{word:"%s",color:"#FFFF00"} 向他致以崇高的敬意」
	NOTIFY_CRUSADE_BEAT_YOU = 1154;  //%s在四海扬威中击败了你，快去复仇吧！
	NOTIFY_ENEMIES_CHALLENGE_SUCCESS = 1155;  //对方在演武场中挑战我方成功，我方排名不幸滑落至%d名
	NOTIFY_ENEMIES_CHALLENGE_FAILURE = 1156;  //对方在演武场中挑战我方失败，真是自不量力
	SERVER_MAINTAINED = 1157;  //服务器维护中...
	SLOT_MAX_COUNT = 1158;  //已达今日最大观星次数
	SLOT_MAX_COUNT_2 = 1159;  //剩余次数不足%d次
	SLOT_COUNT_NOT = 1160;  //周观星次数不足
	SLOT_AWARD_HAS_GOT = 1161;  //该奖励已经领取过了
	SLOT_AWARD_TITLE = 1162;  //观星跨服排名奖励
	SLOT_AWARD_TEXT = 1163;  //恭喜您在上周观星跨服排行榜中位列%d名，特赐予您大量奖励
	CAMP_ERROR = 1164;  //远征关卡征讨错误
	CAMP_AWARD_ERROR = 1165;  //领取远征关卡奖励错误
	CAMP_RELIVE_ERROR = 1166;  //正在军团远征探索中，不能进行变身－
	VIP_LEVEL_INVAILD = 1167;  //VIP等级不足
	DIG_ALEARY = 1168;  //已经挖掘过
	DIG_COUNT_INVALID = 1169;  //挖掘次数不够
	DIG_NEXT_FLOOR_INVALID = 1170;  //下一层没有开启
	DIG_RESET_INVALID = 1171;  //重置次数不足
	DIG_BUY_LIMIT = 1172;  //购买次数超过上限
	DISCOUNT_BUY_LIMIT = 1173;  //购买物品不对
	DIG_AWARD_TITLE = 1174;  //摸金跨服排行奖励
	DIG_AWARD_TEXT = 1175;  //恭喜您在上周摸金校尉跨服排行榜中位列%d名，特赐予您大量奖励
	DIG_NO_AWARD_TEXT = 1176;  //很遗憾您在上周没有达到%d积分，所以没有领取到奖励，请下周再接再厉。
	ACTIVITE_GODSHIP = 1177;  //激活技术不对
	ACTIVITE_GODSHIP_ALREDEAY = 1178;  //已经激活
	ACTIVITE_GODSHIP_LEVEL = 1179;  //前一层技术没激活
	ACTIVITE_GODSHIP_GRADE = 1180;  //上一等级没激活
	DIG_LOCK_TIME = 1181;  //挖掘排行榜已锁定
	SLOT_LOCK_TIME = 1182;  //观星排行榜已锁定
	ACTIVITE_GODSHIPMARK = 1183;  //激活成就印迹不对
	ACTIVITE_GODSHIPMARK_ALREDEAY = 1184;  //已经激活
	ACTIVITE_GODSHIPMARK_LEVEL = 1185;  //前一层技术没激活
	ACTIVITE_GODSHIPMARK_GRADE = 1186;  //上一等级没激活
	CAMP_IN_STATUS = 1187;  //将领正在探索中，不能进行任何操作
	SHOPITEM_HAS_BUY = 1188;  //此物品已购买，不能重复购买
	POWER_AWARD_TEXT = 1189;  //恭喜%s在战力排行中获得%d名，特赐予你大量奖励
	LEVEL_AWARD_TEXT = 1190;  //恭喜%s在等级排行中获得%d名，特赐予你大量奖励
	OVERLORD_AWARD_TEXT = 1191;  //恭喜你在赤壁之战争锋赛中获得第%d名，特赐予你大量奖励
	TITLE_TEXT = 1192;  //恭喜获得\" %s \"称号！可前往阵容，选择赵云更换称号进行佩戴
	OVERLORD_ENTER = 1193;  //喜您获得了本周争锋赛的参赛资格，争锋赛将在周五06：00正式开启，请您准时参加
	SERVER_NO_GROUP = 1194;  //当前服务器的跨服赛区暂未开启
	ENCOUNTER_NO_EXITS = 1195;  //当前奇遇不存在
	ONLINEREWARD_NO_EXITS = 1196;  //当前在线奖励不存在
	ONLINEREWARD_TIME_NOT = 1197;  //未达到领奖时间
	GARDENREWARD_NO_EXITS = 1198;  //当前秘密花园奖励不存在
	ITEM_NOT_ENOUGHT = 1199;  //道具不足
	RELIVE_CONDITION_MESSAGE = 1200;  //复活条件不够
	Consecrate_CONDITION_MESSAGE = 1201;  //供奉条件不够
	FightGhost_Award = 1202;  //恭喜你获得讨伐恶魔奖励
	TODAY_KILL_ENOUGH = 1203;  //今日已击杀好友恶魔3次
	TARGET_TIME_PASSED = 1204;  //敌人已逃跑
	DIG_BIG_GO_OVER = 1205;  //恭喜您已挖完遗迹，剩余铲子%d自动折算成积分%d和古币%d
	GOD_INFO_TOP = 1206;  //官位已经达到顶级
	GOD_UNLOCK_LIMIT = 1207;  //官位解锁限制，条件不足
	GOD_TITLE_LOCK = 1208;  //官位未解锁
	GOD_TITLE_NO_MAIN = 1209;  //主角不能用封号
	ResBack_NOT_OPEN = 1210;  //资源找回功能未开启
	ResBack_BACKED = 1211;  //系统资源已经找回
	ResBack_NO_BACK = 1212;  //昨日已经做过，无需找回
	SKIN_NOT_FOUND = 1213;  //皮肤不存在
	SKIN_IS_EXSIST = 1214;  //皮肤已经购买
	SKIN_ITEM_NOT_ENOUGH = 1215;  //皮肤道具不足
	FACE_RANK_AWARD_TEXT = 1216;  //恭喜主公在的仪容榜中获得第%d名，给您奉上丰厚奖励！
	ANSWER_NOT_COMPLETE = 1217;  //没完成问答
	ANSWER_VIP_NOT = 1218;  //VIP等级不满足条件
	ANSWER_MUL_NOT = 1219;  //倍数不对
	TIME_NOT = 1220;  //未到开放时间
	INVITE_NOT_EXSIST = 1221;  //此邀请码不存在
	INVITE_NOT_SELF = 1222;  //无法使用自己的邀请码
	INVITE_NOT_COMPLETE = 1223;  //没完成条件
	INVITE_ALLREADY_RE = 1224;  //已经领取
	PROPOS_REFRESH_COUNT_NOT = 1225;  //评议刷新次数不足
	SHARE_AWARD_TEXT = 1226;  //分享有礼
	SHARE_AGAIN_NOT = 1227;  //7天只能领取一次分享奖励哦
	CHOUJIANG_MODE_1 = 1228;  //普通魔石
	CHOUJIANG_MODE_2 = 1229;  //豪华模式
	CHOUJIANG_MODE_3 = 1230;  //至尊模式
	LIKE_ACTIVITY_NOT_OPEN = 1231;  //集赞活动未开启?
	SHARE_ACTIVITY_NOT_OPEN = 1232;  //分享活动未开启?
	SHARE_ACTIVITY_AWARD_HASGOT = 1233;  //分享活动奖励本周已领!
	SHARE_ACTIVITY_MAIL_INFO = 1234;  //恭喜你获得分享有礼奖励?
	GUANKA_REWARD_INFO = 1235;  //挑战关卡
	ONLINE_REWARD_INFO = 1236;  //在线随机宝箱
	SHENGLONG_REWARD = 1237;  //召唤陈寿

	DAILY_MAIL_SUBJECT = 1238;  //登陆送大奖
	DAILY_MAIL_CONTENT = 1239;  //每日登入好礼相送，天天都有哦。

	GARDEN_MAIL_SUBJECT = 1240;  //天天都有哦。
	GARDEN_MAIL_CONTENT = 1241;  //活动开启期间，每天登入可领取一定数量骰宦Ի动开启期间，每天登入可领取一定数量骰子
	
	ENVOY_UNLOCK = 1242;  //未解锁该使臣
	ENVOY_DOUBLE_LIMIT = 1243;  //当日不能重复上供
	ENVOY_UNDEFINED = 1244;  //该外交使臣不存在
	JOIN_IN_EXPLORE_NOT = 1245;  //%s不能参与探索
	FORMATION_ERROR = 1246; //阵型参数有误
	EQUOPPED_MAGIC_WEAPON = 1247;  //装备法宝
	EQUOPPED_WEAPON = 1248;  //装备装备
	GEAR_MOUNTS = 1249;  //装备坐骑
	STRENGTHEN_EQUIPMENT = 1250;  //强化装备
	STRENGTHEN_MAGIC_WEAPON = 1251;  //强化法宝
	DRAW_CARDS = 1252;  //抽卡
	ADD_CARDS_ATTACK = 1253;  //上阵卡牌
	NEXT_DAY = 1254;  //模拟下一天
	ATTACK_GAME_COPY = 1255;  //攻击副本
	HAS_NOT_OPEN = 1256; //未开启
	NOT_OPEN_SPEEDUP_NOT = 1257;  //奇迹未开启,不能开启加速
	OPEN_SPEEDUP_NOT = 1258;  //此奇迹已经开启,无法执行加速操作
	MIRACLE_NOT_EXIST = 1259;  //此奇迹不存在
	PHYSICAL_STRENGTH_FULL = 1260;  //体力已满!
	PROTOCOL_ERROR_RELOGIN = 1261;  //解析协议错误,重新登录
	NOT_ALLOW_REPEAT_SEND = 1262;  //不允许消息重复发送
	MESSAGE_NOT_EXIST = 1263;  //消息Id不存在
	SIGN_ERROR = 1264;  //签名不一致
	SERVER_BUSY = 1265;  //服服务器繁忙,请稍候再试
	TEST_AWARD = 1266;  //测试奖励
	EVERYDAY_RECHANGE = 1267;  //每日充
	NAME_VALIDATE = 1268;  // [实名认证]恭喜您实名认证成功，特发放200元宝奖励
	ACHEIVER_GIRL = 1269;  //  恭喜主公获得美人青睐，领取后前往道具界面打开，即可迎娶妃子，软玉在怀」
	VIP_COMPENSATE = 1270;  //  VIP礼包妃子补偿
	GET_SYSTEM_COMPENSATE = 1271;  //恭喜主公获得美人青睐，收到了美人信物，领取后前往道具界面使用，即可迎娶该妃子
	SYSTEM_COMPENSATE = 1272;  //系统补偿
	NATIONAL_POWER_RANK = 1273;  //国力排行奖励
	NATIONAL_POWER_RANK_CONTENT = 1274;  //恭喜国力排行第%s名。
	ACCOUN_IS_DISABLE = 1275;  //账号被禁用?
	IDENTIFICATION_INFO_ERROR = 1276;  //身份证信息无禁用
	NAME_INFO_ERROR = 1277;  //姓名信息无效
	BIND_REALNAME_SUCCESSS = 1278;  //绑定实名信息成功
	REALNAME_HAS_BIND = 1279;  //实名信息已经绑定
	FEIZI_REPEAT_COLLECT = 1280;  //已拥有该妃子,无法重复领取
	SWORN_NPC_NUM_ERROR = 1281;  //结拜人数错误
	SWORN_NPC_QTY_ERROR = 1282;  //只有神将才能结拜
	SWORN_NPC_NOT_SWORN = 1283;  //还未结拜
	SWORN_NPC_HAS_LINE = 1284;  //该位置应连协
	SWORN_NPC_NOT_ENOUGH_LINE = 1285;  //还未完全激活连j 
	NPC_GIFT_1 = 1286;  //主公离开期间，夫人在满月酒中赠与“%s”%s作为礼物。
	NPC_GIFT_2 = 1287;  //主公离开期间，“%s”在抓周礼上选择了%s，日后%s。
	NPC_GIFT_3 = 1288;  //主公离开期间，“%s”选择了%s作为培养重心。
	NPC_GIFT_4 = 1289;  //主公离开期间，“%s”拜见了%s为老师，日后定能在%s上有所作为。
	NPC_GIFT_5 = 1290;  //恭喜主公，“%s”在成年礼上获得了新技能，各项属性大增，快去看看吧！
	CHILD_NAME_LENGTH_LIMIT = 1291;  //子嗣名字长度限制
	WAR_NO_MAIN_CITY = 1292;  //目標城池不存在
	NPC_EVALUATE_OPTION_ERR = 1293;  //评价参数错误
	NPC_EVALUATED = 1294;  //已经评价，不能重复评价
	QUESTION_FINISHED = 1295;  //调查问卷已经结束
	QUESTION_TEXT_LIMIT = 1296;  //问卷字数限制
	AWARD_NOTICE_FRUIT_MESSAGE = 1297;  //恭喜%s，通过%s，获到了%s元宝，真是可喜可贺。
	REBATE_LIMIT = 1298;  //返利经验已达今日收获上限
	WAR_NO_FORMATION = 1299;  //阵型不存在
	WAR_NO_PRINCE = 1300;  //子嗣不存在
	WAR_PRINCE_STATUS_ERR = 1301;  //子嗣状态错误
	WAR_WIN_ALL = 1302;  //旅行的终点，您已经统一了整个世界
	WAR_NO_SOLDIER = 1303;  //国王，您已经一毛钱都没有了，别打了
	BAN_WORLD_MESSAGE = 1304;    //世界聊天禁言
	BAN_MAIL_MESSAGE = 1305;    //留言邮件禁言
	QDYB_TYPE_ERROR=1306;      //巧敌应变类型错误
	QDYB_NCPID_REPEAT=1307;  //ncpid重复
	QDYB_MILITARY_NOT_FOUND=1308; //武将找不到
	QDYB_ARMTYPE_DIFF=1309;  //兵种不同
	QDYB_OVER_QUEUE_NUMBER=1310;  //超过队列数量
	QDYB_MOULD_NOT_FOUND=1311;	//模板找不到
	QDYB_SWEEP_TIMES_NOT_ENOUGH=1312;	//扫荡次数不够
	QDYB_OVER_VIPATTACK_BUY_TIMES=1313;		//不能超过巧敌应变VIP购买上限
	QDYB_NOT_ARRIVE_LEVEL=1314;		//等级没有达到
	FEATURES_OPEN_LEVE_NOT_ENOUGH=1315;//等级达到%s后开启
	FEATURES_OPEN_VIP_NOT_ENOUGH=1316;//爵位达到%s后开启
	FEATURES_OPEN_TITLE_NOT_ENOUGH=1317;//vip等级达到%s后开启
	LW_RANK_TEXT=1318; // 恭喜主公在长城守卫中获得第%d名，给您奉上丰厚奖励！
	ALREADY_RECEIVE_REWARD = 1319;//已经领取的奖励不可再次领取

	GODPRACTICE_NO_PASS = 1323; // 未通过审讯囚徒
	GODPRACTICE_DRAWED = 1324; // 审讯囚徒奖励已经领取
	GODPRACTICE_MAIL_TXT = 1325;// 您昨日的审讯宝箱未领取，奖励请查收。
	EQUIP_BACK_RESET =  1330;  //兵器所功能已开放，所有装备等级重置，现返还您消耗的铜币（%d），请前往兵器所重新强化装备，造成不便请见谅。
	COMPENSATE_VIP_GIFT =  1333;  //由于VIP礼包奖励调整，现补偿您{0}级武将【{1}】*1，祝您游戏愉快。
	
}

message LanguageMsg {
	optional LanguageNum num = 1;
	repeated string opts = 2;
	optional string content = 3;
}


// enum 系统提示枚举，默认不传
enum SysMsgType {
	NONE = 0; // 默认
	Black = 1; // 黑色弹出框
}

message GiveupItem {
}

message GeneralError {
	optional ProtoError error = 1;
	optional string message = 2;
}

message HeartBeat {
}

message VersionTooLow {
	optional string message = 1;
}

message SystemMessage {
	optional LanguageMsg message = 1;
	optional SysMsgType type = 2; // 类型
}

message KickedOff {
	optional LanguageMsg message = 1;
}

message ExecutionError {
}

message AnotherOnline {
	optional bool placeholder = 1;
}

message Alert {
	optional AlertType type = 1;
	optional string message = 2;
}

enum AlertType {
	Alert_Ghost = 1;
}

message Login {
	optional int32 label = 1;
	optional CharacterInfo character = 2;
	optional LoginError error = 3;
	optional int32 signProgress = 4; // deprecated
	optional string errorMessage = 5;
	optional bool needShowGuide = 6;
	optional int64 serverOpenTime = 7; // 开服时间	
	optional string userId = 8;	//玩家账号ID
    optional int64 createTime = 9;//创角时间
    optional int32 payNum = 10;//充值笔数
}

message CreateCharacterResult {
	optional CreateAccountError error = 101;
	optional AllInfo allInfo = 1;
}

message CharacterInfo {
	optional int64 id = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional int32 exp = 4;
	optional int64 dollar = 5; //金钱
	optional int64 coin = 6;
	optional int32 vip = 7;  // VIP等级
	optional int32 stamina = 8;  //精力
	optional int32 qi = 9; //元气
	optional int32 qishi = 10; //????
	
	optional int32 nextLevelExp = 11; // exp optional to level up
	
	optional int32 merit = 12; //功绩
	optional int32 vipExp = 13; //会员经验
	optional bool hasToppedUp = 14; //是否首冲
	optional int32 buyStaminaTime = 15; //购买精力次数
	optional int32 firstTopUpDollar = 16; //首冲奖励元宝
	optional bool hasTakenFirstTopUpAward = 17; //有等级上升奖励 //首冲奖励
	optional int32 buyQiTime = 18; //购买元气的次数
	optional int32 towerLevel = 19; //主城等级
	optional int32 lingshiCount = 20; //灵石数量
	
	optional int32 battlePower = 21; //战斗力
	repeated bool levelAwardRetrieved = 22; //等级奖励补偿
	optional int32 todayDollarRefreshHorseTime = 23; //今日金钱刷马次数
	
	optional int32 templeLevel = 31; //神庙等级
	optional int32 believerNumber = 32; //信徒数量
	optional int32 godStamina = 33; //神精力
	optional int32 buyGodStaminaTime = 34; //购买神精力次数
	optional bool todayTempleAwardTaken = 35; //今日神庙奖励获取
	optional int32 boughtAttackLevelTime = 36; //购买攻击等级次数
	
	optional int32 userGuideStep = 41; //用户引导步骤
	optional int32 jinshenLevel = 42; //金身等级
	
	optional int32 todayRefreshHorseGeniusCount = 51; //今日刷马天赋数量
	
	optional bool longGongOpening = 61; //长钟开启
	repeated bool activityOpening = 62; //活动开启
	optional bool invitationCodeEntered = 63; //激活码登记
	
	optional int32 ganwu = 66; //感悟
	optional int32 zhihui = 67; //智慧
	optional bool canTakeArenaTopAward = 68; //可获取竞技场奖励
	
	optional int32 seq = 71; //音序 //????
	
	repeated bool mainCharacterSkillEnabled = 81; //主角色技能激活
	optional RoutineActivityStatus routineActivityStatus = 82; //
	optional bool monthVipActivated = 83; //日常任务状态
	
	optional int32 HorseInterfereCount = 84; //马打扰数量 //????
	optional int32 horseGeniusInterfereCount = 85; //马天赋打扰数量 //????
	optional bool hasTakenSecondTopUpAward = 90; //有获取秒升级奖励 //????
	optional bool secondToppedUp = 91; //获取秒升级
	
	optional bool hasTakenDailyTopUpAward = 92; //有可获取日常升级奖励
	optional bool hasToppedUpToday = 93; //还有多少升级今天 //????
	
	optional int32 templeDefence = 94;		// 神庙城防值
	optional int64 mapOfTemple = 95;		// 神庙所在地图
	optional int32 sectType = 96;			// 当前教派
	optional int64 sectCredit = 97;			// 教派声望
	optional int64 sectFeats = 99;			// 教派功勋
	optional string sectJob = 100;			// 教派职位
	optional string sectTitle = 101;		// 教派称号
	optional bool hasTakeSectTitleDailyAward = 102;	// 是否领取过每日称号奖励
	optional int32 sectTaoFaLing = 103;		// 拥有讨伐令数量
	optional int64 changeTempleMapRemainingSeconds = 104;  // 迁移神庙冷却剩余时间
	optional int32 sectTitleID = 105;		// 教派称号ID
	optional int32 sectTitleLv = 106;		// 教派称号等级
	optional int64 sectTotalCredit = 107;	// 教派总声望
	optional int32 sectCreditRank = 108;	// 当前教派声望排名
	optional int32 maxTempleDefence = 109;	// 最大神庙城防值
	optional int32 sectJobID = 111;			// 教派职位ID
	optional int32 todayBuyTaoFaLingTimes = 112; // 今日购买讨伐令次数
	
	optional int32 activityTopUpDollar = 121; //获取获取上升金钱
	
	optional int32 hasUnOpitionStatus = 122; //参考 HasUnOptionStatus

    optional  int64 createPlayerTime = 123; //创建角色时间
	   
	optional int32  honor1 = 124; //荣誉勋章
	optional int32  honor2 = 125; //王者勋章
	
	optional int32 leftClickTimes      = 126;  // 英雄试炼次数
	optional int32 buyClickTime        = 127; //购买英雄试炼的次数
	optional GodTitles godInfo = 128; // 神职系统
	optional int64 lastFansCheckTime = 129; // 最后挂机信徒结算时间
	repeated int32 skins = 130; // 拥有的皮肤
	optional int32 onUseSkin = 131; // 正在使用的皮肤
	// 内存优化版本
	repeated MagicExpDTO magicExps = 132; // 经验丹
	optional int32 rende = 133; // 人德	
	
	repeated ClientDataDTO clientDatas = 134; // 客户端变量
	repeated SysBuffDTO sysBuffs = 135; // 系统buff
	repeated NpcEvaluateDTO npcEvaluates = 136; // 武将评价
	optional bool questionFinished = 137; // 调查问卷是否已经结束
	
	// 塔防新功能
	optional int64 lastProtectLwTime = 138; // 最后保卫长城时间
	optional int32 lwTimes = 139; // 守卫长城次数
	optional int32 lwScore = 140; // 守卫长城积分，每日重置
	optional int32 lwMaxScore = 141; // 守卫长城历史最高积分，不每日重置
	repeated int32 lwRewardLog = 142; // 守卫长城已经领取的奖励列表
	optional int32 ambushLevel = 143; // 十面埋伏等级
	optional int32 weekStageLevel = 144; // 周末玩法通关等级，初始为空值
	//时装投放
	optional int64	skin101EndTime = 145;	//三界帝王-时装,失效时间
	optional int64	skin102EndTime = 146;	//浴火重生-时装,失效时间

	optional bool  isOpendBattleLog=147; // 战报收集开关false 关闭; true 开启 <通过http请求开关>
	
	repeated int32 stageRewardLogs = 148;
	optional int64 lastAskGodWeeklyTime = 149; //上次请神领取时间
	optional int32 weaponLv = 150;		//兵器所-武器等级
    optional int32 defenseLv = 151;		//兵器所-坐骑等级
    optional int32 amuletLv = 152;		//兵器所-珍品等级
}

message ClientDataDTO {
		optional string key = 1; // key
		optional string val = 2; // values
	}

message HasUnOpitionStatus {
	optional int32 hasUnOpitionStatus = 122; //未操作提示 活动奖励 0x01 成就奖励 0x02 奇异状态 0x04 竞技场 0x08 
}

message RoutineActivityStatus {
	optional bool peachDoubled = 1;
	optional bool arenaScoreTripled = 2;
	optional bool robberyTripled = 3;
}

message TopUp {
	optional int32 dollar = 1;
	optional int32 newDollar = 2;
	optional int32 newVip = 3;
}

message GetFirstTopUpAward {
	repeated Award awardList = 1;
}

message GetSecondTopUpAward {
	repeated Award awardList = 1;
}

message GetDailyTopUpAward {
	repeated Award awardList = 1;
}

message LuckPayAward {
	repeated Award awardList = 1;
}


message AllInfo {
	repeated Npc npcList = 1;
	repeated Magic magicList = 2;
	repeated Equip equipList = 3;
	repeated Item itemList = 4;
	repeated Spirit spiritList = 5;
	repeated Horse horseList = 6;
	repeated MagicFragment magicFragList = 7;
	repeated Book bookList = 8;
	optional int32 exp = 9;
	optional int32 nextLevelExp = 10;
	optional AllTitle allTitle = 11;
	optional int32 godId = 12; // 圣职ID
	optional int32 skinId = 13; // 皮肤
	repeated ShenShouInfo shenShouList=14;//神兽信息
	// 内存优化版本
	repeated int32 loginRewardLogs = 15; // 新手福利领取记录
}

// 经验丹
message MagicExpDTO {
	optional int64 typeId = 1; // 模板ID
	optional int32 count = 2; // 个数
}

message AllNpc {
	repeated Npc npcList = 1;
	repeated ShenShouInfo shenShouList=2;//神兽信息
}

message AllTitle {
	repeated int32 titleList        = 1;
	optional int32 usedTitle        = 2;
	optional int32 csvVersion       = 3;
	repeated int32 lockedTitleList  = 4;
}

message AllMagic {
	repeated Magic magicList = 1;
}

message AllEquip {
	repeated Equip equipList = 1;
}

message AllItem {
	repeated Item itemList = 1;
}

message AllSpirit {
	repeated Spirit spiritList = 1;
}

message AllHorse {
	repeated Horse horseList = 1;
}

message AllFragment {
	repeated MagicFragment magicFragList = 1;
}

message AllBook {
	repeated Book bookList = 1;
}

message TeamInfo {
	optional AllInfo info = 1;
}

message UpdateBattlePower {
	optional int32 battlePower = 1;
}

message Npc 
{
	optional int64 id = 1;
	optional string name = 2;	

	optional int32 position = 3; // 站位
	optional int64 typeId = 4;  // 弟子类型Id

	optional int32 maxHp = 5;
	optional int32 attack = 6;
	optional int32 defense = 7; 
	optional int32 magic = 8;
	optional int32 exp = 9;

	optional int32 npcClass = 10;
	
	optional int32 level = 13;
	optional int32 nextLevelExp = 14;
	
	optional int32 baseAttack = 15;
	optional int32 baseDefense = 16;
	optional int32 baseHp = 17;
	optional int32 baseMagic = 18;
	
	optional bool isMain = 21;
	optional int32 relation = 22;
	
	optional int32 battlePower = 31;
	optional int32 potential = 32;
	optional int32 evolveLevel = 33;
	
	optional bool inXiulian = 41;
	optional bool inHufa = 42;
	optional bool inExplore = 43;// 在探索
	optional int32 activatedMifaIndex = 45;
	optional int32 inSworn = 46;	//结拜中
	
	optional int32 seq = 51;
	optional int32 qbydbattlePower =52;// 巧变应敌 武将战力值

}

message Equip 
{
	optional int64 id = 1;
	optional int64 equiptorId = 2; // 装备Npc
	optional int64 typeId = 3; // 装备类型

	optional int32 level = 6; // 装备等级
	optional string name = 7;
	optional int32 battlePower = 8;
	
	optional int32 attack = 11;
	optional int32 defense = 12;
	optional int32 magic = 13;
	optional int32 hp = 14;
	
	optional int32 seq = 21;

	optional bool satisfied = 22;
}

message Horse 
{
	optional int64 id = 1;
	optional int64 equiptorId = 2; // 装备Npc
	optional int64 typeId = 3; // 装备类型
	optional int32 todayTrainingTimes = 4;

	optional int32 level = 6; // 装备等级
	optional string name = 7;
	optional int32 battlePower = 8;
	optional int32 exp = 9;
	optional int32 nextLevelExp = 10;
	
	optional int32 attack = 11;
	optional int32 defense = 12;
	optional int32 magic = 13;
	optional int32 hp = 14;
	
	repeated int64 geniusIds = 15;
	
	optional int32 seq = 21;
	
	optional bool satisfied = 22;
}


message NewNpc {
	optional Npc TheNpc = 1;
	optional Magic GeniusMagic = 2;
}

message DeleteNpc {
	repeated int64 npcIds = 1;
}

message GetRecruitInfo {
	optional bool doneFirstRecruitMiddle = 2;
	optional bool doneFirstRecruitHigh = 3;
	
	optional int32 nextRecruitLowTime = 4;
	optional int32 nextRecruitMiddleTime = 5;
	optional int32 nextRecruitHighTime = 6;
	
	optional int32 todayRecruitLowCount = 7;
	
	optional int32 highRecruitItemCount = 11;
	optional int32 midRecruitItemCount = 12;
	optional int32 lowRecruitItemCount = 13;
	
	optional int32 recruitNpcInterfereCount = 14;
}

message RecruitNpc {
	optional GetRecruitInfo recruitInfo = 1;
	repeated Award awardList = 2;
	repeated int64 spiritIds = 3;
	repeated int32 spiritCounts = 4;
	repeated Award extraSpiritList = 5;
	optional int32 extraSpiritIndex = 6;
}

message RecruitNpcsList {
	optional GetRecruitInfo recruitInfo = 1;
	repeated Award awardList = 2;
	repeated int64 npcIds = 3;
}

message Magic
{
	optional int64 id = 1;
	optional string name = 2;
	optional int64 typeId = 3; // 法术类型Id
	optional MagicCategory category = 4;
	optional int32 power = 5; 
	optional MagicPart equipPart = 6;
	optional int32 level = 7;
	optional int64 equiptorId = 8; // 装备者NPC Id
	optional int32 battlePower = 9;
	optional int32 exp = 10;
	
	optional double buffAttack = 11;
	optional double buffDefense = 12;
	optional double buffMagic = 13;
	optional double buffHp = 14;
	optional int32 magicPower = 15;
	
	optional int32 nextLevelExp = 21;
	
	optional int32 seq = 31;
	optional bool satisfied = 32;
}

message MagicFragment {
	optional int64 id = 1;
	optional int64 typeId = 2;
	optional int64 magicTypeId = 3;
	optional int32 index = 4;
	optional int32 count = 5;
	optional int32 seq = 11;
}

message Item {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 typeId = 3;
	optional int32 count = 4;
	optional int64 remainingSeconds = 5; // 如果有值则显示倒计时
	optional int32 alreadyTopUpMoney = 6;
	optional int32 openDollar = 7;
	optional int32 needTopUpMoney = 8;
	optional int32 seq = 11;
	optional int64 gainTime = 12;
	optional int32 condition = 13;
}

message Spirit {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 typeId = 3;
	optional int32 count = 4;
	optional int32 seq = 11;
}

message Book {
	optional int64 id = 1;
	optional int64 equiptorId = 2;
	optional int64 typeId = 3;

	optional int32 level = 4;
	optional int32 battlePower = 5;
	optional int32 exp = 6;
	optional BookPart equipPart = 7;
	
	optional int32 attackInc = 11;
	optional int32 defenseInc = 12;
	optional int32 hpInc = 13;
	optional int32 magicInc = 14;
	optional int32 waterInc = 15;
	optional int32 fireInc = 16;
	optional int32 thunderInc = 17;
	optional int32 poisonInc = 18;
	optional int32 commonAttackInc = 19;
	optional int32 magicPowerInc = 20;
	optional int32 commonDefInc = 21;
	optional int32 magicDefInc = 22;
	optional int32 waterDefInc = 23;
	optional int32 fireDefInc = 24;
	optional int32 thunderDefInc = 25;
	optional int32 poisonDefInc = 36;
}

message GetItem {
	optional Item item = 1;
}

message GetAwardList {
	repeated Item items = 1;
	repeated MagicFragment frags = 2;
	repeated Horse horses = 3;
	repeated Equip equips = 4;
	repeated Magic magics = 5;
	repeated Spirit spirits = 6;
	repeated Book books = 7;
}

message GetEquip
{
	optional Equip equip = 1;
}

message UpdateEquip {
	repeated Equip equip = 1;
}

message GetMagic 
{
	optional Magic magic = 1;
}

message UpdateMagic 
{
	repeated Magic magic = 1;
}

message GetBook {
	optional Book book = 1;
}

message UpdateBook {
	repeated Book book = 1;
}

message TradeBook {
	repeated Award awards = 1;
}

message GetMagicFragment {
	optional MagicFragment fragment = 1;
}

message GetSpirit {
	optional Spirit spirit = 1;
}

message RecruitBySpirit {
	repeated Award awardList = 1;
}

//repeated RecruitBySpiritDTO datas = 1;
message EquipEquip 
{
//	optional UpdateNpcProperty updateProperty = 1;
	optional int32 label = 1;
	optional int64 unequipedEquip = 2; 				// in case that the target equipment position is occupied, return the equip id to unequip 
	optional int64 unequipedNpc = 3;
	optional int64 equiptorId = 6;
	optional int64 equipId = 7;
	//	optional UpdateNpcProperty updateUnequiptor = 3;  // in case that the target equipment is already equiped by other npc, update the property of that NPC
}

message EquipMagic {
	optional int32 label = 1;
//	optional UpdateNpcProperty updateProperty = 2;
	optional int64 unequipedEquip = 3; 				// in case that the target equipment position is occupied, return the equip id to unequip 
//	optional UpdateNpcProperty updateUnequiptor = 4;  // in case that the target equipment is already equiped by other npc, update the property of that NPC
	optional int64 unequipedNpc = 5;
	optional int64 equiptorId = 6;
	optional int64 equipId = 7;
	optional MagicPart equipPart = 8;	
}

message EquipTitle {
	optional int32 usedTitle = 1;
}


message EquipHorse {
	optional int32 label = 1;

	optional int64 unequipedEquip = 3; 				// in case that the target equipment position is occupied, return the equip id to unequip 

	optional int64 unequipedNpc = 5;
	optional int64 equiptorId = 6;
	optional int64 equipId = 7;
}

message EquipBook {
	optional int32 label = 1;

	optional int64 unequipedEquip = 3; 				// in case that the target equipment position is occupied, return the equip id to unequip 

	optional int64 unequipedNpc = 5;
	optional int64 equiptorId = 6;
	optional int64 equipId = 7;
	optional BookPart equipPart = 8;	
}

message BattleAward {
	optional int32 coin = 1;
	optional int32 cexp = 2;  		// character exp
	optional int32 levelUp = 3; 		// character new level
	optional int32 levelUpDollar = 4; 
	
	optional int32 newcExp = 5 ;  		// character new exp
	optional int32 oldLevel = 6 ;
	optional int32 arenaScore = 7;
	
	repeated NpcExpAward npcAwards = 11;
	
	optional int32 sectFeats = 12;
	optional int32 sectCredit = 13;
	optional int32 honor1 = 14;
	optional int32 honor2 = 15;
	optional int32 bigArenaScore = 16;
	optional int32 addFans = 17; // 增加的信徒
}

message Entity {
	optional int64 id = 1;
	optional EntityType entityType = 2;
	optional int64 type = 3;
	
	optional int32 count = 11;
}

message GetAward {
	repeated Award awardList = 1;
}

message Award {
	optional int64 coin = 1;
	optional int32 npcExp = 2;
	optional int32 stamina = 3;
	optional int32 qi = 4;
	optional int32 exp = 5;
	optional int64 dollar = 6;
	optional int32 merit = 7;
	optional int32 arenaTime = 8;
	optional int32 godStamina = 9;
	optional int32 arenaAwardScore = 10;
	
	optional int32 attack = 11;
	optional int32 defensee = 12;
	optional int32 maxHp = 13;
	optional int32 magic = 14;
	
	optional Entity entity = 21;     // deprecated
	optional Npc npc = 22;			 // deprecated
	
	optional ShadowEntity shadowEntity = 31; // this is for display
	optional EntityType entityType = 32;
	
	optional bool preview = 41;  	 // deprecated
	
	optional bool Satisfied = 42;
	
	optional int32 honor1 = 43;
	optional int32 honor2 = 44;
	optional int32 bigArenaScore = 45;
	optional int32 xintu = 50;	//信徒
	optional int32 rende = 51; // 人德
	optional int32 vipExp = 52;	//vip经验
	optional int32 landForce = 53;	//步兵
    optional int32 archers = 54;	//弓兵
    optional int32 cityForce = 55;	//攻城兵
}

message ShadowEntity { 
	optional int64 typeId = 1;
	optional int64 count = 2;
}

message NpcExpAward {
	optional int64 id = 1;
	optional int32 exp = 2;
	optional int32 levelUp = 3;  // new level
	optional int32 newExp = 4;
	optional int32 oldLevel = 5;
	optional ExpType type = 11;
}

enum ExpType {
	EXP_Npc = 1;
	EXP_Horse = 2;
	EXP_MAGIC = 3;
	EXP_BOOK = 4;
}

message LevelUpEquip {
	optional int64 id = 1;
	optional int32 newLevel = 3;
	optional int32 levelUp = 4;
	
	optional int32 attack = 11;
	optional int32 defense = 12;
	optional int32 maxHp = 13;
	optional int32 magic = 14;
	optional int32 battlePower = 15;
}

message LevelUpEquipAll {
	optional int32 count = 1;
}

message SellEquip {
	repeated int64 id = 1;
	optional int32 coin = 2;
//	optional int64 equiptorId = 3;
}

message RepairEquip {
	optional Equip newEquip = 1;
	optional int64 oldEquipId = 2;
}

message TryPeiyang {
	optional int64 id = 1;
	optional int32 remainingDrugCount = 2;
	optional int32 remainingDollar = 3;
	optional int32 potential = 4;

	optional int32 deltaAttack = 11;
	optional int32 deltaDefense = 12;
	optional int32 deltaHp = 13;
	optional int32 deltaMagic = 14;
}

message ConfirmPeiyang {
	optional int64 id = 1;
}

message LevelUpMagic {
	optional int64 id = 1;
	optional NpcExpAward expAward = 3;
	repeated int64 consumedMagics = 5;
	
	optional double attack = 11;
	optional double defense = 12;
	optional double maxHp = 13;
	optional double magic = 14;
	optional int32 power = 15;
	optional int32 battlePower = 16;
	optional int32 nextLevelExp = 17;
	optional int32 magicPower = 18;
}

message LevelUpBook {
	optional int64 id = 1;
	optional NpcExpAward expAward = 2;
	repeated int64 consumedBooks = 3;
	optional Book updateBook = 4;
}


message ChangeNpcPosition {
	optional int64 id = 1;	
	optional int32 position = 2;				// new position of the target NPC
	optional int64 affectedNpcId = 3;             // if the position is occupied by another NPC
	optional int32 affectedNpcPosition = 4;     // the new position of the original NPC. it should be same as the original position of the target NPC
}

message RearrangeNpc {
	repeated int64 npcIdList = 1;
	repeated ShenShouInfo shenShouList=2;//神兽信息
}

message TransferLevel {
	optional int64 masterId = 1;
	optional Npc updatedNpc = 2;
}

/*** Battle Related ***/
message BattleResult {
	optional bool win = 1;
	optional int32 star = 2;
	optional BattleGroup attacker = 3;
	optional BattleGroup defender = 4;
	optional BattleAward award = 5;
	optional bool attackerFirst = 6;
	optional BattleType battleType = 7;
	repeated Award otherAward = 8;
	optional string battleName = 9;
	
	optional bool tripleAward = 10;
	
	repeated BattleRoundResult rounds = 11;
	repeated FailStat failStat = 12;
	
	optional int32 liudaoLevelStar = 21;
	optional int32 bestStar = 22; 
	optional int64 levelId = 23;
	optional SkipBattleType SkipType = 24;
	repeated FailStat defenderFailStat = 25; // 敌方死亡详情
    optional int32 defenderDeathNum = 26; // 敌方死亡人数
}

enum SkipBattleType {
	SkipBattle_5Sec = 0;
	SkipBattle_NoSkip = 1;
	SkipBattle_Direct = 2;
}

message FailStat {
	optional int64 id = 1;
	optional int32 failedRound = 2;
	optional int32 allDamage = 3;
}

message BattleGroup {
	optional int64 leaderId = 1;
	repeated BattleActor actors = 2;
	optional int32 battlePower = 3;
	optional string leaderName = 4;
	optional int32 guoli = 5;
}

message BattleRoundResult {
	repeated BattleActionResult turns = 1;
	optional bool finished = 2;
	repeated BuffEffect preBuffEffect = 3;// 每个大回合的 开始技能
}

message BattleActionResult {
	optional int64 leaderId = 1;// 玩家Id, 当等于= -1 表示假人
	optional int64 actorId = 2; // 上场人物序号
	optional BattleActionType action = 3;
	optional int64 value = 4;// 根据上面actionType 对应不同的值
	repeated  SsSkill ssSkill=5;// 神兽技能
	repeated BuffEffect preBuffEffect = 6;// 秘法行动前
	repeated BuffEffect postBuffEffect = 9;// 秘法行动后
	
	repeated RealBuff preRealBuffEffect = 10;//  行动前Buff
	repeated RealBuff postRealBuffEffect = 11;// 行动后Buff  
	optional int32 teamWorkBattleActionSeq=14;  //连携战斗 序列号
	repeated BattleActionResult consequence = 15;// 被攻击方
}
// 神兽技能
message SsSkill{
	optional int64 leaderId = 1;
	optional int64 actorId = 2;
	optional int64 ssKillId = 3;
	optional int32 effectVal=4;// 例如 : 白虎咆哮 - 减少敌方全体25%兵力 当前位置显示 整数
}

message RealBuff {
	optional int64 actorId = 1;
	optional int64 leaderId = 2;
	optional int64 buffId = 3;
	optional int64 changeVal=4;// 减血和加血,或者其他属性变化值
	optional int64 duration=5;// buff 持续 回合数
}
message BuffEffect {
	optional int64 actorId = 1;
	optional int64 leaderId = 2;
	optional int64 mifaTypeId = 3;
	optional bool iconActiviated = 4;
	optional int64 thornsVal=5;// 反伤值  < =0 没有反伤 >0 有反伤>
}

message BattleActor {
	optional int64 id = 1;// seq 序号
	optional int64 typeId = 2;// 地址类型ID
	optional int32 maxHp = 3;
	optional int32 magic = 4;
	optional string name = 5;
	optional string code = 6;
	optional int32 quality = 7;
	
	repeated int64 buffType = 11;
	optional int32 seq = 21;
}

message GetLevelRecords {
	optional int64 currentSceneId = 1;
	optional int64 currentLevelId = 2;
	repeated LevelRecord recordList = 3;
	optional int32 nextSweepTime = 4;  // count down in seconds
}

message LevelRecord {
	optional int64 levelId = 1;
	optional int32 star = 2;
	optional int32 attackCountToday = 3;
	optional bool peachEaten = 4; // only identify whether the peach for that level is eaten or not. i.e. only the last level is effective
	optional int32 seq = 11;
	optional int32 buyTimesToday = 12;
}

message AttackLevel {
	optional int64 levelId = 1;
	optional int32 star = 2;
	optional int32 attackCountToday = 3;
	optional bool peachEaten = 4 ; // if not set: not all levels gets 3 stars. if set and false: can eat, otherwise it is already eaten
	optional int64 sceneId = 5;
	optional int32 buyTimesToday = 6;
}




message TakeArenaTopAward {
	repeated Award awards = 1;
}

message EatPeach {
	optional int64 sceneId = 1;
	optional int32 stamina = 2;
	optional int32 newStamina = 3;
	repeated Award awardList = 4;
}

message SweepLevel {
	optional int64 levelId = 1;  // the level id to sweep
	optional int32 updatedAttackCount = 2;  // the updated number that attack times of the given level
	repeated SweepLevelResult resultList = 3;  // the resultse
	optional int32 nextSweepTime = 4;  // the seconds to next sweep
	optional int32 encounterCount = 5;	//当前奇遇数量
}

message SweepLevelResult {
	optional BattleAward battleAward = 1;
	repeated Award otherAwardList = 2;
}

message CoolDownSweepLevel {
	optional int64 newDollar = 1;
}

message BuyAttackLevelTimes {
	optional int64 levelId = 1;
	optional int64 newDollar = 2;
	optional int32 boughtTimes = 3;
}
/*** End of Battle Related ***/

/*** Start of Arena Related ***/
message MyArenaData {
	optional int32 myRank = 1;
	
	optional int32 leftTimes = 11;
	optional int32 buyTimes = 12;
	optional int32 arenaPoints = 13;
	optional int32 arenaAwardActivated = 14;
	optional int32 arenaAwardTookStatus = 15;
	optional int32 yesterdayArenaRank = 16;
	
	repeated Award awardList = 21;
	
	repeated Others canChallenge = 22;
	repeated Others losers = 23;

	optional bool isLuck = 25;
	optional int32 rankChange = 26;
	optional int32 remainingSeconds = 27; //倒计时时间 单位秒
}

message RetrieveFirstAchievedArenaAward {
	optional bool success = 1;
	optional int32 arenaAwardTookStatus = 2;
	optional int32 newArenaPoints = 3;
}

message ConvertPoints {
	optional int32 newDrugs = 1;
	optional int32 remainingPoints = 2;
	optional int32 totalDrugs = 3;
	repeated Award awardList = 11;
}


/*** End of Arena Related ***/

/*** Start of Liudao ***/

message LiudaoSummary {
	optional int32 yesterdayStars = 1;
	optional int64 yesterdaySceneId = 2;
	optional int64 yesterdayLevelId = 3;
	optional int32 todayRank = 4;	
	optional int32 yesterdayRank = 5;

	optional int32 inheritedBuff = 11;
	
	optional LiudaoStatus status = 21;
}

message LiudaoNextDay { }

message LiudaoStatus {
	optional int64 levelId = 1;
	optional int32 allStars = 3;
	optional int32 remainingStars = 4;
	repeated int32 historyStars = 5;
	optional int32 currentRank = 6;
	repeated bool firstWinAwardTaken = 7;
	
	optional int32 buffAttack = 11;
	optional int32 buffDefense = 12;
	optional int32 buffHp = 13;
	optional int32 buffMagic = 14;
	
	optional int32 reviveTime = 21;
	
	optional LiudaoBuff chooseBuff = 31; // buff options for every 3 levels
	optional int32 merit = 32;
	optional int32 starsForAward = 33;  // is set only when award is available
	optional int32 coin = 34;
	
	repeated Award awardList = 41;  // liudao award for each 5 levels
}

message AttackLiudao {
	optional bool success = 1;
	optional int32 remainingReviveTime = 2;
	optional int32 currentStars = 3;
	optional int32 remainingStars = 4;
	optional bool isFirstWin = 5;
	optional int32 stars = 6;   // the difficulty level of current stage
	repeated Award awardList = 7;
	optional int32 index = 8;
}

message SweepLiudao {
	repeated AttackLiudao attackLiudao = 1;
}

message LiudaoBuff {
	optional BuffType three = 1;
	optional BuffType fifteen = 2;
	optional BuffType thirty = 3;
}

message BuyLiudaoReviveTime {
	optional int32 reviveTime = 1;
	optional int64 dollar = 2;
}

message LiudaoRankList {
	repeated LiudaoRankData list = 1;
	optional int64 lastRankTime = 2; // 最近结算时间
	optional int32 leftTime = 3;	// 距离结算时间还有多少 秒
}

message LiudaoRankData {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 levelId = 3;
	optional int32 rank = 4;
	optional int32 level = 5;
	optional int32 stars = 6; // 星级
	optional int64 upTime = 7; // 最后更新时间
	optional int64 actorTypeId = 8;
	optional int32 serverId = 9;
	optional int32 faceVal = 10; // 颜值
	optional int32 godId = 11; // 神职ID
	optional int32 battlePower = 12; // 战力
	optional int32 skinId = 13; // 正在使用的皮肤
}

message TakeLiudaoFirstWinAward {
	optional int64 levelId = 1;
}

/*** End of Liudao ***/

/*** Magic related ***/
message SummonMagic {
	optional Magic magic = 1;
	repeated int64 consumedFragments = 2;
}

message GetRobberyTarget {
	repeated RobberyTarget targets = 1;
}

message RobberyTarget {
	optional int32 id = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional int64 fragmentIndex = 4;
	repeated int64 actorTypeIds = 5;	
	optional int32 usedTitle = 6;
}

message RobberForMagic {
	optional int32 index = 1;
	optional bool battleWin = 2;
	optional bool robberySuccess = 3;
	optional MagicFragment fragment = 4;
}

message MagicFragmentRobbed {
	optional int64 id = 1;
	optional int32 newCount = 2;
}

message SellMagicFragment {
	optional int64 id = 1;
	optional int32 coin = 2;
	optional int32 newCoin = 3;
}

/*** End of Magic ***/

/*** start of horse ***/
message CurrentHorses {
	repeated int64 horseTypeIds = 1;
	repeated bool captured = 2;
	optional int32 nextRefresh = 3;
}

message GetHorse {
	optional Horse horse = 1;
	optional int32 index = 2;
}

message UpdateHorse {
	repeated Horse horse = 1;
}

message UpdateItem {
	repeated Item item = 1;
}

message RefreshHorses {
	repeated int64 horseTypeIds = 1;
}

message UpdateCharacterProperty 
{
	optional CharacterInfo character = 1;
}

message TrainHorse {
	optional NpcExpAward exp = 1;
	optional int32 factor = 2;
}

message TrainHorseAll {
	optional int32 count = 1;
	optional int32 coincost = 2;
	optional int32 dollarcost = 3;
}

message UpdateHorseProperty {
	optional Horse horse = 1;
}

message NpcEaten {
	repeated int64 npcIds = 1;
}

message HorseLevelTransfer {
	optional int64 consumedId = 1;
	optional Horse target = 2;
}

message HorseEatBudda {
	optional Horse horse = 1;
}

message HorseEatEquip {
	optional Horse horse = 1;
}

message EquipEaten {
	repeated int64 equipIds = 1;
}

message SellHorse {
	repeated int64 id = 1;
	optional int32 soldMerit = 2;
	optional int32 newMerit = 3;
	repeated Award awardList = 4;
}

message ActivateHorseGenius {
	optional int64 horseId = 1;
	optional int64 geniusId = 2;
	optional int32 index = 3;
}

message RefreshHorseGenius {
	optional int64 horseId = 1;
	optional int64 geniusId = 2;
	optional int32 index = 3;
}

/*** End of Horse ***/

/*** start of training ***/

message TrainNpc {
	optional NpcTrainingSession session = 1;
}

message GetNpcTrainingSessions {
	repeated NpcTrainingSession sessions = 1;
}

message NpcTrainingSession {
	optional int64 npcId = 1;
	optional int32 timeStarted = 2;
	optional int32 position = 3;
}

message FinishTrainingSession {
	optional int32 position = 1;
	optional int64 npcId = 2;
}

/*** end of training ***/

/*** Start of Evolution ***/
message ReleaseSoul {
	optional int32 merit = 1;
	optional int32 newMerit = 2;
}

message EvolveLevel {
	optional bool success = 1;
	optional int64 newDollar = 2; // 剩余元宝
}

message Evolve {
	optional int64 originalActor = 1;
	optional Magic newGeniusMagic = 2;
	optional int32 position = 3;
}

message CombineBudda {
	optional int64 targetId = 1;
	optional int64 newDollar = 2;
	repeated int64 consumedNpc = 3;
}

/*** End of Evolution ***/

/*** Social Related ***/

message Mail {
	optional int64 id = 1;
	optional int64 receiverId = 2;
	optional int64 senderId = 3;
	optional string receiverName = 4;
	optional string senderName = 5;
	optional MailStatus status = 6;
	optional MailType type = 7;
	optional int32 sendTime = 8;   // the number of seconds since 2013/6/1 00:00:00
	
	optional LanguageMsg subject = 11;
	optional LanguageMsg content = 12;
	optional bool hasAttachment = 13;
	
	optional int64 arenaOpponentId = 21;
	optional int64 friendId = 22;
	optional bool friendAdded = 23;
	
	optional int64 showTime = 24;
}

message SendMail {
	optional bool success = 1;
}

message MailReceived {
	optional Mail mail = 1;
}

message ReadMail {
	optional bool success = 1;
}

message GetMails {
	repeated Mail mailList = 1;
}

message GetAttach {
	repeated int64 id = 1;
	repeated Award awardList = 2;
}

enum MailStatus {
	NEW = 0;
	READ = 1;
	ARCHIVED = 2;
}

message AddFriend {
	optional bool success = 1;
	
	optional Others Friend = 9;
}

message GetFriends {
	repeated Others friendList = 1;
	optional int32 count = 2;
}

message GetFans {
	repeated Others fanList = 1;
}

message SearchFriends {
	repeated Others friendList = 1;
	optional int32 count = 2;
}

message DeleteFriend {
	optional int64 id = 1;
}

message Speak {
	optional int64 speakerId = 1;
	optional string speakerName = 2;
	optional string content = 3;
	optional int64 time = 4;
	optional SpeakChannel channel = 5;
	
	optional int64 speakerTypeId = 6;
	optional int32 VipLevel = 7;	// VIP等级
	optional int64 VipExp = 8;		// VIP经验
	optional int32 faceVal = 9; // 颜值
	optional int32 godId = 10; // 神职ID
	optional int32 battlePower = 11; // 战力
	optional int32 skinId = 12; // 正在使用的皮肤
	optional int32 level = 13; // 等级
}

enum SpeakChannel {
	CHANNEL_World = 1;
	CHANNEL_Guild = 2;
	CHANNEL_God = 3;
	CHANNEL_Pub = 4;
}

message SpeakList {
	repeated Speak speaks = 1;
}

//新聊天start////////////////////////////////////////////////////////////////
message SpeakerSummary{
    
    optional int32 VipLevel = 1;	// VIP等级
	optional int64 VipExp = 2;		// VIP经验
	optional int32 faceVal = 3; // 颜值
	optional int32 godId = 4; // 神职ID
	optional int32 battlePower = 5; // 战力
	optional int32 skinId = 6; // 正在使用的皮肤
	optional int32 level = 7; // 等级
	optional int64 speakerTypeId = 8;
	optional int32 usedTitle = 9;
}

message SpeakContent {
    optional int64 serverId       = 1;
	optional int64 speakerId      = 2;
	optional string speakerName   = 3;
	optional LanguageMsg content       = 4;
	optional int64 chatId         = 5;
	optional SpeakChannel channel = 6;

	optional SpeakerSummary speakerSummary    = 7;
    optional uint32 read                      = 8;   // 是否已读, 0 未读， 1表示已读
	optional int32 type                       = 9;   // 0 聊天消息， 1系統消息  2客服消息
}

message ChatReply {
	optional int64 chatId			           = 1;
    //optional ChatAddBlack    chatAddBlack    = 2;            //拉黑名单
    //optional ChatDelBlack    chatDelBlack    = 3;            //解除黑名单
    //optional ChatBlackList chatBlackList     = 4;
}

message GetChatInfo {
	optional ChatReply chatReply			= 1;
	repeated SpeakContent speakContents 	    = 2;
}

//新聊天end////////////////////////////////////////////

/*** End of Social Related ***/

/*** Daily event ***/
message CashOutDailyExp {
	optional int32 exp = 1;
	optional bool success = 2;
}

message EatDailyPeach {
	optional TodayPeachStatus status = 1;
	optional int64 newStamina = 2;
	optional int32 staminaAdded = 3;
	repeated Award awardList = 4; // 吃桃奖励
}

message TodayPeachStatus {
	optional bool noon = 1;
	optional bool night = 2;
	optional int32 currentTime = 3;
}

message ReadyToSignToday {
	optional int32 signProgress = 4;
}

message SignToday {
	repeated Award awardList = 1;
}

/**** end of daily event ***/

/*** Ghost Lord ***/
message GhostLord {
	optional int64 lordId = 1;
	optional int32 timeRemaining = 2;
	optional int32 numberRemaining = 3;
	optional int64 finderId = 4;
	optional string finderName = 5;
	optional int64 finderTypeId = 6;
	optional int32 totalRemainingHp = 7;
	optional int32 totalHp = 8;
	optional int32 level = 9;
	optional int64 lordTypeId = 10;
	optional int32 lordNumber = 11;
	
	optional int32 seq = 21;
}

message GetGhostLordList {
	repeated GhostLord myLordList = 1;
	repeated GhostLord friendLordList = 2;
	optional int32 todaySummonLordRemainingCount = 3;
	optional int32 coolDownTime = 4;
	optional int32 todayKillFriendsCount = 5;
	optional bool passAwardDrawed = 6; // 战胜蛮族的奖励是否领取
}

message FightGhostLord {
	optional int64 lordId = 1;
	repeated Award awardList = 2;
	optional int32 todayKillFriendsCount = 3;
}

message SummonGhostLord {
	optional int64 lordId = 1;
	optional FightGhostLord fightResult = 2;
}

message ClearGhostLordCoolDown {
}

// 标记  新产生商人事件
message  NewAddGhostLordEvent{
}

//蛮族入侵 击杀蛮族，触发商人事件 [商人事件可开启一个礼包购买机会]
message GhostLordTradeEvent{

	repeated GhostLordEvent tradeEvents = 1;// 商人事件

	message GhostLordEvent{
		optional int64  eventLeftTime = 1;// 事件 剩余有效时间
		optional int64  eventBeginTime = 2;// 事件 产生时间
	}

}
// 蛮族击杀之后，宝箱的奖励协议单独发送
message GhostLordAwardDrawMsg {
	repeated Award overAwardList = 1;
}
/*** end of Ghost Lord ***/

message AllAnnouncements {
	repeated Announcement announcementList = 1;
	optional int32 count = 2;
}

message Announcement {
	optional string subject = 1;
	repeated string content = 2;
	optional int32 gotoPanel = 3;
	optional int32 seq = 11;
}

message Paomadeng {
	repeated string contentList = 1;
}

message Others {
	optional int64 id = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional int32 rank = 4;
	repeated int64 actorTypeIds = 5;
	optional bool real = 6;
	optional int32 templeLvel = 7;
	optional int32 believers = 8;
	optional int32 todayGhost = 9;
	optional int32 battlePower = 10;
	
	optional ArenaOpponentStatus status = 11;
	optional FriendGroup friendType = 12;
	
	optional int32 yesterdayArenaRank = 13;
	
	optional int32 seq = 21;
	
	optional bool isLuck = 31;
	optional int32 rankChange = 32;	// 正的表示排名上升,负的表示排名下降,0表示不变
	optional int32 usedTitle = 33;
	// 颜值相关
	optional int32 godId = 34; // 圣职ID
	optional int32 skinId = 35; // 皮肤
	optional int32 faceVal = 36; // 颜值
	optional int64 actorTypeId = 37; // 主角卡牌
}

message UpdateNpcProperty {
	optional Npc npc = 1;
}

message UpdateNpcList {
	repeated Npc list = 1;
}

message Buy {
	optional int64 itemId = 1;
	optional bool isVipGift = 2;
	optional int64 itemTypeId = 3;
}

message BoughtVipGifts {
	repeated int64 itemId = 1;
}

message UseItem {
	optional int64 itemId = 1;
	optional int32 newCount = 2;
	repeated Award awardList = 3;
	optional int64 consumedItemId = 4;
	optional int32 consumedItemNewCount = 5;
	optional LanguageMsg message = 6;	// 消息
}

message BuyStamina {
	optional int32 staminaBought = 1;
	optional int32 newStamina = 2;
	optional int32 dollarCost = 3;
	optional int64 newDollar = 4;
	optional int32 boughtTime = 5;
}

message BuyGodStamina {
	optional int32 staminaBought = 1;
	optional int32 newStamina = 2;
	optional int32 dollarCost = 3;
	optional int64 newDollar = 4;
	optional int32 boughtTime = 5;
}

message BuyQi {
	optional int32 qiBought = 1;
	optional int32 newQi = 2;
	optional int32 dollarCost = 3;
	optional int64 newDollar = 4;
	optional int32 boughtTime = 5;
}

message GetMyCollections {
	repeated int64 list = 1;
}

message RetrieveLevelAward {
	repeated Award awards = 1;
}

message LevelUpAward {
	optional int64 dollar = 1;
	optional int64 coin = 2;
	optional int32 drugs = 3;
	optional int32 merit = 4;
	optional int32 isCharacter = 5; //0 人物升级 1 神庙升级 2 炼金升级
}

/*** start of temple ***/
message CurrentTempleTask {
	optional int32 index = 1;
	optional int64 horseTypeId = 2;
}

message NextTempleTask {
	optional int32 index = 1;
}

message CompleteTempleTask {
	optional int32 merit = 1;
	optional int32 believer = 2;
	optional int32 nextTaskIndex = 3;
	optional bool battleWin = 4;
	
	repeated Award awardList = 11;
	optional int64 horseTypeId = 12;
	optional int32 turnTableId = 13;	//转盘结果ID
}

message ZhenYaoStatus {
	optional int64 horseTypeId = 1;	
}

message ZhenYao {
	optional int64 horseTypeId = 1;
}

message CaptureHorseResult {
	optional bool success = 1;
	optional Horse horse = 2;
	optional int32 payback = 3;
}

message TempleDailyAward {
	optional int32 coin = 1;
	optional int32 rank = 2;
	optional double factor = 3;
}

message TempleRanks {
	repeated TempleRankData list = 1;
	optional int32 remainingSeconds = 2;
	optional int32 addBeliever = 3;
	optional string awardStr = 4;
	optional bool hasTakenAward = 5;
	optional int32 awardBelieverNum = 6;
	optional int32 yesterdayTempleRank = 7;
}

message TempleRankData {
	optional int64 id = 1;
	optional string name = 2;
	optional int32 believer = 3;
	optional int32 rank = 4;
	optional double factor = 5;
	optional int32 templeLevel = 6;
}

message TempleAssistants {
	repeated int64 list = 1;
}

message SendGhostResult {
	optional SendGhostResultError error = 1;
	repeated MySentGhost list = 2;
	repeated Others friendList = 3;
}

enum SendGhostResultError {
	GhostError_Success = 0;
	GhostError_TargetFull = 1;
	GhostError_LevelTooDiff = 2;
}

message MySentGhostList {
	repeated MySentGhost list = 1;
}

message MySentGhost {
	optional int64 targetId = 1;
	optional bool success = 2;
	optional bool finished = 3;
}

message GhostListInMyTemple {
	repeated GhostInMyTemple list = 1;
}

message GhostInMyTemple {
	optional int64 senderId = 1;
	optional string senderName = 2;
}

message GhostStatus {
	repeated MySentGhost sentGhostList = 1;
	repeated GhostInMyTemple ghostListInMyTemple = 2;
	repeated MySentGhost returnList = 3;
	repeated GhostInMyTemple escapedGhostList = 4;
	repeated Others friendList = 5;
}

message KickGhost {
	optional GhostInMyTemple ghost = 1;
	optional int32 merit = 2;
	optional int32 believer = 3;
}

message LevelUpTower {
}

message LevelUpJinshen {}

/*** end of temple ***/


/*** Activities ***/

message JubaopenStatus {
	optional int32 level = 1;
	optional int32 coin = 2;
	optional int32 remainingSeconds = 3;
	optional int32 maxLevel = 4;
}

message LevelUpJubaopen {
	optional JubaopenStatus status = 1;
	repeated Award awards = 2;
}

message TakeFromJubaopen {
	optional int32 coin = 1;
}

message SaleItem {
	optional int64 itemId = 1;
	optional int32 dollar = 2;
	optional int32 coin = 3;
	optional int32 remainingCount = 4;
	optional int32 remainingQuota = 5;
	optional int64 id = 6;
	optional int32 remainingSeconds = 7;
}

message SaleList {
	optional int32 saleRemainingSeconds = 1;
	repeated SaleItem items = 2;
}

message BuySaleItem {
	optional int64 id = 1;
	repeated Award items = 2;
	optional SaleList list = 3;
}

message LingShiSaleItem {
	optional int64 id = 1;
	optional int32 lingshiPrice = 2;
	optional int32 remainingQuota = 3;
	optional int32 remainingCount = 4;
	
	optional Award award = 5;
}

message LingShiSaleList {
	optional int32 saleRemainingSeconds = 1;
	repeated LingShiSaleItem items = 2;
}

message BuyLingShiItem {
	optional int64 id = 1;
	repeated Award items = 2;
	optional LingShiSaleList list = 3;
}

message CollectionAchievementStatus {
	repeated int32 progress = 1;
	repeated int32 requirement = 2;
	optional int32 remainingSeconds = 3;
	repeated bool taken = 4;
}

message TakeCollectionAchievement {
	repeated Award awards = 1;
	optional CollectionAchievementStatus status = 2;
}

message LevelAchievementStatus {
	repeated bool taken = 1;
}

message TakeLevelAchievementAward {
	repeated Award awards = 1;
	optional LevelAchievementStatus status = 2;
	optional int32 VipExp = 3;
}

message UseActivationCode {
	optional UseActivationCodeResult result = 1;
	repeated Award awardList = 2;
	optional int32 type = 3;   //用于对话
}

message TopUpAwardList {
	optional int32 remainingSeconds = 1;
	optional int32 toppedUp = 2; // 活动开始时已充值
	repeated int32 dollar = 4;
	repeated bool taken = 5;

	repeated TopUpAward awardList = 6;
}

message TopUpDay {
    optional string strDate = 1;
    optional int32 toppedUp = 2; // 活动开始时已充值
	optional bool taken = 3;
}

message TopUpAwardDayList {
	optional int32 remainingSeconds = 1;
	repeated TopUpDay topUpDay = 4;
}

message TopUpAward {
	repeated int64 entityIdList = 1;
	repeated int32 entityCount = 2;
	repeated EntityType entityTypeList = 3;
}

message TakeTopUpAward {
	repeated bool taken = 1;
	repeated Award awards = 2; // 真的获取的奖励
}

message ConsumptionAwardList {
	optional int32 remainingSeconds = 1;
	optional int64 consumedDollar = 2; // 活动开始时已消耗元宝数
	repeated int64 dollar = 3;
	repeated bool taken = 4;

	repeated TopUpAward awardList = 5;
}

message TakeConsumptionAward {
	repeated bool taken = 1;
	repeated Award awards = 2; // 真的获取的奖励
}

message CollectTodayVipSalary {
	repeated Award awards = 1;
}

message VipSalaryStatus {
	optional bool todayTaken = 1;
}

message ConsumptionInfo {
	optional int64 characterId = 1;
	optional string characterName = 2;
	optional int32 characterLevel = 3;
	optional int32 order = 4;
	optional int32 consumedDollar = 5;
}

message TopConsumptionList {
	optional int32 remainingSeconds = 1;
	optional int32 consumedDollar = 2; // 活动开始时已消耗元宝数
	
	repeated ConsumptionInfo list = 3;
	repeated Award awardList = 4;
}

message ReturnGiftTaken {
	repeated Award list = 1;
}

enum UseActivationCodeResult {
	UAC_SUCCESS = 0;
	UAC_WRONG_FORMAT = 1;
	UAC_NOT_EXIST = 2;
	UAC_ALREADY_USED = 3;
	UAC_SAME_TYPE_USED = 4;
	UAC_EXPIRED = 5;
	UAC_FORBIDEN = 6;
	UAC_TIMES_LIMIT = 7;
}

message FenbaoStatus {
	optional int32 totalDays = 1;
	optional int32 accDays = 2;
	optional bool canFenbao = 3;
	
	repeated Award awards = 11;
}

message FenbaoResult {
	optional FenbaoStatus status = 1;
 	repeated Award awardList = 2;
	optional int32 exp = 3;
}

message LongGongStatus {
	optional int32 freeTimes = 1;
	optional int32 price = 2;
	repeated LongGongItem items = 3;
	optional int32 position = 4;
}

message LongGongItem {
	optional bool advanced = 1;
	optional Award award = 2;
	optional bool taken = 3;
	optional int32 position = 4;
}

message ExploreLongGongResult {
	optional int32 freeTimes = 1;
	optional bool advanced = 2;
	optional bool takeAll = 3;
	optional int32 updatedDollar = 4;
	repeated Award awardList = 5;
	repeated LongGongItem newItems = 6; // when "takeall" happens, all items will be refreshed.
	optional int32 position = 7;
}

message GetWeiboAward {
	optional bool success = 1;
}

/*** invitation ***/

message InvitationStatus {
	optional string myInvitationId = 1;
	optional int64 invitedBy = 2;
	optional int32 totalInvited = 3; // 全部邀请人数
	optional int32 invitedAndLevelUp = 4;  // 邀请而且到达等级要求的人数
	optional int32 levelRequirement = 5; // 等级要求 - 目前是45
	
	repeated int32 needCount = 11;
	repeated bool taken = 12;
	repeated TopUpAward awards = 13;
}

message TakeInvitationAward {
	repeated Award awards = 1; // 真的获取的奖励
	optional InvitationStatus status = 2;
}

message ConfirmInvitation {
	repeated Award awardList = 1;
}

/*** end of Activities ***/

/** Task related **/
message CurrentTask {
	optional Task task = 1;
}

message Task {
	optional int64 taskId = 1;
	optional bool accomplished = 2;
}

message TakeTaskAward {
	repeated Award awards = 1;
	optional Task newTask = 2;
}

message TaskAccomplished {
	optional Task task = 1;
}

message TaskFinished { // 这个协议的唯一作用是完成任务时在兑现奖励之前通知前端
}

/** end of task **/

message ChangeName {
}

/*** user guide ***/

message GuideAvailable {
	optional int32 id = 1;
}

message FinishGuide {
	optional int32 id = 1;
}

/*** end of user guide ***/

message LundaoStatus {
	optional bool canFight = 1;
	optional int64 endTime = 2;
	optional OtherPlayer admireTarget = 3;
	optional LundaoFightStatus fightStatus = 4;
	optional bool canAdmire = 5;
	optional int32 mobaiCount = 6;	//被膜拜次数
}

message AdmireLundao {
	optional int32 ganwu = 1;
}

message LundaoFightStatus {
	optional int32 ganwuToday = 1;
	optional int32 jinxianlingCount = 2;
	optional OtherPlayer topPlayer = 3;
	optional int32 topPlayerGanwu = 4;
	repeated LundaoPositionStatus positions = 5;
}

message LundaoPositionStatus {
	optional int32 position = 1;
	optional OtherPlayer player = 2;
	optional int32 occupiedMinutes = 3;
	optional int32 debuffValue = 4;
	optional int32 ganwu = 5;
}

message AttackLundao {
	optional bool emptyPosition = 1;		// 是否占据一个空位置
	optional LundaoStatus status = 2;
	optional bool needRefresh = 3;  // 排名发生变化
}

message OtherPlayer {
	optional int64 actorTypeId = 1;
	optional string name = 2;
	optional int32 battlePower = 3;
	optional int32 level = 4;
	optional int64 actorId = 5;
	optional int32 usedTitle = 6;
	optional int32 godId = 7; // 圣职ID
	optional int32 skinId = 8; // 皮肤
	optional int32 faceVal = 9; // 颜值
	optional int64 mainActorTypeId = 10; // 主角卡牌
}

message Ganwu {
	repeated Award award = 1;
}

message TakeCommentAward {
	repeated Award award = 1;
}

message TakeDownloadAward {
}

/** 红包 **/

message Redbag {
	optional int64 id = 1;
	optional string senderName = 2;
	optional bool isSystem = 3;          // 是否系统发送
	optional int32 count = 4;			 // 剩余多少个
	optional int64 senderId = 5;		 // 发送者id, 如果是系统则为0
	optional int64 senderTypeId = 6;	 // 如果是系统红包，没有头像
	optional int32 remainingSeconds = 7; // 玩家的红包不显示倒计时
}

message RedbagStatus {
	repeated Redbag bags = 1;
	optional string richName = 2;
	optional int32 richDollar = 3;
	optional string luckyName = 4;
	optional int32 luckyDollar = 5;
}

message DistributeRedbag {
	optional RedbagStatus status = 1;
	repeated Award awards = 2;
}

message OpenRedbag {
	optional RedbagStatus status = 1;
	repeated Award awards = 2;
}

/** end of 红包 **/

/** 月卡 **/

message MonthVipStatus {
	optional int32 vipDollarNeeded = 1;
	optional int32 vipLastDays = 2;
	optional bool activated = 3;
	optional int32 accDollar = 4;
	optional int32 remainingDays = 5;
	repeated Award preview = 6;
	optional bool canTakeAward = 7;
}

message TakeDailyMonthVipAward {
	optional MonthVipStatus status = 1;
	repeated Award awards = 2;
}

/** end of 月卡 **/

message DessembleEquip {
	optional int64 equipId = 1;
	repeated Award awards = 2;
}

message DessembleEquipMul {
	repeated DessembleEquip dessembleEquips = 1;
}

message DessembleMagicMul {
	repeated DessembleMagic dessembleMagics = 1;
}

message DessembleHorseMul {
	repeated SellHorse sellHorses = 1;
}

message CombineEquip {
	repeated Award awards = 2;
}

message DessembleMagic {
	optional int64 magicId = 1;
	repeated Award awards = 2;	
}

enum ArenaOpponentStatus {
	Arena_CanChallenge = 0;
	Arena_CanFightBack = 1;
	Arena_God = 2;
	Arena_Loser = 3;
}

enum EquipPart {
   EQUIP_UNEQUIPED = 0;
   WEAPON = 1;
   ARMER = 2;
   MISC = 3;
}

enum MagicPart {
   MAGIC_UNEQUIPED = 0;
   GENIUS = 1;
   MAGIC1 = 2;
   MAGIC2 = 3;
}

enum BookPart {
	BOOK_UNEQUIPED = 0;
	BOOK_1 = 1;
	BOOK_2 = 2;
	BOOK_3 = 3;
	BOOK_4 = 4;
	BOOK_5 = 5;
	BOOK_6 = 6;
	BOOK_7 = 7;
}

enum MagicCategory {
   ATTACK = 1;
   INTERNAL = 2;
   HYBRID = 3;
}

enum BuffType {
	Buff_Attack = 0;
	Buff_Defense = 1;
	Buff_Hp = 2;
	Buff_Magic = 3;
}

enum BattleType {
	BattleType_Level = 0;
	BattleType_Arena = 1;
	BattleType_Liudao = 2;
	BattleType_Robbery = 3;
	BattleType_Temple = 4;
	BattleType_GhostLord = 5;
	BattleType_WuYueZhiZun = 6;
	BattleType_Lundao = 7;
	BattleType_Sect = 8;
	BattleType_Sanjie = 9;
	BattleType_Qbyd = 10;
}

enum LoginError {
	LoginSuccess = 0;
	InvalidCredential = 1;
	AccountLocked = 2;
}

enum CreateAccountError {
    Account_NOERROR = 0;
	NameAlreadyExist = 1;
	InvalidName = 2;
	HasSentitiveWord = 3;
}

enum BattleActionType {
	NoAction = 0;
	BATTLE_ATTACK = 1;
	BATTLE_MAGIC = 2;
	BATTLE_HURT = 3;
	BATTLE_ZHUJUEJI = 4;
	BATTLE_BUFF = 5;
	BATTLE_DEBUFF = 6;
	BATTLE_REVIVE = 7;
	BATTLE_CURE = 8;// 治疗 回血
}

enum ProtoError {
	// user error
	NoError = 0;
	GeneralErr = 1;
//	NotEnoughCoin = 2;
//	NotEnoughDollar = 3;
//	EquipLevelReachCharacterLimit = 4;
	
	// mail
	MailSubjectTooLong = 11;
	MailContentTooLong = 12;
	MailSendTooFrequent = 13;
	MailTargetNotFound = 14;
	MailBlackList = 15;
	
	// friend
	FriendTargetNotFound = 21;
	FriendCanNotAddSelf = 22;
	FriendAlreadyAdded = 23;
	FriendLimitReached = 24;
	
	// likely malicious commands
//	TargetNotFound = 1001;
//	MagicToSwallowNotFound = 1002;
//	InvalidNpcPosition = 1003;
//	MagicPositionWrong = 1004;
}

enum EntityType {
	None = 0;
	EntitySpirit = 2;
	EntityMagic = 3;
	EntityEquip = 5;
	EntityBook = 6;
	EntityItem = 7;	
	EntityHorse = 8;
	EntityActor = 10;
	EntityMagicFragment = 12;
	Coin = 101;
	Stamina = 102;
	Qi = 103;
	Exp = 104;
	Dollar = 105;
	Merit = 106;
	ArenaTime = 107;
	GodStamina = 108;
	ArenaScore = 109;
	Zhihui = 110;
	Hornor1 = 111;
	Hornor2 = 112;
	RENDE = 113; // 人德
	Xintu = 115;	//信徒
	Feizi = 116;	//妃子
	SKIN = 117; // 时装
	VIPEXP = 118;	//vip经验
	LandForce = 119;	//步兵
    Archers = 120;		//弓兵
    CityForce = 121;	//攻城兵
}

enum MailType {
	Normal = 0;
	ArenaDefenseSuccess = 1;
	ArenaDefenseFailed = 2;
	NewFriend = 3;
	AlreadyFriend = 4;
	NoFriend = 5;
	System = 6;
	RobberyDefenseSuccess = 7;
	RobberyDefenseFailed = 8;
	LundaoFailure = 9;
	CsReply = 10 ;	//玩家收到客服回复之后 邮件提醒
	Sanjie = 11;	//三界邮件
}

enum ClassFilterType {
	Filter_None = 0;
	Filter_LowerThanYi = 1;
	Filter_LowerThanJia = 2;
	Filter_All = 3;
}

enum MifaBuffType {
	MIFA_None = 0;
	MIFA_Attack_Inc = 1;
	MIFA_LIANJI = 2;
}

enum ArenaFirstAchievedAwardLevel
{
	R1 = 1;
	R10 = 2;
	R50 = 4;
	R100 = 8;
	R200 = 16;
	R500 = 32;
	R1000 = 64;
}

enum FriendGroup
{
	Group_Friend = 0;
	Group_RobberyEnemy = 1;
	Group_ArenaEnemy = 2;
	Group_Fan = 3;
}

// 获取单笔充值实际奖励
message TakeOnceTopUpAwards {
	repeated Award awards = 1;					// 实际奖励列表
	optional GetAllOnceTopUpAwards status = 2;	// 领取之后列表状态
}

// 奖励具体信息
message OnceTopUpAwards {
	optional int32 dollar = 1;				
	optional int32 takeCount = 2;			// 已经领取次数
	optional int32 totalTopUpCount = 3;		// 总有效充值次数
	optional int32 maxCount = 4;			// 领取次数上限
	repeated Award awards = 5;
}

// 获取所有单笔充值奖励信息
message GetAllOnceTopUpAwards {
	optional int32 remainingSeconds = 1;
	repeated OnceTopUpAwards awards = 2;
}

// 神农鼎炼丹奖励
message RefiningElixir {
	repeated Award awards = 1;				// 奖励列表
}

// 获取新手福利活动奖励列表
message GetNewcomerAwardList {
	repeated NewcomerAward award = 1;
	optional int32 LoginDayCount = 2;
}

message NewcomerAward {
	optional int32 LoginDayIndex = 1;	// 第几天
	optional bool IsTaken = 2;			// 是否被领取
	optional bool CanTake = 3;			// 是否可以领取
	repeated Award awards = 4;			// 奖励预览
}

// 领取新手福利活动奖励
message TakeNewcomerAward {
	repeated Award awards = 1;					// 奖励预览
	optional GetNewcomerAwardList status = 2; 	// 领取后状态
}

// VIP商店物品列表
message GetVIPShopItems {
	repeated VIPShopItem itemList = 1;
}

// VIP商店物品
message VIPShopItem {
	optional int32 vipLv = 1;			// VIP等级
	optional bool isbought = 2;			// 当前等级的是否已经购买
	optional bool canBuy = 3;			// 是否可以购买当前等级的物品
	optional int32 cost = 4;			// 当前等级商品的价格
	optional Award awardPreview = 5;	// 商品预览列表
}

// 购买VIP商店物品
message BuyVIPShopItem {
	repeated Award items = 1;					// 购买的物品预览
	optional GetVIPShopItems status = 2; 		// 购买后状态
}

// 仙山状态
message GetTianShanStatus {
	optional int32 currentTianShanIndex = 1;	// 当前可探索的仙山
	optional int32 todayFreeExploreTimes = 2;	// 今天免费探索次数
	optional int32 allFreeExploreTimes = 3;		// 总的免费探索次数
	optional int32 dollarExploreCost = 4;		// 每次元宝探索消耗
}

// 探索仙山
message ExploreTianShan {
	repeated Award awards = 1;					// 奖励预览
	optional GetTianShanStatus status = 2;		// 探索后状态
}

message GetCurrentFateInfo {
	optional int64 fateID = 1;					// 签的ID
	optional bool feeFateUsed = 2;				// 免费抽签机会是否已经被使用
}

message TakeFate {
	optional int64 fateID = 1;					// 签的ID
	optional bool feeFateUsed = 2;				// 免费抽签机会是否已经被使用
}

message ExplainFate {
	optional int64 fateID = 1;					// 签的ID
	optional bool feeFateUsed = 2;				// 免费抽签机会是否已经被使用
}

message FirstLuckPay
{
	optional bool used = 1;
	optional int32 pay_id = 2;
	optional TopUpGood good = 3;
	optional int64 time_cd = 4;
}

message LuckPayRatio
{
	optional LuckPay luckpay	= 1;
}

message LuckPay
{
	message LuckGood{
		optional int32 pay_id = 1;
		optional TopUpGood good = 2;
		optional bool used = 3;
	}
	
	optional bool used = 1;
	optional float ratio = 2;
	repeated LuckGood goods = 3;
	optional int64 time_cd = 4;
}

message GetActorRankInfo {
	repeated ActorRankInfo actorList = 1;			// 仙友列表
}

message ActorRankInfo {
	optional int64 actorID = 1;			// 仙友ID
	optional bool canUpgrade = 2;		// 可否升阶
	optional bool canReduce = 3;		// 可否降阶
}

message UpgradeActorRank {
	optional bool isSuccess = 1;		// 是否成功
	optional int64 originalActorId = 2; // 原仙友ID
	optional int64 newActorId = 3; 		// 新仙友ID
}

message ReduceActorRank {
	optional bool isSuccess = 1;		// 是否成功
	optional int64 originalActorId = 2; // 原仙友ID
	optional int64 newActorId = 3; 		// 新仙友ID
	repeated Award items = 4; 			// 降阶获得的降阶丹
}

message TakeTreasureAwards {
	repeated Award newItems = 1;				// 获得的物品
	repeated Award costItems = 2;				// 消耗的物品
	optional GetTreasureAwardsList status = 3;	// 兑换后活动的最新状态
}

message TakeTreasureAwardsMul {
	repeated TakeTreasureAwards takeTreasureAwardsList = 1;				// 获得的物品
}


message GetTreasureAwardsList {
	repeated TreasureAwardInfo rules = 1;		// 兑换公式
	optional int64 remainingSeconds = 2;		// 活动结束时间
}

message TreasureAwardInfo {
	optional int32 index = 1;					// 从1开始的序号
	optional int32 totalTakeCount = 2;			// 总的可兑换次数
	optional int32 takenCount = 3;				// 已经领取次数
	optional Award newItems = 4;				// 获得的物品
	repeated Award costItems = 5;				// 消耗的物品
}

message GemSaleList {
	optional int32 GemCount = 1;				// 天宫宝玉数量
	optional int64 remainingSeconds = 2;		// 活动结束时间
	repeated GemItem ShopItems = 3;				// 仙界商人出售的物品列表
}

message GemItem {
	optional int64 id = 1;						// 序号						
	optional bool hasBought = 2;				// 是否已经购买
	optional int32 price = 3;					// 购买此物品需要消耗的天宫宝玉
	optional Award award = 4;					// 物品预览
}

message BuyGemShopItem {
	repeated Award newItems = 1;				// 获得的物品
	optional GemSaleList status = 2;			// 商店最新状态
}

message EquipEvolve {
	optional bool isSuccess = 1;				// 是否成功
	optional Equip newEquip = 2;				// 新的装备
}

message DessembleBook {
	optional int64 bookId = 1;
	repeated Award awards = 2;	
}

message TianYuanCollect {
	optional int64 id = 1;						// 天缘ID
	optional bool hasTakenAward = 2;			// 是否已经领取对应奖励
	optional bool canTakeAward = 3;				// 是否可以领取对应奖励
	repeated int64 existsNpcs = 4;				// 已经拥有的NPC列表
}

message TianYuanCollectStatus {
	repeated TianYuanCollect collectInfo = 1;	// 天缘列表
}

message TakeTianYuanCollectAward {
	repeated Award awards = 1;					// 奖励预览
	optional TianYuanCollectStatus status = 2;	// 最新天缘收集情况
}

message SelectSect {
	optional int32 newSectType = 1;				// 选择成功后的教派
}

message ChangeSect {
	optional int32 newSectType = 1;				// 转换之后的教派
	optional int32 oldSectType = 2;				// 转换之前的教派
	optional int32 nowMapIndex = 3;				// 当前所在地图
}

message ChangeTempleMap {
	optional int64 newMap = 1;				// 转换之后的地图
	optional int64 oldMap = 2;				// 转换之前的地图
	repeated MapTempleCount status = 3;		// 地图信息
}

message ClearChangeTempleMapTime {
	optional bool isSuccess = 1;			// 是否成功
}

message OtherTempleListInfo {
	repeated CharacterSectInfo temples = 1;	// 神庙列表
	optional MapTempleCount templeInfo = 2;	// 当前地图神庙信息
}

message GetSectRankInfo {
	repeated CharacterSectInfo temples = 1;	// 神庙列表
	optional int64 nextRefreshDate = 2;		// 下次刷新时间
	optional SectCreditAward status = 3;	// 声望奖励信息
}

message TakeSectCreditAward {
	repeated Award awardView = 1;			// 本次获得的奖励预览
	optional SectCreditAward status = 2;	// 声望奖励信息
}

message SectCreditAward {
	optional bool hasTakenAllAwards = 1;    // 本周所有奖励是否全部领取
	optional bool canTakeNextAward = 2;		// 下一个声望奖励是否可以领取
	optional int32 nextAwardNeedCredit = 3;	// 下次奖励还需要的声望值
	repeated Award nextAwardView = 4;		// 下次奖励预览
}

message GetSectAllJobInfo {
	repeated CharacterSectInfo temples = 1;	// 神庙列表
	optional int64 nextRefreshDate = 2;		// 下次刷新时间
}

message CharacterSectInfo {
	optional int64 id = 1;					// 玩家ID
	optional string name = 2;				// 玩家名称
	optional int32 lv = 3;					// 玩家等级
	optional int32 battlePower = 4;			// 玩家战力
	optional int32 templeLv = 5;			// 神庙等级
	optional int32 templeDefence = 6;		// 神庙城防值
	optional int64 mapOfTemple = 7;			// 神庙所在地图
	optional int32 sectType = 8;			// 当前教派
	optional int64 sectCredit = 9;			// 教派声望
	optional int64 sectFeats = 10;			// 教派功勋
	optional string sectJob = 11;			// 教派职位
	optional string sectTitle = 12;			// 教派称号
	optional int64 costTaoFaLing = 13;		// 攻打消耗讨伐令数量
	optional int32 distance = 14;			// 距离
	optional int32 sectCreditRank = 15;		// 教派声望排名
	optional int32 sectTitleID = 17;		// 教派称号ID
	optional int32 sectTitleLv = 18;		// 教派称号等级
	optional int32 rankAwardFeatsView = 19;	// 声望排名奖励显示值
	optional int32 sectJobID = 20;			// 教派职位ID
	optional string serverName = 21;		// 服务器名称
	optional int32 serverId = 22;			// 服务器ID
}

message SectShopItem {
	optional int32 index = 1;				// 序号
	optional int64 needFeat = 2;			// 需要功勋
	repeated Award awardView = 3;			// 道具预览
}

message GetSectShopItemList {
	repeated SectShopItem shopItems = 1;	// 商城内道具列表
	optional int64 nowFeats = 2;			// 现有功勋值
}

message BuySectShopItem {
	repeated Award newItems = 1;			// 获得的物品
	optional GetSectShopItemList status = 2;// 购买后刷新状态
}

message AttackTemple {
	optional bool isSuccess = 1;				// 是否胜利
	optional int32 stars = 2;				// 战斗星级数
	optional int32 getCredit = 3;			// 获得的声望
	optional int32 getFeat = 4;				// 获得的功勋
	optional int32 NowTaoFaLingCount = 5;		// 剩余讨伐令
	optional CharacterSectInfo defenderInfo = 6;	// 防守方信息
}

message NewTitle {
	optional int32 newTitleLv = 1;			// 新的称号等级
	optional int32 newTitleID = 2;			// 新的称号ID
	optional string newTitleName = 3;		// 新的称号名称
}

message TakeSectTitleAward {
	optional int64 getMerit = 1;			// 获得的功德
	optional int64 getCoin = 2;				// 获得的银两
	optional int64 getFeat = 3;				// 获得的功勋
}

message BuyTaoFaLing {
	optional int32 taoFaLingCount = 1;			// 购买后讨伐令数量
	optional int32 todayBuyTaoFaLingTimes = 2;	// 今日购买讨伐令次数
	optional int32 costDollar = 3;				// 消耗的元宝
}

message GetMapTempleCount {
	repeated MapTempleCount maps = 1;			// 地图列表
}

message MapTempleCount {
	optional int32 mapIndex = 1;			// 地图
	optional int32 templeCount = 2;			// 神庙数量
}

message SectAttackReportList {
	repeated SectAttackReport reports = 1;		//战报列表
}

message SectAttackReport {
	optional int32 attackTime = 1;			// 攻击时间
	optional int64 attacker = 2;			// 攻击者ID
	optional string attackerName = 3;		// 攻击者名称
	optional string report = 4;				// 内容
	optional int32 serverId = 5;			// 攻击者所在服务器ID
	optional int64 id = 6;					// 战报唯一ID
	optional bool isStrikeback = 7;			// 是否已反击
}

message SectStrikebackResult {
	optional int64 id = 1;		// 战报ID
	optional bool isStrikeback = 2;	// 是否已反击
}

message SectStrikeback {
	optional CharacterSectInfo targetInfo = 1;	// 反击目标的信息
	optional int64 reportId = 2;			// 战报ID
}

message AttackTempleNeedRefresh {
}

message SectTempleReturnToBase {
	optional int32 oldMap = 1;
	optional int32 newMap = 2;
}

message AlchemistStatus {
	optional int32 level = 1;
	optional int32 exp = 2;
}

message MakeAlchemist {
	optional int64 id = 1;
	optional AlchemistStatus status = 2;
	repeated Award award = 3;
}

message MakeAlchemistMul {
	repeated MakeAlchemist makeAlchemistList = 1;
}

message TakeBelieverRankAward {
	optional bool success = 1;
	repeated Award award = 2;
}

message TopUpGood {
	optional string id = 1;
	optional float price = 2;
	optional int32 dollar = 3;
	optional int32 vipExp = 4;
	optional bool firstTopUp = 5;
	optional int32 type = 6; 	//气运充值档次
	optional int32 payType = 7;	//档位类型 1为普通类型  2为月卡  3为终身卡 4征服世界礼包
	repeated int64 rewardId = 8;		//征服世界礼包的奖励ID
	optional string rewardIdStr = 9;	//征服世界礼包的奖励字符串
	optional int32 countryId = 10;		//征服世界礼包对应的国家编号
	optional int32 originalPrice = 11;	//征服世界礼包的原价
	optional string currencyType=12;   //货币显示类型
}

message TopUpGoodList {
	repeated TopUpGood goods = 1;
}

message GetShareStatus {
	optional int32 status = 1;	//0:不可分享 1:可以分享
}

message GetSlotStatus {
	optional int32 freeCount = 1;
	optional int32 count = 2;
	repeated string awardMsg = 3;
	optional int32 weekCount = 4;
}

message RunSlotResult {
	repeated int32 slots = 1;
	repeated int32 result = 2;
	optional int64 newDollar = 3;
	optional GetSlotStatus slotStatus = 4;
	repeated Award awardList = 5;
}

////////////////////////// 占卜添加
message GetSlotCountAwardStatus {
	optional int64 awardTime = 1;
	optional int32 weekCount = 2;
	repeated int32 list = 3;
}

message SlotCountAward {
	optional int32 index = 1;
	repeated Award awardList = 2;
	optional GetSlotCountAwardStatus status = 3;
}

message GetSLotRank {
	optional SLotRankList rankList = 1;
	optional int64 time = 2;				//当前时间
	optional int64 awardTime = 3;			//奖励结算时间
	optional int32 weekCount = 4;			//本周获得积分
}

message SLotRankList {
	repeated RankData list = 1;
}

message RankData {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 actorTypeId = 3;
	optional int64 score = 4;
	optional int32 level = 5;
	optional int32 serverId = 6;
	optional int64 time = 7;
	optional int32 faceVal = 8; // 颜值
	optional int32 godId = 9; // 神职ID
	optional int32 battlePower = 10; // 战力
	optional int32 skinId = 11; // 正在使用的皮肤
	optional int32 qinmi = 12;	//亲密度(妃子排行榜)
	optional int32 meili = 13;	//美丽值(妃子排行榜)
	optional int32 feiziId = 14;	//妃子ID(妃子排行榜)
	optional int32 childNum = 15;	//子嗣数量(子嗣排行榜)
	optional int32 warCityId = 16;	//征服世界进度(征服世界排行榜)
}

////////////////////

message SysMessage {
	optional int32 msgType = 1;
	optional string content = 2;
}

message GetCampStatus {
	optional int32 curLevel = 1;
	optional string curTime = 2; // 探索倒计时，单位毫秒
	repeated string exploreInfo = 3;
}

message CampRand {
	optional int32 randId = 1;
	optional int32 discount = 2;
	repeated Award awardList = 3;
	optional int32 levelId = 4;
}

message CampRandMul {
	repeated CampRand campRandList = 1;
}

message BuyCampRandAward {
	optional int64 newDollar = 1;
	repeated Award awardList = 2;
}

message CampAward {
	optional int64 newDollar = 1;
	repeated Award awardList = 2;
}

message CampAwardMul {
	optional int64 newDollar = 1;
	repeated Award awardList = 2;
	repeated CampAward campAwardList = 3;
}

message GetRuinStatus {
	optional int32 floor = 1;
	optional int32 rank = 2;
	optional int32 score = 3;
	repeated string digInfo = 4;			//挖掘状态， 9个string,  0未挖掘， -1挖掘中， 其它挖掘到的奖励信息
	optional int32 digCountLeft = 5;
	optional int32 digCountBuy = 6;
	optional int32 resetCountLeft = 7;
	optional string bestReward = 8;
	optional bool hasGotBestReward = 9;
}

message RuinDig {
	optional GetRuinStatus status = 1;    	// 挖掘后刷新状态
	repeated Award awardList = 2;			//奖励物品
	optional int32 discountItem = 3;		//折扣物品ID
	optional int32 awardType = 4;			//1 奖励  2 战斗  3 挖掘中  4 折扣物品  5 下一层
	optional bool allOver = 5; // 全挖完
}

message BuyRuinDigCount {
	optional int64 newDollar = 1;
	optional int32 digCountLeft = 2;
	optional int32 digCountBuy = 3;
}

message ResetRuin {
	optional int32 newDollar = 1;
	optional GetRuinStatus status = 2;    // 刷新状态
}

message RuinNextFloor {
	optional GetRuinStatus status = 1;    	// 刷新状态
	repeated Award awardList = 2;			//奖励物品
	optional int64 newDollar = 3;
}

message GetRuinRank {
	optional RuinRankList rankList = 1;
	optional int64 time = 2;				//当前时间
	optional int64 awardTime = 3;			//奖励结算时间
	optional int32 score = 4;              //当前获得积分
}

message RuinRankList {
	repeated RankData list = 1;
}

message GetDiscountShopStatus {
	repeated int32 itemList = 1;
	repeated int32 statusList = 2;
}

message BuyDiscountItem {
	optional int64 newDollar = 1;
	repeated Award award = 2;
	optional GetDiscountShopStatus status = 3;    // 刷新状态
}

message GetGodShipStatus {
	repeated int32 godShips = 1;             // 已经激活的神格ID列表     
	optional GodShipData godShipData = 2;    // 加成的属性
}

message ActiveGodShip {
	optional int32 activeId          = 1;    // 激活的神格ID
	optional GetGodShipStatus status = 2;    // 刷新状态
}

//			1. 攻击加成（数值）
//			2. 防御加成（数值）
//			3. 血量加成（数值）
//			4. 法力加成（数值）
//			5. 雷属性攻击提高（百分比）
//			6. 火属性攻击提高（百分比）
//			7. 毒属性攻击提高（百分比）
//			8. 攻击增加（百分比）
//			9. 防御增加（百分比）
//			10. 血量增加（百分比）
//			11. 法力增加（百分比）
//			12. 物理伤害减少（百分比）
//			13. 法力伤害减少（百分比）
//			14.经验增加
//			15.金币增加
//			16.讨伐次数
//			17.积分增加
//			18.洗炼次数
//			19.功德增加
//			20.遗迹挖掘
//			21.摇奖次数
//			22.三界体力
//			23.三界移动次数
//			24.三界士气
message GodShipData {
	optional int32 attack = 1;
	optional int32 defence = 2;
	optional int32 blood = 3;
	optional int32 magic = 4;
	
	optional int32 lei = 5;
	optional int32 huo = 6;
	optional int32 du = 7;
	
	optional int32 attackPer = 8;
	optional int32 defencePer = 9;
	optional int32 bloodPer = 10;
	optional int32 magicPer = 11;
	
	optional int32 hurtDecrease = 12;
	optional int32 magicHurtDecrease = 13;
	
	optional int32 exp = 14;
	optional int32 coin = 15;
	optional int32 battleTimes = 16;
	optional int32 score = 17;
	
	
	optional int32 practiseTimes = 18;
	optional int32 contribution = 19;
	optional int32 historyTimes = 20;
	optional int32 drawTimes = 21;
	
	optional int32 leiGs = 22;
	optional int32 huoGs = 23;
	optional int32 duGs = 24;
	optional int32 hurtDecreaseGs = 25;
	optional int32 magicHurtDecreaseGs = 26;
	optional int32 csvVersion = 27;
	optional int32 sanjieTili = 28;		//三界-体力上限增加
	optional int32 sanjieMoveCount = 29;	//三界-移动次数上限增加
	optional int32 sanjieShiqi = 30;	//三界-士气上限增加
	optional int32 recruitReduceHours=31;	//招募时间缩减
	optional int32 getBeliverPer=32;	//政令玩法收获子民百分比增加
}

message GetMeritTrackStatus {
	repeated int32 meritTrack = 1;                 //已经激活的成就印记ID列表
	optional int32 score = 2;					   //成就积分	
	repeated int32 buyList = 3;					   //已购买的成就商店物品ID
}

message BuyGodShipShopItem {
	optional int64 newDollar = 1;
	repeated Award award = 2;
	optional GetMeritTrackStatus status = 3;      // 刷新状态
}

message ActiveMeritTrack {
	optional int32 activeId          = 1;       // 激活的成就印记ID
	optional GetMeritTrackStatus status = 2;    // 刷新状态
}

message MeritTrackData {
	optional int32 attack = 1;
	optional int32 defence = 2;
	optional int32 blood = 3;
	optional int32 magic = 4;

	optional int32 attackPer = 5;
	optional int32 defencePer = 6;
	optional int32 bloodPer = 7;
	optional int32 magicPer = 8;
}

/*** Start of Arena Related ***/
message AttackArena {
	optional bool win = 1;
	optional MyArenaData arenaData = 2;
	optional BattleResult battleResult = 3;
}

message AttackArenaMul {
	repeated AttackArena attackArenaList = 1;		//
}

message GetPowerRank {
	repeated PowerRankData list = 1;		//神力排行列表
	optional int64 time = 2;				//当前时间
	optional int64 awardTime = 3;			//奖励结算时间
}

message PowerRankData {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 actorTypeId = 3;
	optional int64 score = 4;
	optional int32 level = 5;
	optional int32 faceVal = 6; // 颜值
	optional int32 godId = 7; // 神职ID
	optional int32 battlePower = 8; // 战力
	optional int32 skinId = 9; // 正在使用的皮肤
}

message GetLevelRank {
	repeated LevelRankData list = 1;		//等级排行列表
	optional int64 time = 2;				//当前时间
	optional int64 awardTime = 3;			//奖励结算时间
}

message LevelRankData {
	optional int64 id = 1;
	optional string name = 2;
	optional int64 actorTypeId = 3;
	optional int64 score = 4;
	optional int32 level = 5;
	optional int32 faceVal = 6; // 颜值
	optional int32 godId = 7; // 神职ID
	optional int32 battlePower = 8; // 战力
	optional int32 skinId = 9; // 正在使用的皮肤
}
	

//////////////////////////////////////////////////////////////////////////////////
// 下面为跨服
//////////////////////////////////////////////////////////////////////////////////
message GetRecordLineupList {
	repeated RecordLineup recordLineup = 1;
	optional int64 firstTime = 2; 
	optional RecordLineup fristRecordLineup = 3;
	
}
message RecordLineup {
	optional int64 serverId = 1;
	optional int64 id = 2;
    optional Lineup lineup = 3;
	optional string name = 4;
	
	optional int32 bestGs = 5;
	optional int32 level = 6;
	
	optional int64 passTime = 7; 
	optional int64 head = 8; 
	optional BattleResult battleResult = 9;
	optional SpeakerSummary speakerSummary    = 10;
}

message Lineup {
	repeated Npc npcList = 1;
	repeated Magic magicList = 2;
	repeated Equip equipList = 3;
	repeated Horse horseList = 4;
	optional MeritTrackData	meritTrackData = 5; 
	optional GodShipData godShipData = 6; 
	repeated ShenShouInfo shenShouList=7;
	optional int32 guoli = 8;
	repeated SwornDTO sworn=9;// 桃园结义
}

message UserSummary{
	optional int64 id = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional int32 rank = 4;
	optional int64 actorTypeIds = 5;
	optional int32 usedTitle = 6;	
}

message UserBigArena {
	optional int64 serverId = 1;
	optional int64 id = 2;
    optional Lineup lineup = 3;
	optional string name = 4;
	optional int32 rank = 5;
	optional int32 score = 6;  
	optional int32 gs = 7;  
	optional int32 bestGs = 8;
	optional int32 level = 9;
	optional int64 lastSelectTime = 10; 
}

message LocalUserBigArena{
 	optional int64 id = 1;
	optional int32 score = 2;  
	optional int32 bestScore = 3;  
	optional int32 gs = 4;
	optional int32 highestGs = 5;
	
	optional int32 level = 6;   
	optional int32 lastLevel = 7;
	
	optional int32 leftTimes           = 10;       // 今日剩余战斗次数
	//optional int32 leftBuyTimes        = 11;       // 今日剩余购买战斗次数
	
	optional int32 leftFlushTimes      = 12;       // 今日剩余刷新对手次数
	//optional int32 leftBuyFlushTimes = 13;       // 今日剩余购买刷新对手次数
	
    optional int64 lastBattleTime      = 14;       // 上次战斗时间
	repeated ScoreArenaOpponent oppos  = 15;       // 对手列表

	repeated int32 drawedIds           = 17;       // 已经领取的奖励Id列表

	repeated int32 drawedOverlandIds   = 19;       // 已经领取的争霸奖励Id列表
	repeated int32 drawedWorshipIds    = 20;       // 已经领取的全服奖励Id列表
	
	optional int32 leftOverlordTimes   = 21;       // 争霸赛今日剩余战斗次数
	//optional int32 leftOverlordBuyTimes= 22;       // 争霸赛今日剩余购买战斗次数
	
	optional int32 scoreWinTimes       = 23;       // 积分赛赢的次数
	optional int64 lastOverlordResetTime= 24;      // 上次本地个人争霸信息重置时间
	optional int64 lastDayResetTime    = 25;      // 上次本地每天重置时间
	optional int32 buyTimes            = 26;       // 今日剩余购买战斗次数
	optional int32 overlordBuyTimes= 27;       // 争霸赛今日购买战斗次数
}

message ScoreArenaOpponent{
	optional int64 id = 1;
	optional int64 serverId = 2;
	optional string name = 3;
	optional int32 level = 4;
	optional int32 rank = 5;
	repeated int64 actorTypeIds = 6;
	//optional bool real = 7;
	//optional int32 templeLvel = 8;
	//optional int32 believers = 9;
	//optional int32 todayGhost = 10;
	optional int32 gs = 11;
    optional bool isAttacked = 12;
	optional int32 awardId = 14;    // 奖励等级id ,值为1,2,3
	optional int32 awardHonor1 = 15;
	optional int32 awardScore = 16;
	optional int32 usedTitle = 17;
	
	// 颜值相关
	optional int32 godId = 18; // 圣职ID
	optional int32 skinId = 19; // 皮肤
	optional int32 faceVal = 20; // 颜值
	optional int64 actorTypeId = 21; // 主角卡牌
}

message ActorTypeIdList{
	repeated int64 actorTypeIds = 1;
	optional int32 usedTitle = 2;
}

message BigArenaOpenPanel {
    optional int32 status                             = 1;   // 0 平常时段，1 积分赛进行时段，2积分赛结束时段，3，争霸赛进行时段。
    optional ScoreArenaEnter scoreArenaEnter           = 2;
	optional OverlordArenaEnter overlordArenaEnter     = 3;
}

message ScoreArenaEnter {
    optional int32 score              = 1;
    optional int32 rank              = 2;      // 排名
    optional int32 gs                = 3;      // 阵容gs
	optional int32 highestGs         = 4;      // 阵容gs
	
	optional int32 leftTimes          = 5;       // 今日剩余战斗次数
	//optional int32 leftBuyTimes       = 6;       // 今日剩余购买战斗次数
	
	optional int32 leftFlushTimes     = 7;       // 今日剩余刷新对手次数

    repeated ScoreArenaOpponent oppos  = 9;     // 对手列表
	
	optional int64 leftTime           = 10;     // 积分赛剩余时间
	
	optional int32 scoreWinTimes      = 11;
	optional int32 scoreStatus        = 12;     // 0 非挑战时间，1 可挑战时间，2，结束时间
	
	optional int32 buyTimes           = 13;     // 今购买战斗次数
}

message OverlordArenaEnter {
    repeated ScoreArenaOpponent oppos    = 1;       // 对手列表
	optional int64 leftTime              = 4;       // 争霸赛剩余时间
	
	//repeated int32 drawedOverlandIds     = 5;       // 已经领取的争霸奖励Id列表
	repeated int32 drawedWorshipIds      = 6;       // 已经领取的全服奖励Id列表
	
	optional int32 leftOverlordTimes     = 7;       // 争霸赛今日剩余战斗次数
	//optional int32 leftOverlordBuyTimes  = 8;       // 争霸赛今日剩余购买战斗次数
	optional int32 rank                  = 9;		// 
	optional int32 overlordStatus        = 10;      // 0 非挑战时间，1 可挑战时间，2，结束或者其他时间
	optional int32 overlordBuyTimes  = 11;       // 争霸赛今日购买战斗次数
}	

message ScoreArenaFlush {
    optional bool isSuccess            = 1;		  // 是否成功
	repeated ScoreArenaOpponent oppos  = 2;       // 对手列表
}		

message ScoreArenaAttack {
    optional ScoreArenaEnter scoreArenaEnter  = 1;
}	

message RanklistItem {
	optional int64 serverId    = 1;
	optional int64 id          = 2;
	optional string name       = 3;
	optional int32 level       = 4;
	optional int32 score       = 5;
	optional int32 rank        = 6;
	optional int32 gs          = 7;
	repeated int64 actorTypeIds= 8;	
	optional int32 usedTitle = 9;
	
		// 颜值相关
	optional int32 godId = 10; // 圣职ID
	optional int32 skinId = 11; // 皮肤
	optional int32 faceVal = 12; // 颜值
	optional int64 actorTypeId = 13; // 主角卡牌
}

message ScoreArenaGetRankList {
    repeated RanklistItem   ranklistItem  = 1;
    optional int32          selfScore     = 2;
	optional int32          rankType      = 3;   // 0 表示积分 1 表示争霸
}		

message ScoreArenaGetAwardList {
      repeated int32 drawedIds    = 1;  // 已经领取的奖励Id列表
}		

message ScoreArenaDrawAward {
      optional ScoreArenaGetAwardList scoreArenaGetAwardList       = 1;
}		


message ScoreArenaShopBuy {
	optional int32  honor2Cost  = 1;  
	optional int32  newHonor2   = 2;
	optional int32  honor1Cost = 3;  // 消耗的荣誉勋章
	optional int32  newHonor1  = 4;	
}

//message ScoreArenaBuyFlushTimes {
//	optional int32 leftFlushTimes     = 1;       // 今日剩余刷新对手次数
//	optional int32 leftBuyFlushTimes  = 2;       // 今日剩余购买刷新对手次数
//	optional int32 costDollar         = 3;		 // 消耗的元宝
//	optional int32 newDollar          = 4;		 // 
//}

message ScoreArenaBuyAttackTimes {
	optional int32 leftTimes          = 1;       // 今日剩余战斗次数
	//optional int32 leftBuyTimes       = 2;       // 今日剩余购买战斗次数
	optional int32 costDollar         = 3;		 // 消耗的元宝
	optional int64 newDollar          = 4;		 // 
	optional int32 buyTimes           = 5;       // 今日剩余购买战斗次数
}

message OverlordArenaOpponent{
	optional int64 id = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional int32 rank = 4;
	optional int32 gs = 5;
}


message OverlordArenaAttack {
	optional OverlordArenaEnter overlordArenaEnter     = 1;
}	

//message OverlordGetDrawedAwardIds {
//   repeated int32 drawedOverlandIds    = 1;  // 已经领取的争霸奖励Id列表
//}

//message OverlordGetWorshipedIds {
//   repeated int32 drawedWorshipIds    = 1;  // 已经领取的全服奖励Id列表
//}	

message OverlordWorship {  //全服礼包
   repeated int32 drawedWorshipIds    = 1;  // 已经领取的全服奖励Id列表
}

//message OverlordDrawAward { // 排名奖励
//   optional OverlordGetDrawedAwardIds overlordGetDrawedAwardIds = 1;
//}

message OverlordBuyAttackTimes {
	optional int32 leftOverlordTimes          = 1;       // 今日剩余战斗次数
	//optional int32 leftOverlordBuyTimes       = 2;       // 今日剩余购买战斗次数 
	optional int32 costDollar                 = 3;		 // 消耗的元宝
	optional int64 newDollar                  = 4;		 // 
	optional int32 overlordBuyTimes           = 5;       // 今日剩余购买战斗次数
}

message GetOpenedActivitys {
	repeated OpenedActivity openedActivitys    = 1;
	optional int64                createTime   = 2; // 角色创建时间,用于开服活动
	optional int64                currentTime  = 3; // 当前时间
}

message OpenedActivity {
    optional int32 id                  = 1; // 活动ID
    optional int64 taskTarget          = 2; // 任务累计
    optional int32 drawTimes           = 3; // 领取次数
}

message RequireSevenRewards {
	optional GetOpenedActivitys getOpenedActivitys            = 1; // 
	optional int32 costDollar         = 2;		 // 消耗的元宝
	optional int64 newDollar          = 3;		 // 
	repeated Award awards             = 4;
}

message GetAngelList {
    optional int64 startTime                   = 1; //开始时间
	optional int64 endTime                     = 2; //结束时间
	optional int32 chargeSum                   = 3; // 充值数
	repeated OpenedActivity angelList          = 4;
}

message DrawAngelAward {
    optional GetAngelList getAngelList   = 1; // 
	optional int32 costDollar            = 2; // 消耗的元宝
	optional int64 newDollar             = 3; //
	repeated Award awardList = 4;
}


message EncounterList {
	repeated int32 ids = 1;						//奇遇队列
	optional EncounterInfo curEncounter = 2;	//当前奇遇
}

message EncounterInfo {
    optional int32 id = 1;
	optional int64 time = 2;				//当前时间
	optional int64 activeTime = 3;			//生效时间
	optional int32 count = 4;				//奇遇队列数量
	optional int64 power = 5;				//比较战力(废弃)
	optional int32 guoli = 6;				//比较国力
}

message EncounterAward {
    optional int32 id = 1;
    repeated Award awardList = 2;
	optional EncounterInfo curEncounter = 3;	//当前奇遇
}

message OnlineInfo {
	optional int32 id = 1;
	optional int64 time = 2;				//当前时间
	optional int64 initTime = 3;			//初始时间
	repeated bool awardStatus = 4;			//领奖状态
	optional bool bfirst = 5;			    //是否第一次
}

message OnlineAward {
    optional int32 id = 1;
    repeated Award awardList = 2;
	optional OnlineInfo curOnlineInfo = 3;	//当前在线奖励
}



// 转盘信息
message GetTurntable {
}

// 转盘抽奖
message DrawTurntable {
	optional int32 ids          = 1;    // 转到的id 
	optional GetTurntable getTurntable = 4;
	repeated Award awardList = 5;
}

message DragonInfo {
    optional int32 status  = 1;
    repeated int32 wishIds = 2;
	repeated int32 usedIds = 3;
}

message GetDragon {
    optional int32 status = 1;
    repeated int32 wishIds = 2;
	optional int32 times = 3;
	repeated int32 usedIds = 4;
}

message CallDragon {
    optional GetDragon getDragon = 1;
}

message DragonWish {
    optional GetDragon getDragon = 1;
}

//
message GetFriut {

	// repeated int32 guestIds = 2; 
	optional int64 totalAward = 3;
	optional int64 totalBaoku = 4;
	optional int32 fruitTimes = 7;
}

message GetBaoku {
	optional int64 totalBaoku = 1;
}

message SelectFriut {
	optional GetFriut getFriut = 1;

}

// 抽奖
message DrawFriut {
	optional GetFriut getFriut           = 1;
    repeated Award awardList             = 2;
	optional int32  currentId            = 3;
	optional int32  luckCurrentId        = 4;
	repeated int32  secondLuckCurrentId  = 5;
	optional int32  isLuck               = 6;
}


// 花园信息
message GetGarden {
	optional bool bHaveMax = 1;			         // 是否有宝库
	
	optional int32 minCurrent = 2;			     // 当前花园index 1到20
	optional int32 maxCurrent = 3;			     // 当前宝库index 1到20，需要+20
	
	repeated int32 minDrawedIds = 4;             // 1到20 
	repeated int32 maxDrawedIds = 5;             // 1到20 当前轮宝库抽到过的index，需要+20，才得到对应的表格id
	
	repeated int32 minAwardIndexs = 6;
	repeated int32 maxAwardIndexs = 7;           // 当前轮宝库对应的奖励的随机Index
	
	optional int32 minMul = 8;			         // 小花园下次奖励倍数
	optional int32 maxMul = 9;			         // 大花园下次奖励倍数

	optional int32 remainingSeconds = 12;
	optional int32 consumedMin = 13;			// 购买大花园消耗的小花园的步数 


	optional int32 minCount = 14;			     // 小花园抽的总步数
	
	optional int32 nextMaxCount = 16;			 // 前端分母 大花园下次可以抽的次数
	optional int32 maxCurrentEx = 17;			 // 当前宝库1-36 前端可以不用
}

// 花园抽奖
message DrawGarden {
	optional GetGarden getGarden = 1;
	optional int32 step          = 2;    // 转到的id 
	repeated Award awardList     = 3;
	optional int32 costDollar         = 4;		 // 消耗的元宝
	optional int64 newDollar          = 5;		 // 
}

message BuyBigGarden {
	optional GetGarden getGarden = 1;
}


// 气运信息
message GetLuck {
	repeated int32 drawedIds           = 1;             //
	optional int32 currentId           = 2;
	optional int32 todayTimes          = 3;
	optional int32 luckId              = 4;  //今天的第一次上上签
	optional int32 chargeTimes         = 5;  //今天充值
	optional bool bReceived            = 6;  //是否领取
	optional int32 days                = 7;
	optional int32 currentAwardIndex   = 8;
	optional int32 feeTimes            = 9;  //第一次付费
	optional int32 paycount 			= 10;				// 气运充值次数
	optional int64 remainingSeconds     =11;//飞升倒计时
}

// 气运抽奖
message DrawLuck {
	optional int32 id          = 1;    // 转到的id 
	optional GetLuck getLuck = 2;
	repeated Award awardList = 3;
	optional int32 costDollar         = 4;		 // 消耗的元宝
	optional int32 newDollar          = 5;		 // 
}

// 气运抽奖
message GetLuckAward {
	optional GetLuck getLuck = 1;
	repeated Award awardList = 2;
}

message LongData {
	repeated int64 datas = 1;
}

message ResetAttackLevelTimes {
	optional int32 costDollar         = 1;		 // 消耗的元宝
	optional int64 newDollar          = 2;		 // 
	optional LevelRecord levelRecord  = 3;
}

// 英雄试炼信息
message GetGodPractice {
	optional int64 bossId              = 1;
	optional int32 bossHp              = 2;
	optional uint64 lastResetTime      = 3; //上次重置时间
	optional int32 remainingSeconds    = 4; //倒计时时间
    optional int32 rseed               = 5;
	optional int32 status              = 6;
	optional int32 clickTimes          = 7;
	optional bool passAwardDrawed = 8; // 通关奖励是否领取
}

//
message ClickGodPractice {
	optional GetGodPractice getGodPractice = 1;
	repeated Award awardList               = 2;
	repeated Award overAwardList           = 3;
}

message ResetGodPractice {
	optional int32 costDollar               = 1;		 // 消耗的元宝
	optional int32 newDollar                = 2;		 // 
	optional GetGodPractice getGodPractice  = 3;
}

message BuyLeftClickTimes {
	optional int32 clickBought = 1;
	optional int32 newClick = 2;
	optional int32 dollarCost = 3;
	optional int32 newDollar = 4;
	optional int32 boughtTime = 5;
}


message AllNpcConsecrate {
	repeated NpcConsecrate npcConsecrateList = 1;
	optional int64 currentTypeId             = 2;	
	optional int64 consecrate                = 3;
}

message NpcConsecrate 
{
	optional int64 typeId = 1;  // 弟子类型Id
	optional int32 consecrate  = 2;
}

message SelectConsecrate {
	optional AllNpcConsecrate allNpcConsecrate  = 1;
}

message Decompose {
	optional int32 consecrate                   = 1;
	optional AllNpcConsecrate allNpcConsecrate  = 2;
}

message Consecrate {
	optional AllNpcConsecrate allNpcConsecrate  = 2;
}


message Relive {
	repeated Award awardList                    = 1;
	optional AllNpcConsecrate allNpcConsecrate  = 2;
}

message GoodsList {
    repeated Goods goods = 1;
}

message Goods {
    optional uint32       id            = 1;   // 商店货物ID
    optional uint32       buyTimes      = 2;   // 已经购买几次
}

message UserShop {
    optional uint64  lastRecoverTime          = 1; // 上次恢复次数时间
	optional uint32  leftTimes                = 2; // 剩下次数
    optional uint32  todayTimes               = 3; // 今日刷新的次数
    repeated Goods   currentGoods             = 4; // 刷出来的商店物件
	optional int32 remainingSeconds           = 5;
	optional uint32  todayBuyTimes            = 6; // 今日购买次数
}

message BuyRuinShopItem {
	optional int64 newDollar = 1;
	repeated Award award = 2;
	optional UserShop userShop = 3;      // 刷新状态
}

message FlushRuinShop {
	optional int32 newDollar = 1;
	optional UserShop userShop = 3;      // 刷新状态
}

////////////////////////////////////////////////////////////////////////////////////////////////////
//                                   三界争霸相关协议
////////////////////////////////////////////////////////////////////////////////////////////////////

//----------------------------------------势力战开始--------------------------------------------

//获取天界状态返回
message GetSanjieStatus {
	optional bool isOpen = 1;		//天界是否开启 注意为false时处理一下，不进入天界
	optional int32 recommonCountry = 2;	//推荐势力  1:西方 2:希腊 3:东方 -1:无
	optional int32 countryId = 3;		//玩家加入的势力ID 1:西方 2:希腊 3:东方 -1:无
}
//加入势力成功返回
message JoinCountryResult {

}
//获取势力城池数据返回
message GetSanjieInfo {
	optional int32 seasonId = 1;		//赛季ID
	optional int32 battleGroupId = 2;	//战场组ID
	optional int32 startTime = 3;		//赛季开始时间(1970至今秒数)
	optional int32 endTime = 4;		//赛季结束时间(1970至今秒数)
	optional Country Country_XF = 5;	//西方势力
	optional Country Country_XL = 6;	//希腊势力
	optional Country Country_DF = 7;	//西方势力
	repeated City cityList = 8;		//城池列表
	optional int32 nextZhengfuRecTime = 9;	//征服值刷新剩余时间 单位:秒
	optional CityPlayer shenWang = 10;	//最强神王 (为null时，表示没有)
	optional int64 mobaiLeftMs = 11;	//倒计时-膜拜皇帝
	optional int64 weekTaskLeftMs = 12;	//倒计时-本周任务
	optional int64 dayTaskLeftMs = 13;	//倒计时-每日任务
	optional int64 guanzhiLeftMs = 14;	//倒计时-官职重置
	optional int64 shibingLeftMs = 15;	//倒计时-士兵解甲归田
	optional int64 weiwangLeftMs = 16;	//倒计时-威望榜结算
    optional int32 mobaiCount = 17;		//神王受膜拜次数
	optional int64 kingTaskLeftMs = 18;	//倒计时-国王任务


}
message Country {
	optional int32 zhengfu = 1;	//征服值
	optional int32 buildingLv = 2;	//建设等级
	optional int32 buildingExp = 3;	//建设经验值
	optional int32 buildingProgress = 4;	//今日建设进度
	optional int32 buildingPeopelNum = 5;	//今日建设人数

	optional KingTask kingTask = 6;		//国王任务 null:表示今日未发布国王任务
	message KingTask {
		optional int32 attackCity = 1;		//今日进攻的城池ID
		optional bool tomorrowSame = 2;		//true:勾选明日继续进攻 false:没有勾选
		optional int32 rewardId = 3;		//国王奖励ID (1和2)
	}
	//	国家技能效果:
	//	类型1 = 增加探索次数
	//	类型2 = 增加国家成员攻击
	//	类型3 = 增加国家成员防御
	//	类型4 = 增加国家成员兵力
	//	类型5 = 增加国家成员威力
	//	类型6 = 攻击获得威望值提升
	//	类型7 = 讨伐令上限增加
	//	类型8 = 士气值上限提升
	//	类型9 = 移动次数
	//	类型10= 攻击洛阳获得属性提升
	repeated IdNumItem skillEffects = 7;	//国家技能效果 id:加成类型 num:加成数值
    optional int32 zfThisWeek = 8;		//本周已积累的征服值
    optional int32 zfThisSeason = 9;	//本赛季已积累的征服值
}
message City {
	optional int32 cityId = 1;	//城池ID
	optional int32 countryId = 2;	//所属势力ID 1:西方 2:希腊 3:东方 -1:无
	optional int32 playerNum = 3;	//玩家人数
	optional bool celebrate = 4;	//是否在举办庆典
}
//获取玩家（自己）数据返回
message GetSanjiePlayerInfo {
	optional int32 shiqi = 1;			//士气值
	optional int32 tili = 2;			//体力
	optional int32 countryId = 4;			//势力ID 1:西方 2:希腊 3:东方
	optional int32 cityId = 5;			//所在城池ID
	
	optional int32 guanzhiId = 9;			//官职ID  -1:无官职
	optional int32 leftAssignCount = 10;	//今日可赏赐次数
	optional int32 leftForbidTalkCount = 11;//今日可禁言次数
	optional int32 jueweiId = 12;			//爵位ID 玩家初始爵位ID为1
	optional int32 weiwangJifen = 13;		//每周的威望积分
	optional int32 weiwangZhi = 14;			//每日的威望值
	optional int32 leaveCountryLeftTime = 15;	//移民倒计时 单位:秒   -1:表示冷却时间已过
	optional int32 maxShiqi = 16;			//士气最大值
	repeated int32 todayBonusPickedIds = 17;		//今日已领取的每日贡献奖励id集合
	
	optional int32  tianbingNum=18;			// 天兵数量
	optional int64 roleId = 20;				//玩家ID
	optional int32	moveCityCD = 21;		//迁城CD剩余时间 单位:秒    -1:表示冷却时间已过
	optional int32 todayTiliBuyCount = 22;	//今日体力（讨伐令）购买次数
	optional bool  isGetResource= 23;		// 是否有信徒祈祷产生奖励
	repeated int64 assignedRoleIds = 24;	//已分配的玩家ID集合
	optional int32 weiwang = 25;			//爵位界面的威望值
	optional int32 todayMoveCityCount = 26;		//今日移动次数
	optional int32 freeDamageCount = 27;		//免费破坏次数
	optional int32 buyMoveCount = 28;		//今日购买移动个数
	optional bool  isMobai = 29;			//玩家今日是否膜拜
	repeated IdNumItem weekTask = 30;		//每周任务进度及领取情况  id:任务ID  num:进度值(-1:已领取)
	optional int32 maxMoveCount = 31;		//移动次数上限
	optional int32 maxTili = 32;			//体力上限
	optional int32 shieldNum = 33;			//护盾数量
	optional int32 turnTableNum = 34;		//转盘次数
	optional int32 todayBuyShieldNum = 35;		//今日已购买盾牌个数

	optional int32 buildingExp = 36;		//我贡献的国家经验
	repeated int32 constructIds = 37;		//今日已建设的ID集合
	repeated int32 pickedConstructProgressIds = 38;	//今日已领取的建设进度ID集合
	optional int32 todayKingTaskStatus = 39;	//国王任务状态 0:未完成 1:已完成未领取 2:已领取
	optional bool wishedThisWeek =40;		//本周有没许愿
	optional int32 todayLeftHelpWishCount = 41;	//今日剩余的协助次数
	optional int64 wishLeftMs = 42;			//倒计时-下次许愿刷新日期倒计时
	repeated int64 todayHelpWishIds = 43;		//今日协助过的roleId集合
	
	optional int32 maxTurnTableNum = 44;		//转盘次数上限
	optional bool canDiaobing = 45;			//能否使用调兵令 true:能 false:不能

	repeated IdNumItem thieves = 46;		//流寇集合,固定3条数据,分别对应位置点1,2,3 (id:流寇ID num:剩余挑战次数,<0时该流寇消失)
	optional bool canWarcry = 47;			//能否使用战吼 true:能 false:不能
	optional int32 seasonIndex = 48;        //当前是玩家参与的第几赛季（从1开始）

}
//获取城池中的玩家列表返回
message GetCityPlayers {
	optional int32 cityId = 1;		//城池ID
	optional int32 pageIndex = 2;		//第几页 从0开始
	repeated CityPlayer players = 3;	//玩家列表
	optional int32 total = 4;			//玩家总数
}
message CityPlayer {
	optional int64 roleId = 1;		//跨服角色ID
	optional string name = 2;		//昵称
	optional int32 guanzhiId = 3;	//官职ID
	optional int32 lv = 4;			//等级
	optional string headimgurl = 5;	//头像
	optional int32 shiqi = 6;		//士气值
	optional int32 color = 7;		//0:白名 1:黄名 2:红名
	optional int32 power = 8;		//神力
	optional int32 countryId = 9;	//势力
	optional int32 attackProtectTime = 10;	//攻击保护时间 -1:表示无
	optional int32 maxShiqi = 11;	//最大士气值
	optional int32 weiwangJifen = 12;	//威望积分值
	optional int32 tianbingNum = 13;	//天兵数量
	optional int32 titleId = 14;		//称号ID
	optional int32 godId = 15;		//圣职ID
	optional int32 skinId = 16; // 皮肤
	optional int32 faceVal = 17; // 颜值
	optional int64 actorTypeId = 18; // 主角卡牌
	optional int32 guoli = 19;	//国力
	optional float sysBuff = 20;    //评议会百分比加成 如0.01
}
//迁城成功返回
message MoveCityResult {
	
}
//攻击成功返回
message AttackCityResult {
	//optional int32 weiwang = 1;		//获得的威望积分
}
//三界争霸-破坏结果
message DamageCityResult {
	optional int64 roleId = 1;	//玩家ID
	optional int32 damageShiqi = 2;	//损失的士气值
}
//三界争霸-探索结果
message SearchResult {
	optional int32 turnTableId = 1;		//转盘结果id
	repeated CityPlayer players = 2;	//突袭的3个玩家(非突袭则没有值)
}
//花钻购买探索奖励 成功返回
message PayForSearchResult {

}
//购买讨伐令 成功返回
message BuyTiliResult {

}
//购买移动次数 成功返回
message BuyMoveCountResult {

}
//突袭 成功返回
message TuXiResult {
	optional int32 result = 1;	//0:没有护盾,石块飞溅 1:被护盾挡住
	optional int32 weiwang = 2;	//获得的威望值
}
//购买护盾 成功返回
message BuyShieldResult {

}

//----------------------------------------官职开始--------------------------------------------

//获取官职数据返回
message GetGuanzhiData {
	optional int32 huanJieTimeLeft = 1;		//换届倒计时 单位：秒
	repeated GuanZhi XF = 2;				//西方势力 - 官职 
	repeated GuanZhi XL = 3;				//希腊势力 - 官职
	repeated GuanZhi DF = 4;				//东方势力 - 官职
}
message GuanZhi {
	optional int32 id = 1;			//官职ID 配置表中的id
	optional int64 roleId = 2;		//玩家ID
	optional string name = 3;		//玩家昵称
	optional string headimgurl =4;	//头像
	optional int64 actorTypeId = 5;
	optional int32 godId = 6; // 神职ID
	optional int32 skinId = 7; // 正在使用的皮肤
}
//移民成功返回
message LeaveCountryResult {
	
}
//分配奖励成功返回
message AssignGuanzhiRewardResult {
	
}
//禁言成功返回
message ForbidTalkingResult {
	optional int64 roleId = 1;	//被封禁的玩家ID
}
//修改公告成功返回
message UpdateCountryNoticeResult {
	optional int32 countryId = 1;	//势力ID
	optional int32 type = 2;		//0:对内公告 1:对外公告
	optional string newCountent = 3;	//新公告内容
}

//----------------------------------------信徒祈祷开始--------------------------------------------
// 进入信徒祈祷界面
message BelieverPrayResourceInfo{
    repeated IdNumItem believerDistribut=1;// 已经分配信徒数据[[工种Id,数量]......]
    optional bool  isGetResource= 2; // 是否有奖励物品 可以领取
	optional int64 leftTime = 3;	//剩余多少时间可以产出奖励,如果没有产出 则为空
}
message  IdNumItem{
  optional int32 id=1; 		
  optional int32 num=2; 		
} 
// 分配信徒操作成功
message AllocatBelieverPrayOperResult{
}

// 领取信徒祈祷获得的奖励
message PickBelieverPrayResourceAwardResult{
	optional  string rewardStr=1;//奖励列表格式  1:1002:30|1:2001:34....  (类型:物品Id:数量 重复多个使用 | 分隔符)
	optional  int32  productTime=2;// 领取本次奖励一共多长时间
}
//----------------------------------------天兵开始--------------------------------------------
 //招募天兵成功返回
message TianBingRecruitResult {
}
//----------------------------------------国力,征服,威望排行榜开始--------------------------------------------

// 威望排行榜
message WeiwangBang{
	repeated CityPlayer dfb=1;//东方 玩家威望排行榜
	repeated CityPlayer xfb=2;
	repeated CityPlayer xlb=3;
	optional int32 leftTime=4;// 距离结算时间还有多少 秒
}
// 征服榜
message ZhengfuBang{
	repeated int32  dfb=1; // 东方势力: [征服值,城池数量]
	repeated int32  xfb=2;
	repeated int32  xlb=3;

}
// 征服榜领取记录
message ZfBRewardRecord{
	repeated int32 todayAward=1;   //  2个元素 [领取状态(0: 不可领取,1可以领取未领取 2 已经领取), 征服值]
	repeated int32 yesterdayAward=2;
}
// 领取征服榜奖励
message PickZhengfuBangRewardResult{
}

// 国力榜
message GuoliBang{
	repeated IdNumItem  zhpf=1; // [id=势力Id,num=势力综合评分,...,...] ; 势力高低固定 从高到底来排序 客户端直接读取即可
	repeated CityPlayer  zs=2; // [西方方势力主神,希腊方势力主神,东方方方势力主神] 如果没有主神 id=0
	repeated ShiLiNotice shiLiNotice=3;// 对内, 外公告

}
// 势力公告 <对内和对外>
message ShiLiNotice{
	optional int32 countryId = 1;	//势力ID
	optional int32 type = 2;		//0:对内公告 1:对外公告
	optional string content = 3;	//公告内容
}

//--------------------------------每日贡献------------------------------
//获取每日贡献配置 返回
message GetBonusConfig {
	repeated Bonus list = 1;	//配置数据列表
	message Bonus {
		optional int32 bonusId = 1;
		optional int32 condition = 2;	//贡献领取条件
		optional int32 rewardId = 3;	//奖励id
		optional string rewardStr = 4;	//奖励字符串
	}
}
//领取每日贡献奖励 成功返回
message PickBonusRewardResult {
	
}
//----------------------------------外交留言板----------------------------
//获取势力留言板数据返回
message GetMessageBoard {
	optional int32 countryId = 1;	//势力ID 1:西方 2:希腊 3:东方
	repeated BoardMessage list = 2;	//留言板留言的集合 按时间倒序排列
	
	message BoardMessage {
		optional int32 guanzhiId = 1;	//官职ID 无官职:-1
		optional string name = 2;		//玩家昵称
		optional int32 vipLv = 3;		//VIP等级
		optional string headimgurl = 4;	//头像
		optional int64 roleId = 5;		//玩家ID
		optional int32 sec = 6;			//几秒前
		optional string msgContent = 7;	//留言内容
		optional int32 countryId = 8;	//玩家势力ID
	}
}
//留言成功返回
message LeaveMessageResult {
	
}
//获取攻防记录返回
message GetAdRecord {
	repeated AdRecord list = 1;		//攻防记录列表 按时间倒序排列
}
message AdRecord {
	optional int32 type = 1;				// 1:攻击 2:防守 3:破坏 4:被破坏 相对自己
	optional bool isWin = 2;				//是否胜利  相对自己而言
	optional int64 otherRoleId = 3;			//对方玩家ID
	optional string otherRoleName = 4;		//对方角色名
	optional int32 otherRoleCountryId = 5;	//对方势力ID
	optional int32 damageShiqi = 6;			//损失士气 防守失败则为自己的，攻击则为对方的
	optional int32 weiwang = 7;				//攻击获得的威望
	optional int32 sec = 8;					//几秒前
	optional int32 star = 9;				//星级
}
//有新攻防记录 主动通知
message NewAdRecord {
	optional AdRecord newRecord = 1;	//新攻防记录
}
//------------------------------------聊天---------------------------------
//有新聊天信息 主动通知
message SanjieSpeak {
	optional int32 type = 1;			//1:世界聊天 2:势力聊天  3:系统信息
	optional int32 countryId = 2;		//如果为世界聊天,此值为发言者的势力ID
	optional string content = 3;	//内容
	optional int64 roleId = 4;		//玩家ID
	optional int32 guanzhiId = 5;	//官职ID 无官职:-1
	optional string name = 6;		//玩家昵称
	optional int32 vipLv = 7;		//VIP等级
	optional string headimgurl = 8;	//头像
	optional int32 time = 9;		//时间 (1970至今的秒数)
	optional int32 skinId = 10;	//时装ID
	optional int64 actorTypeId = 11; // 主角卡牌
	optional int32 godId = 12;	//官职ID
}
//获取最近的10条聊天信息和系统信息 返回
message GetNewestTenSpeak {
	repeated SanjieSpeak chatList = 1;		//10条世界聊天信息
	repeated SanjieSpeak systemList = 2;	//10条系统信息
	repeated SanjieSpeak shiliList = 3;		//10条势力聊天信息
}
//发布聊天成功返回
message SanjieSpeakResult {
	
}
//神阶升级奖励提示框
message LevelUpJuewei {
	optional int32 newId = 1;	//新神阶ID
	repeated Award awards = 2;	//奖励数组
}
//------------------------------------2017.12.28三界新增---------------------------------
//膜拜最强神王返回
message MobaiResult {

}
//领取每周任务返回
message PickWeekRewardResult {

}
//获得城市庆典奖励 (主动通知)
message GainCityCelebrationReward {
	optional string rewardStr = 1;	//奖励字符串
}

//------------------------------------神职系统 2018-01-12 by lixiang.you ---------------------------------
// 神职列表[接口：api/player]

message GodTitleDTO {
	optional int64 npcId = 1;
	optional int32 titleId = 2;
}

message GodTitles {
	optional int32 godId = 1; // 当前神职
	repeated GodTitleDTO titles = 2; // 已装备的封号
}

message GodTitleWearDTO {
	optional int32 titleId = 1; // 称号，-1为取下
	optional Npc npc = 2; // 刷新的NPC
}
// 装备称号响应
message GodTitleWear {
	repeated GodTitleWearDTO wearInfo = 1; // 称号信息 
}

message GodTitleQuickWear {
	repeated GodTitleWearDTO wearInfo = 1; // 称号信息 
}

// 激活神职
message GodTitleDraw {
	optional int32 godId = 1; // 神职ID
	repeated Award awardList = 2; // 奖励列表
}


//问答
message AllAnswerQuestion {
	repeated AnswerQuestion answerQuestionList = 1;
	optional int32 awardMul                    = 2;	   //1,2,3倍领取
	optional int32 isAwarded                   = 3;
	optional int32 curIndex                    = 4;    //当前回答第几个问题
	optional uint64  lastResetTime             = 5;
}

message AnswerQuestion 
{
	optional int32 questionId           = 1;       // 问题编号
	optional int32 answerId             = 2;
	optional int32 haveBuf              = 3;       // 有双倍
	optional int32 rightAnswerId        = 4;
	optional int32 expAward             = 5;
	optional int32 evolveAward          = 6;         //进化丹数量
}

// 回答问题
message Answer {
	optional AllAnswerQuestion allAnswerQuestion  = 1;
}
// 获得问答奖励
message TakeAnswerAward {
	repeated Award awards = 1;
	optional AllAnswerQuestion allAnswerQuestion  = 2;
}


//------------------------------------资源找回系统 2018-02-12 by lixiang.you ---------------------------------

// 系统资源找回
enum ResBackType {
	TypeQLDQ = 1; // 千里单骑-征服地狱
	TypeMZRQ = 2; // 蛮族入侵-讨伐恶魔
	TypeMJXW = 3; // 摸金校尉-遗迹探险
	TypeSXQT = 4; // 审讯囚徒-诸神黄昏
	TypeYGTX = 5; // 夜观天象-命运占卜
	TypeYWC = 6; // 演武场-竞技场
	TypeZLCL = 7; // 政令处理-拜一拜
	TypeGZTS = 8; // 国战探索-三界的探索
	TypeGZGJ = 9; // 国战攻击-三界的攻击
	TypeGJJS = 10; // 挂机加速-挂机加速
	TypeWYJB = 11; // 五月祭拜-膜拜上帝
	TypeQBYD_CAOCHUANJIEJIAN = 12; // 巧变应敌草船借箭
	TypeQBYD_YEXIWUCHAO = 13; // 巧变应敌夜袭乌巢
	TypeQBYD_CHANGBANPO = 14; // 巧变应敌长坂坡
}
// 资源找回信息
message ResBackInfo {
	message BackInfoDTO {
		optional ResBackType type = 1; // 类型
		optional int32 canBackTimes = 2; // 能找回次数
		optional bool isBack = 3; // 已经找回
		optional bytes data = 4; // 功能信息
	}
	repeated BackInfoDTO infos = 1; // 可找回的数量
}
// 资源找回
message ResBack {
	optional ResBackType type = 1; // 类型
	repeated Award awardList = 2; // 配表奖励
	optional bytes data = 3; // 功能信息
	optional int64 newDollar = 4; // 消耗元宝
}

// type == TypeMZRQ
message RbMzrqDTO {
	optional int32 sysTimes = 1; // 找回系统次数
	optional int32 times = 2; // 找回自己次数
	optional int32 exp = 3; // 找回经验
	optional int32 coin = 4; // 找回金币
}

// type == TypeMJXW
message RbMjxwDTO {
	optional int32 times = 1; // 找回次数
	optional int32 oldCoin = 2; // 古币
}

// type == TypeYWC
message RbYwcDTO {
	optional int32 times = 1; // 找回次数
	optional int32 exp = 2; // 找回经验
	optional int32 arenaScore = 3; // 获得积分
}

// type == TypeGJJS
message RbGjjsDTO {
	optional int32 times = 1; // 找回次数
	optional int32 exp = 2; // 找回经验
	optional int32 coin = 3; // 获得金币
	optional int32 fans = 4; // 信徒
}

// type == TypeWYJB
message RbWyjbDTO {
 	repeated Award awards = 1;
	optional int32 exp = 2;
}

// type == TypeYGTX 夜观天象（拉霸）
message RbYgtxDTO {
 	repeated Award awards = 1; // 奖励
	optional int32 times = 2; // 找回次数
}

// type == TypeZLCL 政令处理
message RbZlclDTO {
 	optional int32 merit = 1; // 功德
 	optional int32 fans = 2; // 信徒
	optional int32 times = 3; // 找回次数
}

// type == TypeGZGJ 国战攻击
message RbGzgjDTO {
 	optional int32 prestige = 1; // 声望
	optional int32 times = 2; // 找回次数
}

// type == TypeSXQT 审讯囚徒
message RbSxqtDTO {
	optional int32 times = 1; // 找回次数
	optional int32 exp = 2; // 找回经验
}

// type == TypeQBYD 巧变应敌
message RbQbydDTO {
 	repeated Award awards = 1; // 奖励
	optional int32 times = 2; // 找回次数
	optional int32 stageId = 3; // 所到关卡
}
//------------------------------------ 时装系统 2018-02-13 by lixiang.you ---------------------------------
message SkinBuy {
	optional int32 skinId = 1; // 新买的skin
}

message SkinUse {
	optional int32 skinId = 1; // 使用的skin
}

// 排行榜
message SkinRank {
	message SkinRankDTO {
		optional int64 id = 1;
		optional string name = 2;
		optional int32 rank = 3;
		optional int32 faceVal = 4; // 颜值
		optional int32 skinId = 5; // 正在使用的皮肤
		optional int32 godId = 6; // 神职ID
		optional int64 updateTime = 7; // 服务器用
		optional int64 actorTypeId = 8; // 主角头像
		optional int32 level = 9; // 等级
		optional int32 battlePower = 10; // 战力
		optional int64 head = 11; // 第一武将的头像
	}
	repeated SkinRankDTO datas = 1; // 数据
	optional int32 myVal = 2; // 我的数值
	optional int32 myRank = 3; // 我的排名
}
//////////////////////////////////

//////////////////////////////////////////////
message InviteActivity {
    optional int32 id                  = 1; // 活动ID
    //optional int32 taskTarget          = 2; // 任务累计
    optional int32 drawTimes           = 3; // 领取次数
}

message InvitedUser {
    optional string uid = 1; // 这个ID是由4位svrId和7位roleId组成，不满足长度的在前面补0
    optional int32 godId = 2; // 爵位
    optional int32 skinId = 3; // 皮肤
    optional int64 actorTypeId = 4; // 主卡ID，自己想办法读性别
    optional string svrName = 5; // 服务器名字
    optional string name = 6; // 名字
    optional int32 level = 7; // 玩家等级
    optional int32 battlePower = 8; // 总战力，有延迟
    optional int32 faceVal = 9; // 总颜值
}

// 推广活动，姜权
message GetInviteActivitys {
	optional string inviteCode = 1;	 // 我的邀请码
	optional int32 vipExp = 2; // vipExp
	repeated InviteActivity inviteActivity = 3; // 不知道什么玩意
	optional InvitedUser beInviteUid = 4;   //	本人被谁邀请来的
	repeated InvitedUser InvitedUserList = 5;	 // 我邀请的列表
	repeated string awardStr = 6;	 // 奖励串
	optional int32 todayExchanged = 7; // ？
	optional int32 updateCodeTimes = 8; // 修改邀请码次数
}

message Invite {
	optional GetInviteActivitys getInviteActivitys = 1; // 这都什么鸡巴玩意
	repeated Award awards = 2;
}

message RequireInviteAward { 
	optional GetInviteActivitys getInviteActivitys = 1; //
	repeated Award awards = 2;
}

message ExchangeInviteVipExp { 
    optional GetInviteActivitys getInviteActivitys              = 1; //
}

//评议系统
message ProposInfo{
	message NpcInfo{
		optional int64 ncpId = 1;
		optional int64 ncpType = 2; 
		optional int32 proId = 3;
	}
	
	repeated NpcInfo npcs = 1;
	optional NpcInfo select = 2;
	optional int64 lastTime = 3;
	optional int32 refreshCnt = 4;	//刷新次数
	
	optional int32 proType = 5;
	optional int64 targetValue = 6;
	optional int64 currentValue = 7;
	optional bool getReward = 8;
	optional bool isShow = 9;
	optional int32 cdsecond = 10;
}

message ProposRefresh{
	optional ProposInfo info = 1;
}

message ProposSelect{
	optional ProposInfo info = 1;
}

message ProposShow{
	optional ProposInfo info = 1;
}

message ProposAward {
	repeated Award awardList = 1;
}


message InstanceOpen{
	enum InstanceType{
		ITMJXW = 1;		//摸金校尉
		ITYGTX = 2;		//夜观天象
		ITDT = 3;		//每日答题
	}

	message InstanceInfo{
		optional int32 type = 1;
		optional bool isopen = 2; 
	}
	
	repeated InstanceInfo infoList = 1;
}

//五步圣将
message FiveStep {
	message StepInfo{
		optional int32 id = 1;
		optional bool isok = 2;
		optional bool isreward = 3;
	}
	
	repeated StepInfo infoList = 1;
}

message FiveStepAward {
	optional int32 id = 1;
	repeated Award awardList = 2;
}

//集赞 活动信息
message GetActivityLikeInfo {
	optional int32 yuanbao = 1;	//元宝数量
	optional int32 likenum = 2;	//目标赞数
}

//分享有礼 活动信息
message GetActivityShareInfo {
	optional bool picked = 1;	//玩家本周是否领取过奖励
}
//分享有礼 领取结果
message PickActivityShareAwardResult {
	optional bool success = 1;	//是否领取成功
	optional LanguageMsg msg = 2;	//如果失败，则为失败的原因 (客户端可不用)
}


////////////////////////////////////////////////////////////////////////////////////////////////////
//                                   版本三 相关协议
////////////////////////////////////////////////////////////////////////////////////////////////////

//-------------------------------------------君主系统--------------------------------------------

//君主 信息
message KingInfo {
	
	optional int32 tili = 5;		// 体力
	optional string guohao = 7;		//国号	为空时表示：未设立国号
	
	optional int32 jianguoTime = 13;	//建国时间 从建国到现在的秒数
	repeated IdNumItem meetCountList = 14;	//寻访人物相遇次数(相识了才会进入此列表)
	optional JibaiData jibaiData = 15;	//祭天数据
	
	optional int64 serverTime = 20;		//服务器时间，单位:毫秒
	repeated int32 openedSystem = 21;	//已开启的系统
	optional int32 xinzhi = 22;		//兴致值
	optional int32 ybShangciCount=23;	//当天元宝赏赐次数
	optional int32 saveFeiziStatus = 24;	//营救妃子状态  0:未出现 1:已出现 2:已领取
	optional int32 saveFeiziLeftTime = 25;	//营救妃子剩余秒数,<0表示可领取 (当状态为1时有效)
	optional int32 tiliResetCount = 26;	//今日体力已重置次数
	optional int32 enterCount = 27;		//进入主城的次数 大于0表示非首次进入
	optional int32 loginDay = 28;		//玩家登录游戏天数，第一天为1，第二天为2，以此类推
	repeated int32 advancePickedIds = 29;	//功能预告已领取的ID集合
	repeated WarDocument documentList = 30;	//待处理的公文
	repeated WarGift giftList = 31;		//限时礼包列表
	repeated int32 pickedWarBoxList = 32;	//已领的征服世界宝箱ID数组
	optional bool canBuyXunyuan = 33;	//是否可以购买寻缘礼包 true:是 false:否
	optional FeiziKarma feiziKarma = 34;	//奇缘数据

	message JibaiData {
		optional int32 weekDay = 1;	//今天星期几 1-7 表示星期一到星期日
		optional bool todayJibai =2;	//今日是否已祭拜
		optional bool tianshen =3;	//是否有天神赐福额外赠礼(如果为true,以下字段有效)
		optional bool hasTianshenReward = 4;	//是否有天神赠礼
		optional int32 rechargeNum = 5;	//今日已累计充值金额
		optional int32 targetNum = 6;	//目标金额
		repeated IdNumItem items = 7;	//天神奖励的物品(道具ID-->道具数量)(用于展示)
		optional int32 leftSec = 8;	//天神宝箱领取倒计时
		optional bool tianshenPickedToday = 9; // 今日有领取天神奖励
	}
	//公文
    message WarDocument {
        optional int32 countryId = 1;	//国家ID
        optional int32 documentId = 2;	//公文ID
        optional string option1RewardStr = 3;	//选项1奖励字符串 格式如:7:10002:1
        optional string option2RewardStr = 4;	//选项2奖励字符串 格式如:7:10002:1
    }
	//限时礼包
	message WarGift {
		optional int32 countryId = 1;	//国家ID
		optional int64 endTime = 2;	//结束时间
	}
	//奇缘玩法
    message FeiziKarma {
        optional int32 karmaId = 1;	//当前正在进行的奇缘ID
        optional int32 stage = 2;	//当前进行到的进度 0:阶段1-初始 1:阶段1-播放剧情 2:阶段1-进入奇缘界面 3:阶段2-初始 4:阶段2-播放剧情 5:阶段2-进入奇缘界面 6:阶段2-点击脱衣图
        optional int32 hp = 3;		//心理防线剩余值
    }
}

//批阅公文 操作成功返回
message ReadDocumentResult {
	optional int32 documentId = 1;	//公文ID
	optional int32 countryId = 2;	//国家ID
}	

//系统开启 通知
message SystemOpenNotify {
	repeated int32 systemIds = 1;	//系统ID

}
//设立/修改国号 返回
message NameGuohaoResult {

}
//获取国力排行榜 返回
message GuoliRankInfo {
	repeated PlayerKingInfo list = 1;	//玩家国力榜
	optional int32 leftSec = 2;		//结算剩余秒数
}
message PlayerKingInfo {
	optional int64 id = 1;	//玩家ID       -1:表示不存在
	optional int32 headcard = 2;	//头像卡牌ID
	optional string name = 3;	//昵称
	optional int32 lv = 4;		//等级
	optional int32 guoli = 5;	//国力
	optional string guohao = 6;	//国号
	optional int32 godId = 7;	// 圣职ID
	optional int32 skinId = 8;	// 皮肤
	optional int32 faceVal = 9;	// 颜值
	optional int64 actorTypeId = 10;	// 主角卡牌
	optional int32 battlePower = 11;	//战力

}

//-------------------------------------------后宫系统--------------------------------------------

//获取妃子列表
message GetFeiziList {
	repeated FeiziInfo list = 1;	//妃子列表
}
message FeiziInfo {
	optional int32 feiziId = 1;		//妃子ID
	optional int32 feiwei = 2;		//妃位
	optional int32 qinmi = 3;		//亲密度
	optional int32 meili = 4;		//美丽值
	optional int32 status = 5;		//状态  1:未怀孕 2:已怀孕
	repeated IdNumItem events = 6;		//妃子事件集合  id:事件ID  num:剩余秒数(-1表示无限期)
	optional int32 childNum = 7;		//子嗣数量
	optional int32 pregnantTime = 8;	//已怀孕的时间,超过10天则为怀胎完成状态 (单位:秒)
	optional int32 shili = 9;		//妃子势力值
	optional int32 maxChildNum = 10;	//生育能力(最大子嗣数量)
	repeated int32 skills = 11;		//已解锁的技能数组，3个技能分别用1,2,3代表，已解锁的将放入数组
}
//册封 成功返回
message CeFengResult {

}
//赏赐 成功返回
message ShangCiResult {
	optional int32 feiziId = 1;	//妃子ID
	optional int32 qinmiAdd = 2;	//亲密度增加
	optional int32 meiliAdd = 3;	//美丽值增加
}
//怀孕随机事件选择 成功返回(已废除)
//message DecideFeiziInviteResult {
//	optional int32 feiziId = 1;	//妃子ID
//	optional int32 eventId = 2;	//随机事件ID
//	optional int32 choose = 3;	//选择的选项 1或2
//}

//宠幸 成功返回(已废除)
//message ChongXingResult {
//	optional int32 qinmiAdd = 1;	//增加的亲密度
//	optional bool pregnant = 2;	//是否怀孕了 0:否 1:是
//	optional int32 feiziId = 3;	//妃子ID
//}

//生产 成功返回
message ShengChanResult {
	optional int32 feiziId = 1;	//妃子ID
	optional int32 babyType = 2;	//1:一个男孩 2:一个女孩 3:龙凤胎 4:女双胞胎 5:男双胞胎
	repeated int32 childIds = 3;	//出生的子嗣ID集合
}
//妃子剧情选项 选择返回
message ChooseFeiziStoryResult {
	optional int32 feiziId = 1;	//妃子ID
	optional int32 storyId = 2;	//剧情ID
	optional int32 option = 3;	//选择的选项 1或者2
}
//与妃子互动 结果返回
message InteractResult {
	optional int32 feiziId = 3;	//妃子ID
	optional int32 type = 2;	//互动结果类型： 0:普通 1:触发宠幸 2:触发宠幸且怀孕
	optional int32 qinmiAdd = 1;	//增加的亲密度
}
//结束妃子事件 成功返回
message FinishFeiziEventResult {
	
}
//领取营救的妃子 成功返回
message TakeSaveFeiziResult {

}
//体力重置成功 返回
message ResetTiliResult {

}
//-------------------------------------------寻访系统--------------------------------------------

//寻访 成功返回
message XunFangResult {
	optional int32 type = 1;	//类型 1:普通事件 2:迎娶事件
	optional int32 xunfangId = 2;	//寻访人物表的ID
	optional bool firstMeet = 3;	//是否首次相遇(需播放结识剧情,只有首次寻访到未迎娶妃子时为true)
	optional int32 awardId = 4;	//寻访奖励ID (-1表示无寻访奖励)
	repeated Award awardList = 5;	//寻访奖励内容
}

//-------------------------------------------子嗣系统--------------------------------------------

//子嗣列表
message GetChildInfoList {
	repeated ChildInfo childList = 1;	//子嗣列表
}
message ChildInfo {
	optional int32 hairId = 1;		//发型ID
	optional int32 faceId = 2;		//脸型ID
	optional int32 bodyId = 3;		//身体ID
	optional int32 sex = 4;			//性别 0:女 1:男
	optional string name = 5;		//名字 
	optional int32 age = 6;			//出生至今的秒数  客户端根据 12天=1年 计算年龄
	optional int32 mother = 7;		//母妃ID -1:主角养女 -2:收养的孪生兄妹 其他：母妃ID
	optional int32 zhili = 8;		//智力
	optional int32 zhengzhi = 9;		//政治
	optional int32 meili = 10;		//魅力
	optional int32 wuli = 11;		//武力
	optional int32 shiliZhi = 12;		//势力值
	optional int32 gongjiZhi = 13;		//功绩值
	repeated int32 jinengList = 14;		//技能列表
	repeated int32 xinggeList = 15;		//性格列表
	optional ChildMarryNpc peiou = 16;	//配偶
	optional int32 id = 17;			//子嗣ID 从1开始，可作为排行使用
	repeated IdNumItem eventList = 19;	//教育事件列表  事件ID->剩余秒数
	optional int32 tourStatus = 20;		//游历状态:  0:游历待确认 1:游历中 2:返回待确认 3:返回状态 4:外交派遣 5:兵营派遣 6.征服世界
	optional int32 zhuazhouResult = 21;	//抓周结果 0:商业 1:农业  2:文化 3:军事
	optional int32 stage = 22;		//成长阶段 0:婴儿 1:儿童 2:成年
	optional int32 techang = 23;		//0:商业 1:农业  2:文化 3:军事 4:全能
	repeated TourEvent tourEventList = 24;	//游历事件列表
	optional int32 jueweiId = 25;		//爵位ID  初始为-1
	optional int32 zhongxin = 26;		//培养重心  0:商业 1:农业  2:文化 3:军事
	optional int32 teacherId = 27;		//老师ID
	optional bool isFirstZhiHun = 28;	//是否第一次获取指婚对象
	optional int32 eyebrow = 29;		//眉眼
	optional int32 nose = 30;		//鼻子
	optional int32 mouth = 31;		//嘴巴
}
//游历事件的结构
message TourEvent {
	optional int32 id = 1; 		//唯一ID
	optional int32 num = 2;		//游历事件ID
	optional int32 shili = 3;	//获得的势力值
	optional int32 gongji = 4;	//获得的功绩值
	optional int32 childId = 5;	//子嗣ID
}
//起名/变更姓名   成功返回
message NameChildResult {
	
}
//晋封爵位 成功返回
message FengJueResult {
	optional int32 childId = 1;	//子嗣ID
}
//处理教育事件 成功返回
message DealEventResult {

}
//处理游历事件 成功返回
message DealTourEventResult {
	
}
//获取指婚对象 返回
message GetZhiHunInfo {
	optional int32 childId = 1;	//子嗣ID
	optional int32 leftTime = 2;	//CD时间，单位：秒  -1表示CD已到
	repeated ChildMarryNpc npcs = 3;	//2个指婚对象,数量固定为2
	optional bool isFirst = 4;	//是否首次获取
}
message ChildMarryNpc {
	optional int32 npcId = 1;	//npcId,指婚npc表的id
	optional string name = 2;	//姓名
	optional int32 hairId = 3;	//发型ID
	optional int32 faceId = 4;	//脸型ID
	optional int32 bodyId = 5;	//身体ID
	optional int32 jinengId = 6;	//技能ID,子嗣技能表中的ID
}
//缔结婚约 成功返回
message ChildMarryResult {
	
}
//换一批指婚对象 成功返回
message ChangeZhiHunInfoResult {
	
}

//购买限时商人商品 成功返回
message BuyMerchantResult {

}

//-------------------------------------------祭拜系统--------------------------------------------

//祭拜成功返回
message JibaiResult {
	optional bool crit = 1;	//是否触发暴击
	repeated Award awardList = 3;	//奖励内容
}

//领取天神赠礼 成功返回
message PickTianshenResult {
	
}


//--------------------------------------------外交系统--------------------------------------------
// 各个外交使臣具体信息
message InitEnvoyAllInfo{
	repeated EnvoyInfo records=1;// 各个使臣信息列表
	optional int32 completeConfirm=2;// 客户端已经完成确认 <0:没有子嗣 回归  1:有回归子嗣但未确认 2.已经确认
}
// 接见使臣操作 返回
message ContactEnvoyResult{	
}
// 各国外交使臣所有信息
message EnvoyAllInfo{
	optional int32 isContactToday=1;// 0:未接见 1:已接见
	repeated EnvoyInfo records=2;// 各个使臣信息列表
	optional int64 childBackHomeLeftime=3;// 子嗣回归倒计时<距离10点还有多久>
	repeated int32 lockedChildIds=4;// 已经分配出去的子嗣,锁定无法使用
}
//外交使臣
message EnvoyInfo{
	optional int32 id=1;// 使臣国家Id
	optional int32 envoyStatus=2;         // 是否新解锁 0 未解锁; 1 新解锁 ;2 已解锁
	optional int32 taskId = 3;	          //外交任务表 任务ID
	optional bool  isDispChild=4;         //是否派遣子嗣任务 ;也包括0子嗣派遣 
	optional int32 dispChildId=5;         // 派遣子嗣Id  
	optional int32 completStarLevel=6;    //完成度星级 0-5
	optional bool  isPickUpaward=7;       // 是否领取派遣奖励
	optional int32 feiziStatus=8;         //1 不可领取; 2 可领取妃子; (0 已完成领取)
}
//完成新解锁<操作结果标志>
message CompletNewUnlockEnvoy{
}

//派遣做任务 操作成功返回<操作成功标志>
message DispChildTaskAwardResult{
}
// 领取派遣奖励
message  PickUpDispAward{
	optional EnvoyInfo envoyInfo=1;// 外交国状态变化
	optional int32 contributionAwardVal=2;
}
// 领取妃子<操作成功标志接口>
message  PickUpFeizi{
}
// 子嗣回归
message ChildBackHomeList{
	optional int32 childCnt=1;//子嗣回归数量
	repeated int32 childIds=2;// 各个子嗣	
}
//--------------------------------------------主城界面--------------------------------------------

//进入主城界面 返回
message MainCityInfo {
	repeated Event childStaticEventList = 2;	//子嗣固定教育事件列表 注：此列表已按倒计时排序，第一个为最小的一个倒计时
	repeated TourEvent childTourEventList = 3;	//子嗣游历事件列表
	repeated Event childRandomEventList = 4;	//子嗣随机教育事件列表  注：此列表已按倒计时排序，第一个为最小的一个倒计时
	repeated Merchant merchant = 5;			//限时商人
	
	//限时商人
	message Merchant {
		optional int32 childId = 1;	//子嗣ID，是由哪个
		repeated IdNumItem items = 2;	//商品列表 id:商品ID num:0->可购买,1->已购买
		optional int32 leftSec = 3;	//商店剩余时间，单位：秒
	}
	//子嗣事件公用结构
	message Event {
		optional int32 id = 1;		//子嗣ID
		optional int32 eventId = 2;	//事件ID
		optional int32 leftTime = 3;	//处理剩余时间(单位:秒)
	}
}

//--------------------------------------------国家系统(已作废，重构为兵营)--------------------------------------------



//--------------------------------------------科技系统--------------------------------------------

//获取科技树信息返回
message GetScienceInfo {
	repeated int32 sciences = 1;		//已学习的科技ID集合
	optional int32 studyScienceId = 2;	//正在学习的科技ID, -1表示无科技正在学习
	optional int32 leftSec = 3;		//学习剩余秒数
	optional bool redpoint = 4;		//是否显示红点
}

//学习科技 操作成功返回
message LightScienceResult {
	optional int32 scienceId = 1;	//科技ID
}

//科技加速 成功返回
message ScienceSpeedUpResult {
	optional int32 scienceId = 1;	//科技ID
}

//获取最近完成的科技弹框
message GetScienceAlert {
	optional int32 scienceId = 1;	//科技ID -1:表示无
}


//--------------------------------------------神兽系统--------------------------------------------


// 神兽基本信息<对应奇迹>
message ShenShouInfo{
	 optional int32 ssId=1;// 真龙技 [青龙20301,白虎20302,朱雀20303,玄武20304] 
	 optional int32 lv=2;// 神兽等级
	 optional int32 position=3;// 神兽的站位 默认站位 0 未激活; 1第一个队列;2第二个队列 ...以此类推.
	 optional int32 qijiId=4;// 对应奇迹Id
	 optional int64 leftTime=5;// 开启时间 -1 未解锁 0 已经开启 > 0  还剩多久开启
}

// 经验丹刷新
message MagicExpsNotify {
	repeated MagicExpDTO magicExps = 1; // 经验丹
}

// 内嵌活动类型
enum ActType {
	AT_RC_SUM = 1; // 累积充值
	AT_COST_SUM = 2; // 累积消费
	AT_TREASURE = 3; // 秘宝兑换
	AT_SHOP = 4; // 特卖
	AT_LOGIN_MAIL = 5; // 每日邮件
} 

// 内嵌活动开启类型
enum ActOpenType {
	AOT_NEW_SVR = 1; // 新服活动
	AOT_W5 = 2; // 循环活动周五开启
	AOT_W671 = 3; // 循环活动周六、日、一开启
	AOT_W234 = 4; // 循环活动周二、三、四开启
} 

// 仁德商店
message RendeShopMsg {
	repeated Award award = 1; // 奖励
}

//神像信息
message GetStatueInfo {
	optional int32 serverId = 1;		//服务器ID
	optional int32 playerId = 2;		//玩家ID
	optional int32 actorTypeId = 3;		//主角卡牌ID
	optional string name = 4;		//昵称
	optional int32 statueId = 5;		//雕像ID
	optional int32 mobaiCount = 6;		//膜拜人次
	optional int32 yuanbao = 7;		//当前神像拥有者本轮充值元宝
	optional int32 destoryLeftSec = 8;	//毁坏剩余秒数

	//下面是玩家自己的神像数据
	optional int32 rechargeNum = 9;		//自己本轮的充值元宝数
	optional bool todayMobai = 10;		//今日是否膜拜
	optional bool todayShouqu = 11;		//今日是否受取
	optional int32 totalRechargeNum =12;	//自己历史充值元宝总数
}
//神像膜拜 成功返回
message StatueMobaiResult {

}
//神像受取 成功返回
message StatueShouquResult {

}

//结拜
message SwornInfo {
	repeated int64 npcs = 1;
	repeated bool lines = 2;
	optional int32 level = 3;
}

message Sworn {
	repeated SwornInfo sworns = 1;
}

message DoSworn {
	repeated SwornInfo sworns = 1;
}

message FreeSworn {
	repeated Award awardList = 1;
	repeated SwornInfo sworns = 2;
}

message FetterSworn {
	repeated SwornInfo sworns = 1;
}

message UpSworn {
	repeated SwornInfo sworns = 1;
}

// 服务器时间
message SysTimeMsg {
	optional int64 sysTime = 1; // 当前服务器时间戳
	optional int32 offset = 2; // 当前时区偏差毫秒，如果东八区为28800000
}

//--------------------------------------------兵营系统--------------------------------------------

//兵营信息
message BarrackInfoList {
	message BarrackInfo {
		optional int32 type = 1;	//兵营类型  0:步兵营 1:弓兵营 2:军械所 3:医馆
		optional int32 lv = 2;		//等级
		repeated int32 childIds = 3;	//派遣的子嗣ID集合 (固定3个 -1:无派遣)
	}
	repeated BarrackInfo list = 1;		    //兵营集合 (固定4个且顺序固定 0:步兵营 1:弓兵营 2:军械所 3:医馆)
	optional int32 nextChanchuLeftTime = 2;	//距离下次产出剩余的秒数  -1:已有产出 -2:不会有产出 其他:剩余秒数 (客户端用于判定是否需要发领取产出协议)
	optional int32 todaySpeedCount = 3;	    //今日已加速多少次
	optional int32 hours = 4;	            //已累积的小时数，客户端用作显示红点
}

//兵营升级 成功返回
message BarrackLvUpResult {
	optional int32 type = 1;	//兵营类型  0:步兵营 1:弓兵营 2:军械所 3:医馆
	optional int32 newLv = 2;	//新等级
}
//领取兵营累积的资源 成功返回
message PickBarrackAwardResult {
	optional int32 hour = 1;	//几小时的产出 0:客户端不做处理
	repeated int32 chanchu = 2;	//产出数组，固定6个 分别为:0:步兵营 1:弓兵营 2:军械所 3:步兵(复活) 4.弓兵(复活) 5.军械(复活)
}
//派遣子嗣管理兵营 成功返回
message BarrackSendChildResult {
	
}
//兵营加速2小时 成功返回
message BarrackSpeedUpResult {
	repeated int32 chanchu = 1;	//产出数组，固定6个 分别为:0:步兵营 1:弓兵营 2:军械所 3:步兵(复活) 4.弓兵(复活) 5.军械(复活)
	optional int32 itemId = 2;	//每次加速时，随机兵种士兵X3000   0:步兵 1:弓兵 2:军械

}

// 子嗣状态
enum PrinceStatus {
	PS_TravelBegin = 0; // 游历状态: 0:游历待确认 1:游历中 2:返回待确认 3:返回状态    4 派遣执行任务中    5:派遣兵营    <4<-->3>   3-->0-->1-->2-->3
	PS_Traveling = 1; // 游历中
	PS_TravelBacking = 2; // 返回待确认
	PS_TravelBacked = 3; // 返回状态
	PS_Barrack = 5; // 派遣兵营
	PS_WarCity = 6; // 征服世界市长
}

// ------------------------------------------------ 征服世界 ---------------------------------------
// 征服世界
enum SoldierType {
	ST_LandForce = 1; // 步兵
	ST_Archers = 2; // 弓兵
	ST_CityForce = 3; // 攻城兵
}

// 兵道具
enum SoldierItem {
	SI_LandForce = 42217; // 步兵
	SI_Archers = 42218; // 弓兵
	SI_CityForce = 42219; // 攻城兵
}

// NPC城池
message NpcCityDTO {
		optional int32 tplId = 1; // 城池ID
		optional int32 landForce = 2; // 步兵剩余量
		optional int32 archers = 3; // 弓兵剩余量
		optional int32 cityForce = 4; // 攻城兵剩余量
}

// 税收
message CityTaxDTO {
		optional int32 tplId = 1; // 城池ID
		optional int64 lastTaxTime = 2; // 最近税收时间
		optional int32 masterId = 3; // 市长，也就是子嗣
		optional int64 lastSalaryTime = 4; // 最近市长发薪时间
}

// 简单，粗暴，合理
message RoleWarDTO {
	optional int32 landForce = 1; // 步兵总量
	optional int32 landWounded = 2; // 步兵伤兵
	optional int32 archers = 3; // 弓兵总量
	optional int32 archersWounded = 4; // 弓兵伤兵
	optional int32 cityForce = 5; // 攻城兵总量
	optional int32 cityWounded = 6; // 攻城兵伤兵
	optional NpcCityDTO npcCity = 7; // 正在进攻的城池ID
	repeated int32 formations = 8; // 阵型
	optional int32 formationUsed = 9; // 正在使用的阵型	
	repeated CityTaxDTO taxList = 10; // 税收 
}

// 攻城战信息
message WarInfoMsg {
	optional RoleWarDTO info = 1;
}

// 攻城战报，使用类型枚举方便兵种扩建
message CityBattleDTO {
	optional int32 cityId = 1; // 目标城ID，将来PVP可能为null
	optional int32 result = 2; // 战斗结果，0输，1平，2赢
	
	message SoldierDTO {
		optional SoldierType type = 1; // 类型
		optional int32 count = 2; // 兵力
		optional int32 attack = 3; // 攻击力
		optional int32 defend = 4; // 防御力
	}
	repeated SoldierDTO attacker = 3; // 进攻方
	repeated SoldierDTO defender = 4; // 进攻方
	 
	message CityBattleRoundDTO {
		// 伤害数据
		message SoldierHurtDTO {
			optional SoldierType attackType = 1; // 进攻类型
			optional SoldierType defendType = 2; // 防守类型
			optional int32 lose = 3; // 战损
		}
		repeated SoldierHurtDTO attackHurt = 1; // 攻城者杀伤
		repeated SoldierHurtDTO defendHurt = 2; // 防城者杀伤
	}
	repeated CityBattleRoundDTO rounds = 5; // 3轮战报
	
	message SoldierWoundedDTO {
		optional SoldierType attackType = 1; // 兵种
		optional int32 count = 2; // 兵
	}
	repeated SoldierWoundedDTO woundeds = 6; // 获得伤兵
}

// 攻城
message AttackCityMsg {
	optional CityBattleDTO battleInfo = 1; // 战报
	optional NpcCityDTO city = 2; // 攻城信息，如果打下城池，那么city是下一个城池的数据
	optional CityTaxDTO tax = 3; // 打下都城产生税收
	optional int32 formation = 4; // 触发激活阵型
	repeated Award awardList = 5; // 战利品
}

// 升级阵法
message FormationUpMsg {
	optional int32 formation = 1; // 新的阵型
}

message FormationChangeMsg {
	optional int32 formation = 1; // 新的阵型
}

// 税收
message CityTaxMsg {
	message TaxRewardDTO {
		optional CityTaxDTO tax = 1; // 刷新的INFO
		repeated Award awardList = 2; // 奖励
		repeated int32 events = 3; // 触发的事件
	}
	repeated TaxRewardDTO rewards = 1;
	optional int32 pastHours = 2; // 经历小时数字，不同城池取最大的经历时间，整点产出
}

// 封地
message LandBestowMsg {
	optional CityTaxDTO tax = 1; // 刷新的INFO
}

// ClientDataSetMsg/key/val 如果val是空，则删除key
message ClientDataSetMsg {
	optional ClientDataDTO data = 1; // 客户端设置
}

// 系统buff
message SysBuffDTO {
	optional int32 buffId = 1; // 加成表ID
	optional int64 expiredTime = 2; // 失效时间
}

// 推送新buf
message SysBuffNotifyMsg {
	repeated SysBuffDTO sysBuffs = 1;
}

// 系统buff类型
enum SysBuffType {
	SBT_GJ_EXP = 1; // 挂机经验
	SBT_GJ_COIN = 2; // 挂机铜币
	SBT_GJ_FANS = 3; // 挂机子民
	SBT_GJ_YW = 4; // 演武战斗获得4维加成
	SBT_CBDZ_BATTLE = 5; // 赤壁大战获得4维加成
	SBT_SJ_BATTLE = 6; // 世界战斗获得4维加成
	SBT_CBDZ_REWARD = 7; // 赤壁大战获得积分及勋章加成
	SBT_SJ_REWARD = 8; // 世界战斗获得威望加成
	SBT_MJXW = 9; // 每日增加摸金校尉初始铲子个数
	SBT_CQ_SW = 10; // 抽签奖励的声望加成
	SBT_ZL = 11; // 每日增加政令次数
	SBT_QMZJ = 12; // 青梅煮酒奖励的元宝加成
	SBT_JB = 13; // 每日祭拜获得额外奖励
}
//-------------------------------------------版本11-------------------------------------------------------

//月卡状态
message GetMonthCardStatus {
	optional int32 card0Status = 1;		//月卡状态 0:未购 1:已购且今日已领 2:已购且今日未领
	optional int32 card0LeftDay = 2;	//月卡剩余天数 -1:未购买过 0:月卡到期 其他:剩余天数
	optional int32 card1Status = 3;		//终生卡状态 0:未购 1:已购且今日已领 2:已购且今日未领
	optional int32 doubleCardStatus = 4;	//双卡状态 0:未激活 1:已激活且已领取 2:已激活且未领取
	optional int32 todayLeftSec = 5;	//本日领取倒计时(剩余秒数) 单位:秒
}

//领取月卡 成功返回
message PickMonthCardResult {
}

message GetHeroCollectionList {
	repeated string caoweiIds   = 1;
	repeated string xishuIds    = 2;
	repeated string dongwuIds   = 3;
	repeated string qunxiongIds = 4;
	repeated string guIds = 5;
}

// 武将评价1
message NpcEvaluateDTO {
	optional string code = 1; // NPC
	repeated int32 options = 2; // 问题的各个选项
}

// 武将评价2
message NpcEvaluateInfoDTO {
	optional string code = 1;
	message EvaluateInfoDTO {
		message EvaluateCountDTO {
			optional int32 optionId = 1; // 选项，1,2,3,4
			optional int32 count = 2; // 点赞数量，注：在CharactorInfo中此属性为0
		}
		optional int32 listId = 1; // 评价项
		repeated EvaluateCountDTO infos = 2; // 评价列表
	}
	repeated EvaluateInfoDTO infos = 2; // 点赞信息
}

// 武将评价, 客户端刷新一下就好了
message NpcEvaluateMsg{
	optional NpcEvaluateInfoDTO info = 1; // 新的武将评价 
	optional NpcEvaluateDTO optionInfo = 2; // 自己的评价信息
}

// 武将评价信息
message  NpcEvaluateInfoMsg {
	optional NpcEvaluateInfoDTO info = 1; // 该武将评价信息
	optional NpcEvaluateDTO optionInfo = 2; // 自己的评价信息
}

//虎符令使用返回
message UseTigerResult {
	optional int32 landForce = 1;	//获得的步兵
	optional int32 archers = 2;	//获得的弓兵
	optional int32 cityForce = 3;	//获得的攻城兵
}

// 回答问卷进度
message QuestionInfoMsg {
	optional int32 currentId = 1; // 当前问题
}

message QuestionAnswerMsg {
	optional bool right = 1; // 是否答对
	optional int32 currentId = 2; // 当前问题，如果答对则是下一个问题
	repeated Award awardList = 3; // 当最后一个问题结束后发送奖励
}

//领取功能开启预告的奖励 成功返回
message PickAdvanceNoticeAwardResult {
	
}

//获取玩家金蛋数据
message GetGoldEggInfo {
	repeated GoldEgg eggs = 1;	//金蛋数组，固定10个
	optional int32 leftTime = 2;	//倒计时(秒)
	message GoldEgg {
		optional string rewardStr = 1;	//未开的蛋为空字符串，已开的蛋则为开出的奖励内容(7:40001:100这种格式)
		optional int32 eggId = 2;	//金蛋ID,配表里的ID
	}
}
//砸金蛋
message SmashGoldEggResult {
	optional bool rare = 1;		//true:稀有蛋 false:普通蛋
	repeated Award awardList = 2;	//获得的奖励
	optional int32 eggId = 3;	//金蛋ID，配表里的ID
}

// -------------------- 塔防功能移植 ------------------------------

// 保卫长城
message ProtectLwMsg {
	optional int32 score = 1; // 客户端传入的杀怪数，用于模拟奖励，请更新info 杀怪数量和最高杀怪数量
}

// 保卫长城阶段奖励
message ProtectLwRewardMsg {
	optional int32 tplId = 1; // 客户端传入的模板ID，用于模拟奖励，请更新info log数据
}

message PLwRankDTO {
	optional int64 id = 1; // 玩家ID
	optional string name = 2; // 玩家名字
	optional int32 level = 3; // 玩家等级
	optional int32 score = 4; // 积分
	optional int64 upTime = 5; // 上榜时间
    optional int64 actorTypeId = 6;
    optional int32 faceVal = 7; // 颜值
    optional int32 godId = 8; // 神职ID
    optional int32 battlePower = 9; // 战力
    optional int32 skinId = 10; // 正在使用的皮肤
}

// 保卫长城排行榜
message ProtectLwRankMsg {
	repeated PLwRankDTO ranks = 1;
	optional int32 score = 2; // 自己的积分
	optional int32 leftTime=3;	// 距离结算时间还有多少 秒
}

// 十面埋伏
message AmbushMsg {
	repeated Award awards = 1; // 奖励
	optional int32 nextAmbushLevel = 2; // 下一级等级
}

// 周末玩法奖励
message WeekStageMsg {
	repeated Award awards = 1; // 奖励
	optional int32 nextLevel = 2; // 下一级等级
}

message ProtectLwChallenge{
  optional bool status=1; //true为可以挑战 false 为不能挑战
}

//--------------------------------------------聊天管理后台-客服工具--------------------------------------------
message CsMessage {
	optional int64 csId = 1; // 客服ID
	optional string csName = 2; // 客服姓名
	optional int64 serverId = 3; //区服ID
	optional string serverName = 4; // 区服名称
	optional int64 playerId = 5; //玩家ID
	optional string playerName = 6; // 玩家姓名
	optional int64 createTime = 7 ; //回复时间戳
	optional string content = 8; // 客服回复的消息
}

//-------------------------------------------游戏助手-------------------------------------------------------

//游戏助手内容
message HelperInfo {
	optional string content = 1;	//帖子内容，json格式
	optional bool isNewest = 2;	//客户端缓存是否是最新的 true:最新的,不需要替换content false:不是最新的，需要替换content
}
//游戏助手点赞数以及自己的点赞数据
message HelperRateInfo {
	repeated Rate rates = 1;	//帖子点赞/踩数据
	repeated int32 likeList = 2;	//玩家(自己)点过赞的帖子集合
	repeated int32 unlikeList = 3;	//玩家(自己)点过踩的帖子集合
	
	message Rate {
		optional int32 id = 1;		//帖子ID
		optional int32 likeNum = 2;	//点赞数
		optional int32 unlikeNum = 3;	//点踩数
	}
}
//点赞成功返回
message RateHelperResult {

}
// ----------------------------------------------------- 主线任务 --------------------------------------------------

//主线任务
message TaskInfoDTO {
	optional int32 taskId = 1;
	optional int32 progress = 2; // 进度
}
// 主线任务信息
message TaskInfoMsg {
	optional TaskInfoDTO info = 1;
}

// 任务提交
message TaskCommitMsg {
	repeated Award awardList = 1; // 奖励列表 
	optional TaskInfoDTO nextTask = 2; // 下一个任务
}

// ----------------------------------------------------- 攻城掠地 --------------------------------------------------
//完成奖励
message AttackCityCommitTaskMsg{
	optional int32 taskId = 1;
	repeated Award awardList = 2;
}


// -------------------------------- 巧变应敌 -------------------------------------
enum QbydType {
	QT_CHANGBANPO = 2; // 长坂坡之战
	QT_CAOCHUANJIEJIAN = 1; // 草船借箭
	QT_YEXIWUCHAO = 0; // 夜袭乌巢
}

// 巧变应敌功能
message QbydDTO {
	message QbInfoDTO {
		repeated int64 npcId = 1; // 这个是流水ID，非模板ID
		optional QbydType type = 2; // 这个是类型
		optional int32 currentStageId = 3; // 当前关卡，未攻击通过
		optional int32 attackTimes = 4; // 攻击次数
		optional int32 attackBuyTimes = 5; // 攻击购买次数
		optional int32 sweepTimes = 6; // 扫荡次数
		optional int32 sweepBuyTimes = 7; // 扫荡购买次数
		optional int64 overTime = 8; // 结束时间
		optional int32 sweepStageId = 9; // 可扫荡关卡ID 已经通过
		
	}
	repeated QbInfoDTO datas = 1; // 信息
	optional int64 sysTime = 2; // 系统当前时间，overTime-sysTime即为倒计时的毫秒数，如果小于0则为关闭状态
}
// 巧变功能信息
message QbInfoMsg {
	optional QbydDTO info = 1; // 基础信息
}

// 设置阵型
message QbFormationMsg {
	optional string formations = 1; // 客户端传入的列表
}
// 巧变攻击
message QbAttackMsg {
	repeated Award awardList = 1; // 奖励列表
	optional bool isWin = 2; // 是否赢，true：赢
}

// 巧变扫荡
message QbSweepMsg {
    message QbSweepDTO {
        repeated Award awardList = 1; // 奖励列表
    }
    repeated QbSweepDTO datas = 1;    // 多次扫荡
}

// 购买攻击次数
message QbBuyAttackTimesMsg {
	optional int32 dollar = 1; // 剩余元宝
	optional int32 attackBuyTimes = 2; // 攻击购买次数
}

// 购买扫荡次数
message QbBuySweepTimesMsg {
	optional int32 dollar = 1; // 剩余元宝
	optional int32 sweepBuyTimes = 2; // 攻击购买次数
}

// 巧变战报
message QbBattleInfoMsg {
	repeated RecordLineup recordLineup = 1; // 通关战报，1次首次，4次最新
}

//时装到期提醒
message SkinExpireNotice {
	optional int32 skinId = 1;	//过期的时装ID，当前只会有101和102两个时装会过期
}



//妃子排行榜
message GetFeiziRank {
	repeated RankData list = 1;	//排名列表
	optional int32 leftTime=2;	// 距离结算时间还有多少 秒
}
//子嗣排行榜
message GetChildRank {
	repeated RankData list = 1;	//排名列表
	optional int32 leftTime=2;	// 距离结算时间还有多少 秒
}
//征服世界排行榜
message GetWarRank {
	repeated RankData list = 1;	//排名列表
	optional int32 leftTime=2;	// 距离结算时间还有多少 秒
}

//领取征服世界预告宝箱 成功返回
message PickWarBoxResult {

}

//水果机大汉宝库中奖数据
message FruitPrizeData{
    optional int64 id =1; //playerid
	optional string name =2; //玩家名称
	optional int64 actorTypeId = 3; //队长卡牌id
	optional int32 level =5;
	optional int32 serverId =6;
	optional int64 time = 7;
	optional int32 baoku=8;//中奖数量
	optional int32 faceVal = 9; // 颜值
    optional int32 godId = 10; // 神职ID
    optional int32 battlePower = 11; // 战力
    optional int32 skinId = 12; // 正在使用的皮肤
}
//水果机大汉宝库中奖列表
message BaokuPrizeRecord{
	repeated  FruitPrizeData list=1;
}

message FruitPrizeMobai{
	optional FruitPrizeMobaiInfo info=1;//膜拜信息
	repeated Award awardList = 2;
}

message FruitPrizeMobaiInfo{
	optional FruitPrizeData king=1;//膜拜皇帝信息(可能为null)
	optional int64 mobaiRemainingSeconds = 2; // mobai倒计时
	optional int32 mobaiStatus=3 ;//膜拜状态(0为今天已经膜拜,1为可以膜拜)
	optional int64 fortuneRemainingSeconds=4; //财神宝箱倒计时(未触发财神0)
    optional int32 fortuneStatus=5;//财神显灵状态(0未触发,1触发破冰充值,2常规充值)
    optional int32 mobai = 6;//膜拜次数
    optional bool  hasAward=7;    //破冰充值是否可以领奖
}

message FruitSystemMessageList{
	repeated SysMessage list =1;
}

//水果机福神充值返回信息
message FruitFortuneInfo{
  optional int32 fortuneStatus=1;//财神显灵状态(1触发破冰充值,2常规充值)
  optional bool  hasAward=3;    //破冰充值是否可以领奖
  optional bool  finishFristPay=4; //是否完成首冲
  optional int64 fortuneRemainingSeconds=5; //财神宝箱倒计时(未触发财神0)
}

message FruitFortuneAward{
  repeated Award awardList = 1;
}

// #2229 改进 审讯俘虏：后端修改，俘虏死亡后，宝箱的奖励协议单独发送
message GodPracticeAwardDrawMsg {
	repeated Award overAwardList = 1;
}

message PaymentOk{
	optional float money = 1;		//充值金额
	optional int32 payType = 2;		//充值类型
}

//--------------------------------------三界争霸 版本11 改动------------------------------------------
//领取建设进度奖励 成功返回
message PickBuildingProgressRewardResult {
	
}
//建设国家 成功返回
message BuildingConstructResult {
	optional int32 id = 1;	//建设方式 1-3
}

// -------------------------------- 重做结义功能 -------------------------------------
// 结拜
message SwornDTO {
	optional int32 location = 1; // 位置
	optional int32 lineLevel = 2; // ；连线等级
	optional int32 level = 3; // 升华等级
}

// 结义信息
message SwornInfoMsg {
	repeated SwornDTO sworns = 1; // 结义队列
}

// 结义操作
message DoSwornMsg {
	repeated SwornDTO sworns = 1; // 结义队列
}

// 连线
message LineSwornMsg {
	repeated SwornDTO sworns = 1; // 结义队列
}
// 升华
message UpSwornMsg {
	repeated SwornDTO sworns = 1; // 结义队列
}


//--------------------------------------三界争霸 版本11 改动------------------------------------------


//发布国王任务 成功返回
message PublishKingTaskResult {
	
}
//领取国王任务奖励 成功返回
message PickKingTaskRewardResult {
	
}
//修改“明日继续攻打该城池”设置 成功返回
message ChangeTomorrowSettingResult {
	
}
//许愿列表
message GetWishList {
	repeated Wish list = 1;	//许愿列表
	//许愿对象
	message Wish {
		optional int64 roleId = 1;	//跨服角色ID
		optional string name = 2;	//昵称
		optional int32 wishId = 3;	//愿望ID
		optional int32 helpCount = 4;	//已被协助的次数
		optional int32 lv = 5;		//等级
		optional int32 godId = 6; // 圣职ID
		optional int32 skinId = 7; // 皮肤
		optional int32 faceVal = 8; // 颜值
		optional int64 actorTypeId = 9; // 主角卡牌
	}
}
//许愿 成功返回
message WishResult {
	
}
//协助 结果返回
message HelpWishResult {
	optional int32 ret = 1;		//协助结果 0:该愿望已实现 1:协助成功
	optional int64 roleId = 2;	//协助的角色ID
	optional int32 helpCount = 3;	//此愿望已被协助的次数
}

message AnswerClose{
}

// 进入界面推送所有数据
message AllXGameData{
	repeated XGameData allGameData=1;
	optional XGameActiveTask  task=2;
}

// 版本11 分支 (周末活动+趣味玩法)
// 小游戏数据(单个游戏)
message XGameData{
	optional int32  gameType=1;// 草船借箭 , 2048
	optional int32  hisHighestScore=2;// 历史最高分
	optional int32  todayHighestScore=3;// 今日最高分
	optional int32  lastScore=4;// 上一局分数
	optional int32  pickupStartLevel=5;// 上一次领取星级
}
// 游戏活跃任务
message XGameActiveTask{
	optional int32 currActiveVal=1;// 当前活跃值
	repeated int32 pickUpBoxMark=2;// 领取宝箱的标记 [2,1,1,0,0]  2 已经领取 1 可以领取 0 不可领取
}

//  周末打折 活动[暂未开通]
message  ZmdzData{
	repeated int32 rechargeRecords =1;// [打折礼包1,打折礼包2,打折礼包3] 0 未购买, 1 已购买,2 活动未开放
	optional int32 activeEndTime=2;// 活动结束时间 [-1 活动未开启,>0 还剩多久结束]
}

//三界开启预告信息
message SanjieOpenState {
	optional bool pickedAward = 1;	//是否领取预告奖励 true:已领取 false:未领取
	optional int32 leftSec = 2;	//三界开启剩余秒数(预告中倒计时用)  -1:已开启
}

//领取三界预告奖励 成功返回
message PickSanjieOpenRewardResult {

}
//三界-调兵成功返回
message DiaobingResult {
	repeated CityPlayer players = 1;	//调兵的玩家
}

//四海扬威-红点
message LundaoRedPoint {

}

//三界-攻打流寇 成功返回
message AttackThiefResult {
	optional int32 thiefId = 1;	//流寇ID
	optional int32 count = 2;	//战斗次数
	repeated bool results = 3;	//战斗结果 true:胜利 false:失败
}


//--------------------------------------------三界宴会系统--------------------------------------

//三界-宴会列表
message GetDinnerListInfo {
	repeated Dinner dinners = 1;		//宴会列表
	optional int32 leftSec = 2;		//宴会结束剩余秒数
	repeated int32 myJoinedDinnerIds = 3;	//我已参与的宴会ID集合
	optional int32 leftJoinCount = 4;	//剩余参加宴会次数
	message Dinner {
		optional int32 dinnerId = 1;		//宴会唯一ID
		optional int32 dinnerType = 2;		//宴会类型(宴会表ID)
		optional CityPlayer master = 3;		//举办宴会的玩家信息
		optional int32 guestCount = 4;		//当前宾客数量
	}
}

//三界-宴会详情
message GetDinnerDetailInfo {
	optional int32 dinnerId = 1;		//宴会唯一ID
	optional int32 dinnerType = 2;		//宴会类型(宴会表ID)
	optional CityPlayer master = 3;		//举办宴会的玩家信息
	repeated CityPlayer guests = 4;		//客人列表
	repeated int32 thankWordIds = 5;	//答谢语ID集合
	optional int32 leftSec = 6;		//宴会结束剩余秒数
}
//三界-举办宴会 操作成功返回
message HoldDinnerResult {
	optional int32 dinnerId = 1;	//宴会唯一ID
}
//三界-赴宴 成功返回
message JoinDinnerResult {
	optional int32 dinnerId = 1;	//宴会唯一ID
}
//新手引导-选择妃子
message GuideMarryResult {
	optional int32 feiziId = 1;
}
//三界-战吼
message WarcryResult {

}

//---------------------------------------兵器所--------------------------------------------

//兵器所升级 成功返回
message LvUpEquipTypeResult {

}
//进度保存 操作成功返回
message SaveFeiziKarmaStageResult {

}
//妃子审讯 操作成功返回
message PersuadeFeiziResult {

}